# NOTE: this file expects to find the $CKAN_IMAGE_TAG variable in its environment

version: "3.8"

x-partial-ckan-volumes: &partial-ckan-volumes
  volumes:
    - type: bind
      source: ./ckan-settings.ini
      target: /home/appuser/ckan.ini
    - type: bind
      source: ./who.ini
      target: /home/appuser/who.ini

networks:
  default:
    driver: bridge

services:

  ckan-web:
    <<: *partial-ckan-volumes
    image: saeoss:${CKAN_IMAGE_TAG}
    environment:
      SENTRY_DSN: ${SENTRY_DSN}

  ckan-datapusher:
    image: ckan/ckan-base-datapusher:0.0.20
    ports:
      - "8800:8800"

  ckan-background-worker:
    <<: *partial-ckan-volumes
    image: saeoss:${CKAN_IMAGE_TAG}
    command: ["launch-ckan-cli", "jobs", "worker"]

  ckan-harvesting-gatherer:
    <<: *partial-ckan-volumes
    image: saeoss:${CKAN_IMAGE_TAG}
    command: ["launch-ckan-cli", "harvester", "gather-consumer"]

  ckan-harvesting-fetcher:
    <<: *partial-ckan-volumes
    image: saeoss:${CKAN_IMAGE_TAG}
    command: ["launch-ckan-cli", "harvester", "fetch-consumer"]

  # NOTE: This needs to be ran as a periodic command, check the
  # docker-compose.dev.yml file for additional comment
  ckan-harvesting-runner:
    <<: *partial-ckan-volumes
    image: saeoss:${CKAN_IMAGE_TAG}
    command: ["launch-ckan-cli", "harvester", "run"]

  ckan-mail-sender:
    image: saeoss:${CKAN_IMAGE_TAG}

  pycsw:
    image: "geopython/pycsw@sha256:acd671b7594de38ac1b87621aeaf7468f9fc746043555cda191523bdd0dc4e8f"
    volumes:
      - type: bind
        source: $PWD/pycsw/pycsw-config.cfg
        target: /etc/pycsw/pycsw.cfg
      - type: bind
        source: $PWD/pycsw/pycsw_repository_mappings.py
        target: /etc/pycsw/pycsw_repository_mappings.py
      - type: bind
        source: $PWD/pycsw/pycsw-config.yml
        target: /etc/pycsw/pycsw.yml

  # NOTE: This needs to be ran as a periodic command, check the
  # docker-compose.dev.yml file for additional comment
  pycsw-refresher:
    image: saeoss:${CKAN_IMAGE_TAG}

  ckan-db:
    image: postgis/postgis:13-3.1
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata

  datastore-db:
    image: postgis/postgis:13-3.1
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      DATASTORE_READONLY_USER: datastore-default
      DATASTORE_READONLY_USER_PASSWORD: datastore-default
    volumes:
      - type: bind
        source: $PWD/datastore-db
        target: /docker-entrypoint-initdb.d

  solr:
    build: https://github.com/kartoza/kartoza_ckan_solr.git#main
    ports:
      - 8983:8983
    environment:
      - SOLR_HEAP=2g
    volumes:
      - solr-data:/var/solr
      - ./solr/managed-schema:/var/solr/data/ckan/conf/managed-schema

  redis:
    image: redis:6.2

volumes:
  solr-data:
