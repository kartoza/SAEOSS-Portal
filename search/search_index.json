{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SAEOSS-Portal","text":"<p>The SAEOSS-Portal has been proposed as a system of software components functioning together as the National Central Earth Observation Geospatial Repository. The focus is on compliance with metadata, and open geospatial API, standards as well as user impact maximization.</p> <p> </p>"},{"location":"#introduction","title":"Introduction","text":""},{"location":"#purpose","title":"Purpose","text":"<p>The SAEOSS-Portal is designed to be a robust, information sharing platform with the aim of promoting information sharing from various organizations related to the research conducted by the South-African National Space Agency (SANSA) as well as the South-African Environmental Observation Network (SAEON) and other supporting organizations.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>We would love to collaborate with you! First please read our contributor guidelines which describe how to report issues, plan and contribute feature additions etc.</p>"},{"location":"#code-of-conduct","title":"Code of Conduct","text":"<p>Our community in this project is aligned with our code of conduct - please be sure to read, and abide by, that document in all interactions with our community.</p>"},{"location":"#diversity-statement","title":"Diversity Statement","text":"<p>This project welcomes and encourages participation by everyone.</p> <p>No matter how you identify yourself or how others perceive you: we welcome you. We welcome contributions from everyone as long as they interact constructively with our community.</p> <p>While much of the work for our project is technical in nature, we value and encourage contributions from those with expertise in other areas, and welcome them into our community.</p>"},{"location":"#project-partners","title":"Project Partners","text":"<p>By partnering up with SANSA (South African National Space Agency), SAEON (South African Environmental Observation Network) and The Department of Science &amp; Innovation, joint interests sparked the conceptualisation of the SAEOSS-portal platform.</p> <p></p>"},{"location":"#project-badges","title":"Project Badges","text":""},{"location":"#project-chatroom","title":"Project Chatroom","text":"<p>Currently we do not have a project chat room. Rather use GitHub issue tracker instead. GitHub Issue Tracker</p>"},{"location":"#disclaimer","title":"Disclaimer","text":"The software provided by this project is provided 'as is'. All information provided within the platform should be independently verified before using as the basis for action. The contributors and developers of this platform take no responsibility for any loss of revenue, life, physical harm or any other adverse outcome that may occur as a result of the use of this platform."},{"location":"#license","title":"License","text":"<p>This platform was released under the GNU Affero License. Please take a moment to review the full extent of the License.</p>"},{"location":"#kartoza","title":"Kartoza","text":"<p>The SAEOSS-Portal platform has been developed by Kartoza, leaders in GIS and Geospatial technology and innovation. </p>"},{"location":"about/","title":"About","text":""},{"location":"about/#license","title":"License","text":"<p>Published under AGPL-3. See the full license text.</p>"},{"location":"about/#contributors","title":"Contributors","text":"Contributor GitHub Handle Faneva Andriamiadantsoa Fanevanjanahary Zulfikar Akbar Muzakki zamuzakki Juanique Voogt voogt Eli Volschenk EliVolsch Luna Asefaw LunaAsefaw Mohab Khaled Mohab25 Marina van der Merwe MarinaKartoza Jeremy Prior Jeremy-Prior Ketan Bamniya ketankartoza"},{"location":"about/#project-fundersbackers","title":"Project Funders/Backers","text":"<p>By partnering up with SANSA (South african National Space Agency), SAEON (South-African Environmental Observation Network) and The Department of Science &amp; Innovation, joint interests sparked the conceptualization of the SAEOSS-portal platform.</p> <p></p> <p>Another fine project contributed to by: Kartoza.com</p>"},{"location":"about/code-of-conduct/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"about/code-of-conduct/#our-pledge","title":"Our Pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>"},{"location":"about/code-of-conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behaviour that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language</li> <li>Being respectful of differing viewpoints and experiences</li> <li>Gracefully accepting constructive criticism</li> <li>Focusing on what is best for the community</li> <li>Showing empathy towards other community members</li> </ul> <p>Examples of unacceptable behaviour by participants include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or   advances</li> <li>Trolling, insulting/derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic   address, without explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"about/code-of-conduct/#our-responsibilities","title":"Our Responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behaviour and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behaviour.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"about/code-of-conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>"},{"location":"about/code-of-conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behaviour may be reported by contacting the project team. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident.  Further details of specific enforcement policies may be posted separately.</p> <p>Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.</p>"},{"location":"about/code-of-conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html</p>"},{"location":"about/contributing/","title":"Contributing to SAEOSS-Portal","text":"<p>First off, thanks for taking the time to contribute! \ud83c\udf89 \ud83d\ude18 \u2728</p> <p>The following is a set of guidelines for contributing to this project. These are mostly guidelines, not rules. Use your best judgment, and feel free to propose changes to this document in a pull request.</p>"},{"location":"about/contributing/#reporting-bugs","title":"Reporting Bugs","text":"<p>Bugs are tracked as GitHub issues. Search the list and try reproduce on your local machine with a clean profile before you create an issue. When you create an issue, please provide the following information by filling in the template.</p> <p>Explain the problem and include additional details to help maintainers reproduce the problem:</p> <ul> <li>Use a clear and descriptive title for the issue to identify the problem.</li> <li>Describe the exact steps which reproduce the problem in as many details   as possible. Don't just say what you did, but explain how you did it. For   example, if you moved the cursor to the end of a line, explain if you used a   mouse or a keyboard.</li> <li>Provide specific examples to demonstrate the steps. Include links to   files or GitHub projects, or copy/pasteable snippets, which you use in those   examples. If you're providing snippets on the issue, use Markdown code blocks.</li> <li>Describe the behaviour you observed after following the steps and point   out what exactly is the problem with that behaviour.</li> <li>Explain which behaviour you expected to see instead and why.</li> <li>Include screenshots and/or animated GIFs which show you following the   described steps and clearly demonstrate the problem.</li> </ul> <p>A template for reporting bugs can also be used. Just copy and paste the template, and then proceed to fill in all the information. The template can be found here</p>"},{"location":"about/contributing/#suggesting-enhancements","title":"Suggesting Enhancements","text":"<p>In case you want to suggest an enhancement, please follow this guideline to help maintainers and the community understand your suggestion. Before creating suggestions, please check issue list if there's already a request.</p> <p>Create an issue and provide the following information:</p> <ul> <li>Use a clear and descriptive title for the issue to identify the   suggestion.</li> <li>Provide a step-by-step description of the suggested enhancement in as   many details as possible.</li> <li>Provide specific examples to demonstrate the steps. Include   copy/pasteable snippets which you use in those examples, as Markdown code   blocks.</li> <li>Include screenshots and animated GIFs which helps demonstrate the steps   or point out the part of project which the suggestion is related to.</li> <li>Explain why this enhancement would be useful to most users.</li> <li>List some other text editors or applications where this enhancement   exists.</li> </ul>"},{"location":"about/contributing/#first-code-contribution","title":"First Code Contribution","text":"<p>Unsure where to begin contributing? You can start by looking through these <code>document</code>, <code>good first issue</code> and <code>help wanted</code> issues:</p> <ul> <li>document issues: issues which should be reviewed or improved.</li> <li>good first issues: issues which should only require a few lines of code,   and a test or two.</li> <li>help wanted issues: issues which should be a bit more involved than   beginner issues.</li> </ul>"},{"location":"about/contributing/#pull-requests","title":"Pull Requests","text":""},{"location":"about/contributing/#development-workflow","title":"Development workFlow","text":"<ul> <li>Set up your development environment</li> <li>Make change from a right branch</li> <li>Be sure the code passes tests</li> <li>Make a pull request</li> </ul>"},{"location":"about/contributing/#development-environment","title":"Development environment","text":"<ul> <li>Prepare your machine and it's packages installed.</li> <li>Checkout our repository</li> <li>Install dependencies by <code>pip install -r REQUIREMENTS-dev.txt</code></li> </ul>"},{"location":"about/contributing/#make-changes","title":"Make changes","text":""},{"location":"about/contributing/#checkout-a-branch","title":"Checkout a branch","text":"<ul> <li>master: PR Base branch.</li> <li>production: latest release branch with distribution files. Never make a PR on this.</li> <li>gh-pages: API docs, examples and demo</li> </ul>"},{"location":"about/contributing/#check-code-style","title":"Check Code Style","text":"<p>Run the pylance extension and make sure all the tests pass.</p>"},{"location":"about/contributing/#test","title":"Test","text":"<p>Run <code>TODO</code> and verify all the tests pass. If you are adding new commands or features, they must include tests. If you are changing functionality, update the tests if you need to.</p>"},{"location":"about/contributing/#commit","title":"Commit","text":"<p>Follow our commit message conventions.</p>"},{"location":"about/contributing/#yes-pull-request","title":"Yes! Pull request","text":"<p>Make your pull request, then describe your changes.</p>"},{"location":"about/contributing/#title","title":"Title","text":"<p>Follow other PR title format on below. <pre><code>    &lt;Type&gt;: Short Description (fix #111)\n    &lt;Type&gt;: Short Description (fix #123, #111, #122)\n    &lt;Type&gt;: Short Description (ref #111)\n</code></pre></p> <ul> <li>capitalize first letter of Type</li> <li>use present tense: 'change' not 'changed' or 'changes'</li> </ul>"},{"location":"about/contributing/#description","title":"Description","text":"<p>If it has related issues, add links to the issues(like <code>#123</code>) in the description. Fill in the Pull Request Template by check your case.</p>"},{"location":"about/contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>This project and everyone participating in it is governed by the Code of Conduct. By participating, you are expected to uphold this code. Please report unacceptable behaviour to tim@kartoza.com.</p> <p>This guide is based on atom contributing guide, CocoaPods and ESLint</p>"},{"location":"about/disclaimer/","title":"Disclaimer","text":"The software provided by this project is provided 'as is'. All information provided within the platform should be independently verified before using as the basis for action. The contributors and developers of this platform take no responsibility for any loss of revenue, life, physical harm or any other adverse outcome that may occur as a result of the use of this platform."},{"location":"about/license/","title":"SAEOSS Portal","text":"<pre><code>                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007\n</code></pre> <p>Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.</p> <pre><code>                        Preamble\n</code></pre> <p>The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.</p> <p>The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.</p> <p>When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.</p> <p>Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.</p> <p>A secondary benefit of defending all users' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate.  Many developers of free software are heartened and encouraged by the resulting cooperation.  However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.</p> <p>The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community.  It requires the operator of a network server to provide the source code of the modified version running there to the users of that server.  Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.</p> <p>An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals.  This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.</p> <p>The precise terms and conditions for copying, distribution and modification follow.</p>"},{"location":"about/license/#terms-and-conditions","title":"TERMS AND CONDITIONS","text":""},{"location":"about/license/#0-definitions","title":"0. Definitions","text":"<p>\u201cThis License\u201d refers to version 3 of the GNU Affero General Public License.</p> <p>\u201cCopyright\u201d also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.</p> <p>\u201cThe Program\u201d refers to any copyrightable work licensed under this License.  Each licensee is addressed as \u201cyou\u201d.  \u201cLicensees\u201d and \u201crecipients\u201d may be individuals or organizations.</p> <p>To \u201cmodify\u201d a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a \u201cmodified version\u201d of the earlier work or a work \u201cbased on\u201d the earlier work.</p> <p>A \u201ccovered work\u201d means either the unmodified Program or a work based on the Program.</p> <p>To \u201cpropagate\u201d a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.</p> <p>To \u201cconvey\u201d a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.</p> <p>An interactive user interface displays \u201cAppropriate Legal Notices\u201d to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.</p>"},{"location":"about/license/#1-source-code","title":"1. Source Code","text":"<p>The \u201csource code\u201d for a work means the preferred form of the work for making modifications to it.  \u201cObject code\u201d means any non-source form of a work.</p> <p>A \u201cStandard Interface\u201d means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.</p> <p>The \u201cSystem Libraries\u201d of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A \u201cMajor Component\u201d, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.</p> <p>The \u201cCorresponding Source\u201d for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.</p> <p>The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.</p> <p>The Corresponding Source for a work in source code form is that same work.</p>"},{"location":"about/license/#2-basic-permissions","title":"2. Basic Permissions","text":"<p>All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.</p> <p>You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.</p> <p>Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.</p>"},{"location":"about/license/#3-protecting-users-legal-rights-from-anti-circumvention-law","title":"3. Protecting Users' Legal Rights From Anti-Circumvention Law","text":"<p>No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.</p> <p>When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.</p>"},{"location":"about/license/#4-conveying-verbatim-copies","title":"4. Conveying Verbatim Copies","text":"<p>You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.</p> <p>You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.</p>"},{"location":"about/license/#5-conveying-modified-source-versions","title":"5. Conveying Modified Source Versions","text":"<p>You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:</p> <ul> <li>a) The work must carry prominent notices stating that you modified it, and giving a relevant date.</li> <li>b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \u201ckeep intact all notices\u201d.</li> <li>c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy.  This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged.  This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it.</li> <li>d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so.</li> </ul> <p>A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \u201caggregate\u201d if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.</p>"},{"location":"about/license/#6-conveying-non-source-forms","title":"6. Conveying Non-Source Forms","text":"<p>You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:</p> <ul> <li>a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.</li> <li>b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge.</li> <li>c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source.  This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b.</li> <li>d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge.  You need not require recipients to copy the Corresponding Source along with the object code.  If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source.  Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.</li> <li>e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d.</li> </ul> <p>A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.</p> <p>A \u201cUser Product\u201d is either (1) a \u201cconsumer product\u201d, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, \u201cnormally used\u201d refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.</p> <p>\u201cInstallation Information\u201d for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.</p> <p>If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).</p> <p>The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.</p> <p>Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.</p>"},{"location":"about/license/#7-additional-terms","title":"7. Additional Terms","text":"<p>\u201cAdditional permissions\u201d are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.</p> <p>When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.</p> <p>Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:</p> <ul> <li>a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or</li> <li>b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or</li> <li>c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or</li> <li>d) Limiting the use for publicity purposes of names of licensors or authors of the material; or</li> <li>e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or</li> <li>f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors.</li> </ul> <p>All other non-permissive additional terms are considered \u201cfurther restrictions\u201d within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.</p> <p>If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.</p> <p>Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.</p>"},{"location":"about/license/#8-termination","title":"8. Termination","text":"<p>You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).</p> <p>However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.</p> <p>Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.</p> <p>Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.</p>"},{"location":"about/license/#9-acceptance-not-required-for-having-copies","title":"9. Acceptance Not Required for Having Copies","text":"<p>You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.</p>"},{"location":"about/license/#10-automatic-licensing-of-downstream-recipients","title":"10. Automatic Licensing of Downstream Recipients","text":"<p>Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.</p> <p>An \u201centity transaction\u201d is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.</p> <p>You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.</p>"},{"location":"about/license/#11-patents","title":"11. Patents","text":"<p>A \u201ccontributor\u201d is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor's \u201ccontributor version\u201d.</p> <p>A contributor's \u201cessential patent claims\u201d are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, \u201ccontrol\u201d includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.</p> <p>Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.</p> <p>In the following three paragraphs, a \u201cpatent license\u201d is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To \u201cgrant\u201d such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.</p> <p>If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  \u201cKnowingly relying\u201d means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.</p> <p>If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.</p> <p>A patent license is \u201cdiscriminatory\u201d if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.</p> <p>Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.</p>"},{"location":"about/license/#12-no-surrender-of-others-freedom","title":"12. No Surrender of Others' Freedom","text":"<p>If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.</p>"},{"location":"about/license/#13-remote-network-interaction-use-with-the-gnu-general-public-license","title":"13. Remote Network Interaction; Use with the GNU General Public License","text":"<p>Notwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software.  This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph.</p> <p>Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.</p>"},{"location":"about/license/#14-revised-versions-of-this-license","title":"14. Revised Versions of this License","text":"<p>The Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.</p> <p>Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU Affero General Public License \u201cor any later version\u201d applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation.</p> <p>If the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.</p> <p>Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.</p>"},{"location":"about/license/#15-disclaimer-of-warranty","title":"15. Disclaimer of Warranty","text":"<p>THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201cAS IS\u201d WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</p>"},{"location":"about/license/#16-limitation-of-liability","title":"16. Limitation of Liability","text":"<p>IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</p>"},{"location":"about/license/#17-interpretation-of-sections-15-and-16","title":"17. Interpretation of Sections 15 and 16","text":"<p>If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.</p> <p>END OF TERMS AND CONDITIONS</p>"},{"location":"about/license/#how-to-apply-these-terms-to-your-new-programs","title":"How to Apply These Terms to Your New Programs","text":"<p>If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.</p> <p>To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \u201ccopyright\u201d line and a pointer to where the full notice is found.</p> <pre><code>&lt;one line to give the program's name and a brief idea of what it does.&gt;\nCopyright (C) &lt;year&gt;  &lt;name of author&gt;\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n</code></pre> <p>Also add information on how to contact you by electronic and paper mail.</p> <p>If your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source.  For example, if your program is a web application, its interface could display a \u201cSource\u201d link that leads users to an archive of the code.  There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements.</p> <p>You should also get your employer (if you work as a programmer) or school, if any, to sign a \u201ccopyright disclaimer\u201d for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see &lt;http://www.gnu.org/licenses/&gt;.</p>"},{"location":"about/running-instances/","title":"Examples of Running Instances","text":"<ul> <li> <p>The Electronic Metadata Catalogue (EMC) is another CKANext project that functions in a similar manner to the SAEOSS Portal.</p> <p></p> </li> </ul>"},{"location":"administrator/","title":"Administrators Documentation","text":"<p>This is the homepage for all administrator related documentation.</p> <p>The content is divided into two sections:</p> <ul> <li>The Administrator guide, which describes common workflows for system administrators in a tutorial format.</li> <li>The Administrator manual, which describes each page of the admin user interface and what the various options on that page do.</li> </ul>"},{"location":"administrator/guide/","title":"Administrator Guide","text":""},{"location":"administrator/guide/#creating-a-system-admin-account","title":"Creating a system admin account","text":"<p>Please note a system administrator cannot be created via the web interface. This needs to be done via the terminal command in the server</p> <ol> <li>Open up a terminal in the server</li> <li>Run the following command  <code>docker exec -it saeoss_ckan-web_1 poetry run ckan sysadmin add admin</code></li> <li>Answer the prompts in order to create the new admin user</li> </ol> <p>After the account\u2019s successful creation you can log into the site with the admin user account created earlier</p>"},{"location":"administrator/guide/#manage-user-accounts","title":"Manage user accounts","text":"<p>A sysadmin user has full access to user accounts</p>"},{"location":"administrator/guide/#method-1","title":"Method 1","text":"<ol> <li>To find a user\u2019s profile, enter the following address in your internet browser https://{sitename}/user/ ('/user/' has been appended to the website\u2019s url)</li> <li> <p>You can search for a specific profile using the search box provided </p> </li> <li> <p>You can search by any part of the user profile, including their e-mail address.</p> <ul> <li>This is useful if, for example, a user has forgotten their user ID</li> <li>For non-sysadmin users, the search on this page will only match public parts of the profile, so they cannot search by e-mail address.</li> </ul> </li> <li>On their user profile, you will see a \u201cManage\u201d button. From there you will be able to view the user settings page. You can delete the user or change any of its settings, including their username, name and password.</li> <li>To save any changes enter your sysadmin password in the box </li> </ol>"},{"location":"administrator/guide/#method-2","title":"Method 2","text":"<ol> <li> <p>Navigate to an organisation's home page and then click on <code>Manage</code>.</p> <p></p> </li> <li> <p>Then click on the <code>Members</code> tab.</p> <p></p> </li> <li> <p>Then click on a user's name that you would like to manage.</p> <p></p> </li> <li> <p>You will be redirected to the user's profile page. On this page you should click on the <code>Manage</code> button.</p> <p></p> </li> <li> <p>You will be redirected to the <code>Change details</code> page, here you can manage the user's profile details. Once you have made your changes to the user's profile, scroll down and enter your <code>Sysadmin Password</code> (i.e. the password you use to log in to the administrator account), and then click on the <code>Update Profile</code> button.</p> <p></p> </li> <li> <p>If you would like to remove the user, you can scroll down and enter your <code>Sysadmin Password</code> (i.e. the password you use to log in to the administrator account), and then click on the <code>Delete</code> button.</p> <p></p> </li> </ol>"},{"location":"administrator/guide/#add-organisation","title":"Add Organisation","text":"<p>A sysadmin user has full access to organizations. For example, you have access to every organization as if you were a member of that organization. Thus most management operations are done in exactly the same way as in the normal web interface</p> <ol> <li>Click on \u201cOrganisations\u201d link in navigation bar</li> <li>Click on \u201cAdd organisation\u201d</li> <li>Fill out the required fields</li> <li>If you do not upload a thumbnail, a predefined image will show on web portal</li> <li>Save changes and the organisation will have been added</li> </ol>"},{"location":"administrator/guide/#adding-a-user-to-an-organisation","title":"Adding a user to an organisation","text":"<ol> <li>Click on \u201cOrganisations\u201d link in navbar</li> <li>Click on the organisation you want to add a user to</li> <li>Click on \u201cManage\u201d button</li> <li>Navigate to members</li> <li>Click on \u201cAdd Member\u201d button</li> <li>Search for username or invite by email </li> <li>Choose their role </li> </ol> <p>Publisher: Can add/edit and delete datasets, as well as manage organization members.</p> <p>Editor: Can add and edit datasets, but not manage organization members.</p> <p>Member: Can view the organization's private datasets, but not add new datasets.</p>"},{"location":"administrator/guide/#edit-member-access-to-organisation","title":"Edit member access to organisation","text":"<ol> <li>Click on \u201cOrganisations\u201d link in navbar or enter link http://{sitename}:5000/organization/</li> <li>Choose  \u201cOrganisations\u201d</li> <li>Click on \u201cManage\u201d button</li> <li>Navigate to members</li> <li>Remove member by clicking on \u201cx\u201d button</li> <li>Edit member by clicking on wrench icon</li> </ol>"},{"location":"administrator/guide/#managing-organizations-and-datasets","title":"Managing organizations and datasets","text":"<p>A sysadmin user has full access to user accounts, organizations and datasets. For example, you have access to every organization as if you were a member of that organization. Thus most management operations are done in exactly the same way as in the normal web interface.</p> <p>For example, to add or delete users to an organization, change a user\u2019s role in the organization, delete the organization or edit its description, etc, visit the organization\u2019s home page. You will see the \u2018Admin\u2019 button as if you were a member of the organization. You can use this to perform all organization admin functions. For details, see the User guide.</p> <p>Similarly, to edit, update or delete a dataset, go to the dataset page and use the \u2018Edit\u2019 button. As an admin user you can see all datasets including those that are private to an organization. They will show up when doing a dataset search.</p>"},{"location":"administrator/guide/#moving-a-dataset-between-organizations","title":"Moving a dataset between organizations","text":"<ol> <li>Search for the dataset on the Search page (http://{sitename}/dataset/)</li> <li>Click on the dataset to view</li> <li>Click on 'Manage' button in the top right</li> <li>In the field 'Responsible organisation Name:' select the organisation name you want to transfer the dataset to </li> <li>Save changes</li> </ol>"},{"location":"administrator/guide/#permanently-deleting-datasets","title":"Permanently deleting datasets","text":"<p>A dataset which has been deleted is not permanently removed from CKAN; it is simply marked as \u2018deleted\u2019 and will no longer show up in search, etc. The dataset\u2019s URL cannot be re-used for a new dataset</p> <ol> <li>Navigate to the dataset\u2019s \u201cEdit\u201d page, and delete it.</li> <li>Click on your profile in the top right corner of the navigation bar </li> <li>Select 'Sysadmin settings' in the dropdown</li> <li>Select 'Trash' </li> <li>From this page you can purge metadata records/ organisations or groups </li> </ol>"},{"location":"administrator/guide/#usage-statistics","title":"Usage statistics","text":"<p>To access the <code>Usage Statistics</code>, click on the profile icon in the top navigation bar. Choose the <code>Usage Statistics</code> option from the dropdown menu.</p> <p>The Usage Statistics section provides valuable insights into various aspects of system usage, including dataset revisions, most edited datasets, group activities, tags, user contributions, and total dataset counts.</p> <p></p> <p>Navigation Tip:</p> <p>Users can easily access detailed information by clicking on the name of the respective table in the <code>Usage Statistics</code> section. Additionally, they can scroll through the tables to explore the variety of insights available at a glance.</p>"},{"location":"administrator/guide/#creating-a-superuser","title":"Creating a SuperUser","text":"<ul> <li>Open the terminal.</li> </ul> <p>Run <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan sysadmin add admin</code></p> <p></p> <p>The user is expected to input either <code>Y</code> for Yes or <code>n</code> for No based on their intention to create a superuser.</p> <p></p> <p>Enter the required information for creating the superuser account</p> <p></p>"},{"location":"administrator/guide/#converting-a-normal-user-to-a-superuser","title":"Converting a Normal User to a SuperUser","text":"<p><pre><code>docker exec -ti saeoss_ckan-web_1 poetry run ckan sysadmin add &lt;username&gt;\n</code></pre> Replace the <code>username</code> with the desired user's username.</p> <p></p> <p>Before the superuser privileges</p> <p></p> <p>After the superuser privileges</p> <p></p> <p>Security Tips:</p> <ul> <li>Keep SuperUser credentials secure.</li> <li>Regularly update SuperUser credentials for enhanced security.</li> </ul>"},{"location":"administrator/manual/","title":"Administrator Manual","text":"<p>This section of the documentation describes every page in the application and what the various components of that page do. The manual is intended to function as a reference for the application. For narrative / workflow based tutorials, you may prefer to work through our Administrator guide.</p> <p>The administrator manual aims to assist user in learning the fundamentals of using the SAEOSS-portal platform.  The goal of the documentation is to clear up any doubts or concerns related to workflows and will feature a page by  page layout, making it easy for users to follow along.</p>"},{"location":"administrator/manual/#index","title":"Index","text":"<ul> <li>Profile: The profile page provides a preview of what your profile will look like when viewed by  other users on the platform.</li> <li>Harvesting Settings: Refer to the configuration options and parameters that determine  how harvesting is performed in a data management or data publishing system.</li> <li>Dashboard: This is a central notification hub for communications from the SAEOSS-Portal platform.</li> <li>Profile Settings: On the profile settings page, all user profile-related settings can be managed.</li> <li>Usage Statistics: To track and report dataset metrics related to the CKAN instance.</li> <li>Sysadmin Settings: Sysadmin settings are designed to provide administrator access  to manage accounts, organisations, and datasets.</li> <li>Metadata Validator: It is a feature designed to validate and enforce metadata standards  for datasets.</li> <li>STAC Harvesting: It is a user interface for administrators to configure and monitor the STAC  harvesting process</li> <li>Create SuperUser: It guides a super user in creating a sysadmin user from the server terminal  where CKAN is installed.</li> </ul>"},{"location":"administrator/manual/dashboard/","title":"Dashboard Manual","text":"<p>Welcome to the Administrator Dashboard \u2013 the centralised hub for overseeing and managing all aspects of the system. When the administrator clicks on the profile icon, a seamlessly integrated popup model unfolds, offering a plethora of options to streamline administrative tasks. Among these options, the crown jewel is the <code>Dashboard</code>.</p> <p></p> <ol> <li> <p>Dashboard Upon selecting the <code>Dashboard</code> option, the administrator is ushered into a world of organised efficiency, where every click brings the administrator closer to the pulse of the system. Here, the administrator will find a carefully curated set of options designed to streamline the management tasks seamlessly.</p> <p>News Feed</p> <p></p> <ol> <li> <p>Viewing the News Feed: The <code>News Feed</code> is the first thing the administrator sees upon accessing the Dashboard. It provides a chronological display of updates, announcements, and important events related to your system. Stay informed and up-to-date with the latest information at a glance.</p> </li> <li> <p>Search List: To streamline the access to specific news feeds, utilise the <code>Search List</code> feature. Enter keywords, usernames, or dataset names to quickly locate and filter relevant updates within the <code>News Feed</code>. This ensures that administrators can find the information they need efficiently.</p> </li> <li> <p>Username: <code>Usernames</code> in the <code>News Feed</code> are clickable links. When the administrator clicks on a username, it opens a detailed profile of that particular user. Gain insights into user activities, roles, and contributions to enhance understanding of system dynamics.</p> <p></p> </li> <li> <p>Dataset Name: Clickable dataset names within the <code>News Feed</code> allow the administrator to delve deeper into specific datasets. By clicking on a dataset name, the administrator can open a dedicated view providing detailed information about that particular dataset. This feature facilitates quick access to essential data management insights.</p> <p></p> </li> <li> <p>View This Version: Discover the details of a specific version of a dataset by clicking on the <code>View This Version</code> link within the <code>News Feed</code>.</p> <p></p> <ol> <li>Check Latest Version The administrator can check the latest version of the dataset by clicking on the click <code>here</code> link.</li> </ol> </li> <li> <p>Profile Settings Button: Access your profile settings with ease by clicking on the <code>Profile Settings</code> button. This option allows the administrator to customise their personal preferences, update account information, and manage security settings directly.</p> <p></p> </li> <li> <p>Chat Option: Enhance collaboration and communication by utilising the <code>Chat Option</code>. Engage in real-time discussions, ask questions, and share insights directly from the <code>News Feed</code>. This feature fosters a collaborative environment, ensuring that communication is seamlessly integrated into your administrative workflow.</p> <p></p> </li> </ol> <p>My Metadata Record</p> <p>Welcome to the <code>My Metadata Record</code> tab, where the administrator can have the power to manage and organise metadata seamlessly. This user-friendly interface provides tools to oversee, add, and view metadata records effortlessly.</p> <p></p> <ol> <li> <p>Add Metadata Record: To start managing the metadata, click on the <code>Add Metadata Record</code> button. This initiates the process of creating a new metadata record, allowing you to input essential details and specifications.</p> </li> <li> <p>List of Metadata: The main section of the tab displays a list of existing metadata records. Each entry showcases vital information such as the metadata name, description, and date of creation. Use this comprehensive list to quickly scan and locate specific metadata records.</p> </li> <li> <p>Clickable Name of Metadata: The names of the metadata records are clickable links. By clicking on a metadata name, the administrators can access a dedicated view providing detailed information about that particular metadata record. This includes information such as associated datasets, creation date, and any additional metadata attributes.</p> </li> </ol> <p>My Organisation</p> <p>Welcome to the <code>My Organisations</code> tab, the centralised control center for managing and overseeing the various organisations within the system. This user-friendly interface provide the tools to efficiently add, explore, and view details about different organisations.</p> <p></p> <ol> <li> <p>Add Organization: To initiate the process of adding a new organisation, click on the <code>Add Organisation</code> button. This action prompts a form where the administrator can input essential details such as organisation name, description, and any relevant attributes.</p> </li> <li> <p>List of Organizations: The main section of the tab displays a list of existing organisations, each represented by a distinct organisation card. These cards provide key information such as the organisation name, description, and any associated metadata. Use this comprehensive list for a quick overview of the organisational structure.</p> </li> <li> <p>Clickable Organization Cards: The organisation cards are clickable. By clicking on a specific organisation card, administrator open a dedicated view that provides detailed information about that particular organisation. This includes associated user groups, metadata, and any additional organisational details.</p> </li> </ol> <p>My Groups</p> <p></p> <p>Welcome to the <code>My Groups</code> tab, the central hub for managing and overseeing the groups within the system. This user-friendly interface empowers administrators to efficiently add, explore, and view details about different groups.</p> <ol> <li> <p>Add Group: To create a new user group, click on the <code>Add Group</code> button. This initiates the process of adding a group, allowing the administrator to input essential details such as the group name, description, and any relevant attributes.</p> </li> <li> <p>List of Groups: The main section of the tab displays a list of existing user groups, each represented by a distinct group card. These cards provide key information such as the group name, description, and any associated metadata. Use this comprehensive list for a quick overview of the groups.</p> </li> <li> <p>Clickable Group Cards: The group cards are clickable. By clicking on a specific group card, the administrators can open a dedicated view that provides detailed information about that particular group.</p> </li> </ol> </li> </ol>"},{"location":"administrator/manual/harvesting-settings/","title":"Harvesting Settings","text":"<p>To access the Harvesting Settings, administrators can follow these steps:</p> <ul> <li> <p>Click on the user profile icon located in the top right corner of the application interface. This icon is typically represented by an image or username associated with the user's profile.</p> </li> <li> <p>Within the user profile menu, identify and click on the <code>Harvest Settings</code> option. This option is designed to provide administrators with direct access to the Harvesting Settings page.</p> </li> </ul> <p></p> <ol> <li> <p>Harvesting Setting Upon clicking the <code>Harvest Settings</code> option, administrators will be automatically redirected to the <code>Harvest Settings</code> page. This page contains a range of configurable options and parameters related to the harvesting functionality.</p> <p></p> <ol> <li> <p>Add Harvest Resource Button: The <code>Add Harvest Resource</code> button is a key feature that enables administrators to create new harvest resources within the system. Clicking on this button opens a new harvest page, providing a user-friendly interface for entering details and configuring the new harvest resource.</p> <p></p> <ol> <li> <p>Message Card on Left Corner: A message card in the left corner provides essential information. It communicates that harvest sources facilitate the import of remote metadata into the catalog. Remote sources can include other catalogs like CKAN instances, CSW servers, or Web Accessible Folders (WAF). The availability of these options depends on the enabled harvesters for the instance.</p> </li> <li> <p>Form Fields: </p> <ul> <li> <p>URL: Input field for specifying the URL of the remote metadata source.</p> </li> <li> <p>Title: Input field for providing a title to identify the harvested resource.</p> </li> <li> <p>Name: Input field for assigning a name to the harvested resource.</p> </li> <li> <p>Description: Input field to provide a brief description of the harvested resource.</p> </li> <li> <p>Source Type: Radio button options with:</p> <ul> <li>Option 1: CKAN</li> <li>Option 2: CSW Server</li> </ul> </li> <li> <p>Update Frequency: Dropdown menu with options for selecting the update frequency:</p> <ul> <li>Manual</li> <li>Monthly</li> <li>Weekly</li> <li>Biweekly</li> <li>Daily</li> <li>Always</li> </ul> </li> <li> <p>Configuration: Field for additional configuration settings related to the harvest source.</p> </li> <li> <p>Organisation: Dropdown menu allowing administrators to choose from available organisations.</p> </li> <li> <p>Save Button: The button to confirm and save the entered details, creating the new harvest resource.</p> </li> </ul> </li> </ol> </li> <li> <p>Search Bar: The search bar enhances user efficiency by allowing administrators to quickly locate specific harvest resources within the system. Administrators can input keywords or relevant terms to filter and find specific harvest resources from the existing list.</p> <p></p> </li> </ol> <ul> <li>The list of harvest resources presents a comprehensive overview of available resources. Each entry in the list includes:</li> </ul> <ol> <li> <p>Title: Clicking on the title navigates administrators to detailed information about the specific harvest resource.</p> <p></p> <ol> <li> <p>Information Card: An information card is displayed on the top left side, providing a quick overview:</p> <ul> <li> <p>Title: The title of the dataset.</p> </li> <li> <p>Description with Read More Link: A concise description of the dataset with a <code>Read More</code> link for additional details. This link opens the About tab when clicked.</p> </li> <li> <p>Number of Datasets: The total number of datasets available.</p> </li> </ul> </li> <li> <p>Dataset Tab: The dataset tab is the default view upon accessing the dataset section. It displays a list of dataset versions in descending order of the most recently updated first.</p> <p>Each dataset version entry includes:</p> <ul> <li> <p>Image: A visual representation associated with the dataset.</p> </li> <li> <p>Title: Clicking on the title navigates to detailed information about the specific dataset version.</p> </li> <li> <p>Description: A brief overview providing insights into the content of the dataset.</p> </li> <li> <p>Date Updated: Indicates the last update date of the dataset version.</p> </li> </ul> </li> <li> <p>About Table: Under the <code>About</code> section, a table provides additional information about the dataset:</p> <p></p> <ul> <li> <p>Source: The source URL of the dataset.</p> </li> <li> <p>State: The current state of the dataset, with <code>active</code> indicating its availability.</p> </li> <li> <p>Last Updated: Specifies the date and time (in UTC) of the last update to the dataset.</p> </li> <li> <p>Created: Indicates the date and time (in UTC) when the dataset was initially created.</p> </li> </ul> </li> </ol> </li> <li> <p>Organisation Name: Clicking on the organisation name directs administrators to information related to the associated organisation.</p> </li> </ol> <p></p> <ol> <li> <p>Card: A card displayed in the left corner provides a quick overview of the organisation:</p> <ul> <li> <p>Organisation Details: Includes essential information about the organisation.</p> </li> <li> <p>Follow Button: Allows users to follow the organisation.</p> </li> <li> <p>Organisation Link: Clickable link leading to a detailed view of the organisation.</p> </li> <li> <p>Tag Link: Clickable link providing access to tags associated with the organisation.</p> </li> </ul> </li> <li> <p>Metadata Records: The <code>Metadata Records</code> section presents a list of data metadata associated with the organisation.</p> <ul> <li> <p>Clickable Title: Each entry features a title that, when clicked, directs users to detailed information about the specific metadata record.</p> </li> <li> <p>Description: A brief overview of the metadata record, providing insights into its content.</p> </li> <li> <p>Updated Date: Indicates the last date the metadata record was updated.</p> </li> </ul> </li> <li> <p>&amp;Active Stream: This is where the administrator sees the latest activities on his account. This includes account registration, metadata record upload</p> </li> <li> <p>About: The <code>About</code> section provides additional details about the organisation.</p> </li> <li> <p>Add Metadata Record Button: The <code>Add Metadata Record</code> button serves as a quick action feature for administrators to add new metadata records associated with the organisation.</p> </li> </ol> </li> </ol>"},{"location":"administrator/manual/metadata-validator/","title":"Metadata Validator documentation","text":"<p>The <code>Metadata Validator</code> page provides a convenient interface for validating metadata resources. Regularly validate metadata to maintain data quality and adherence to standards.</p> <p></p> <ol> <li>Metadata Validator: Click on the profile icon to reveal the available options. Choose the <code>Metadata Validator</code> option to navigate to the validation page.</li> </ol> <p>Selecting Resources for Validation:</p> <p>On the Metadata Validator page, a comprehensive list of resources is displayed. Administrators can easily select specific resources for validation by clicking on the checkboxes next to the resource entries.</p> <p>Use this feature to choose individual resources or a combination of resources based on validation requirements. Once the desired resources are selected, proceed to click on the <code>Validate Selected</code> button to initiate the validation process for the chosen resources.</p> <p>Resource Validation Conditions:</p> <p>Metadata is validated only under the following conditions: It is explicitly set as an <code>STAC</code> resource, either through upload or if harvested as an <code>STAC</code> resource.</p> <p>Validation Options:</p> <p></p> <ol> <li>Validate Selected:</li> </ol> <ul> <li>Use this option to validate specific metadata resources individually.</li> <li>Select the desired metadata resources on the page.</li> <li>Click on the <code>Validate Selected</code> button to initiate the validation process for the chosen resources.</li> </ul> <ol> <li>Validate All:</li> </ol> <ul> <li>This option allows you to validate all metadata resources on the page simultaneously.</li> <li>Click on the <code>Validate All</code> button to trigger the validation process for all available resources.</li> </ul>"},{"location":"administrator/manual/profile-settings/","title":"Profile Settings Documentation","text":"<p>Accessing Profile Settings: - Click on the profile icon to access a dropdown menu. - Choose the <code>Profile Settings</code> option to navigate to the profile settings page.</p> <p></p> <ol> <li>Profile Settings: The administrator can click on the <code>Profile Settings</code> option to open the edit profile page.</li> </ol> <p></p> <p>Extra Rights for Admin:</p> <ul> <li> <p>Admins have additional privileges to update user profiles.</p> </li> <li> <p>Enter the admin password at the end of the form for the changes to take effect.</p> </li> <li> <p>This extra security step ensures that admin actions are authorised and secure.</p> </li> </ul> <p>Note:</p> <ul> <li> <p>Profile Settings offer a user-friendly interface for administrators to manage personal and account-related information.</p> </li> <li> <p>Admins, with extra rights, play a crucial role in maintaining user profiles and ensuring the overall integrity of the system.</p> </li> <li> <p>Regularly review and update profile settings to align with personal preferences and security best practices.</p> </li> </ul>"},{"location":"administrator/manual/profile/","title":"Profile Manual","text":"<p>The Administrator <code>Profile</code> option is a feature designed to provide administrators with easy access to and control over their account settings and personal information within the system. This manual outlines the steps to access and utilise the various functionalities available in the administrator's profile.</p> <p></p> <ol> <li> <p>Profile: Click on the <code>Profile</code> option to view the profile page. The administrators can manage their accounts using this page.</p> <p></p> <p>Metadata Record</p> <ol> <li> <p>Profile Section: The profile section serves as a comprehensive display of an administrator's information. Information includes the profile image, username, description, followers count, and metadata records count. Additionally, details such as email, member since date, state, and API Key are visible.</p> <p>Displayed Information:</p> <ul> <li> <p>Profile Image: A visual representation associated with the administrator's account.</p> </li> <li> <p>Username: The unique identifier for the administrator.</p> </li> <li> <p>Description: A brief overview or description associated with the administrator's profile.</p> </li> <li> <p>Followers Count: Indicates the number of followers linked to the administrator's account.</p> </li> <li> <p>Metadata Records Count: Displays the total number of metadata records associated with the  administrator.</p> </li> <li> <p>Email: The email address associated with the administrator's account.</p> </li> <li> <p>Member Since Date: The date when the administrator's account was created.</p> </li> <li> <p>State: Indicates the current status of the administrator's account (e.g., active).</p> </li> <li> <p>API Key: Displays the API key associated with the administrator's account.</p> </li> </ul> </li> <li> <p>Add Metadata Record: To start managing the metadata, click on the <code>Add Metadata Record</code> button. This initiates the process of creating a new metadata record, allowing the administrator to input essential details and specifications. For more detailed instructions on adding metadata records click here</p> </li> <li> <p>List of Metadata: By default the <code>Metadata Records</code> tab opens when the administrator clicks on the profile option. The main section of the tab displays a list of existing metadata records. Each entry showcases vital information such as the metadata name, description, and date of creation. Use this comprehensive list to quickly scan and locate specific metadata records.</p> </li> <li> <p>Manage Button: The <code>Manage</code> button empowers administrators to update and modify their account details seamlessly. Clicking on the <code>Manage</code> button triggers the opening of the <code>Edit Profile</code> page, providing administrators with the ability to change various account details. Within the <code>Edit Profile</code> page, administrators can conveniently update information such as username, email, profile picture, and other relevant details. This feature ensures administrators have control over their account information, allowing for accurate and up-to-date user profiles. For detailed instructions on managing the account click here</p> </li> </ol> <p></p> <ol> <li>Activity Stream: This is where the administrators can see the latest activities of their accounts. This includes account registration, metadata record upload, profile update etc.</li> </ol> <p></p> <ol> <li> <p>API Tokens: This is where the administrator can create an API token, which can later be used to upload data.</p> <p></p> <ol> <li> <p>Name: Input field where the administrator can input their name for creating the <code>API Token</code>.</p> </li> <li> <p>Create API Token Button: Click on the <code>Create API Token</code> button, to create the API token. </p> </li> </ol> </li> </ol> </li> </ol>"},{"location":"administrator/manual/stac-harvester/","title":"STAC Harvester","text":"<p>STAC, or SpatioTemporal Asset Catalog, is a standard specification for consistently organising  geospatial assets. It provides a common way to describe and discover geospatial data, making it easier for developers and  users to work with Earth observation data. CKAN supports STAC harvesting, allowing users to import metadata and datasets  from external STAC catalogs into their CKAN instance.</p>"},{"location":"administrator/manual/stac-harvester/#stac-harvester-interface","title":"STAC Harvester interface","text":"<ol> <li><code>STAC Harvester</code> is a user interface for administrators to configure and monitor the STAC harvesting process.  It includes options to trigger manual harvests and view the status of ongoing or completed harvest jobs.</li> </ol> <p>A list of created jobs for STAC Harvester will be displayed after clicking on <code>STAC Harvester</code>. In that list,  the following information is available:</p> <ol> <li>Harvester Id: A unique identifier for each harvest job. It helps in tracking and referencing specific harvesting processes.</li> <li>User: If a CKAN user initiates the harvesting manually, information about the user who triggered the harvest.</li> <li>Owner Org: An organisation associated with the datasets.</li> <li>Url: The URL of the STAC catalog or source from which the harvesting is performed.</li> <li>Number Records: A count of individual records within the STAC catalog is being harvested. This count indicates  how many geospatial datasets or assets will be imported into CKAN during harvesting.</li> <li>Status: Indicates the current status of the harvest job. Common statuses include <code>Running</code>, <code>Finished</code>, <code>Failed</code>,  or <code>Pending</code>.</li> <li>Message: Any log messages or error messages generated during the harvesting process. This information helps  diagnose issues or understand the outcome of the harvest.</li> </ol>"},{"location":"administrator/manual/stac-harvester/#create-job","title":"Create Job","text":"<ol> <li><code>Create Job</code> is initiating a new harvesting job to fetch metadata from an external STAC catalog and import it into  the CKAN instance. This action involves configuring the harvester with specific parameters.</li> </ol> <ol> <li>URL: The URL of the STAC catalog or source from which the harvesting will perform.</li> <li>Number Records: This count indicates how many geospatial datasets or assets will be imported into CKAN during  harvesting.</li> <li>Organization: The organisation associated with the datasets.</li> <li>Submit: Once you have completed the required information and configured the job to your satisfaction, you can use  the <code>Submit</code> button to confirm and save the job configuration.</li> <li>View Jobs: Is a feature that allows users to inspect and monitor the details of a specific harvesting job.  This functionality is helpful for administrators or users who want to review the status, logs, and other relevant  information associated with a particular STAC harvesting job.</li> </ol>"},{"location":"administrator/manual/super-user/","title":"Documentation: Creating SuperUser","text":""},{"location":"administrator/manual/super-user/#creating-superuser-from-terminal","title":"Creating SuperUser from Terminal","text":"<p>To create a superuser, open the terminal. Use the following command to add a superuser with the username <code>admin</code>:</p> <p><pre><code>docker exec -ti saeoss_ckan-web_1 poetry run ckan sysadmin add admin\n</code></pre> - Replace <code>admin</code> with the desired username for the superuser.</p> <p></p> <p>After running the command to add a superuser, the system typically asks for confirmation. Users are prompted to confirm whether they indeed want to create a superuser. The user is expected to input either <code>Y</code> for Yes or <code>n</code> for No based on their intention to create a superuser.</p> <p></p> <p>If the user chooses <code>Y</code> then they need to provide the email and password for the administrator account.</p> <p></p>"},{"location":"administrator/manual/super-user/#converting-normal-user-to-superuser","title":"Converting Normal User to SuperUser","text":"<p>Existing users can be elevated to superuser status through the terminal. Use the following command, replacing  with the username of the registered user: <pre><code>docker exec -ti saeoss_ckan-web_1 poetry run ckan sysadmin add &lt;username&gt;\n</code></pre> <p></p> <p>This command promotes the specified user to superuser status.</p> <p>Before the superuser privileges</p> <p></p> <p>After the superuser privileges</p> <p></p> <p>Important Notes:</p> <ul> <li>Superusers have elevated privileges and can access and modify system-wide settings.</li> <li>Superusers can only be created via the terminal and not through the CKAN site.</li> </ul> <p>Important Security Considerations:</p> <ul> <li>Superuser and super admin credentials should be kept secure.</li> <li>Regularly review and update superuser/admin credentials to enhance system security.</li> </ul>"},{"location":"administrator/manual/sysadmin-settings/","title":"Sysadmin settings","text":"<p>Sysadmin settings are designed to provide administrator access to manage accounts, organisations, and datasets. Certain  administration tasks are unavailable through the web UI but require access to the server where CKAN is installed.  This manual covers the administration features in the web UI.</p> <p></p> <ol> <li>Click on the <code>Sysadmin settings</code> option to have control of CKAN's instance. </li> </ol> <p></p>"},{"location":"administrator/manual/sysadmin-settings/#sysadmins","title":"Sysadmins","text":"<p>The first tab, <code>Sysadmin</code>, has the list of all sysadmin users. By clicking on one user, the administrator can manage  the user account as if it were in the profile.</p> <p></p>"},{"location":"administrator/manual/sysadmin-settings/#config","title":"Config","text":"<p>The second tab, <code>Config</code>,  is a page where the administrator can change some configurations from the web interface.  It is a simple interface to quickly customise the <code>look and feel</code> of CKAN.</p> <p></p>"},{"location":"administrator/manual/sysadmin-settings/#trash","title":"Trash","text":"<p>The third tab, <code>Trash</code>, is a page that shows all deleted datasets, organisations, and groups. It allows the  administrator to delete them permanently.</p> <p></p> <ol> <li>Purge all: To remove permanently all deleted datasets, organisations, and groups.</li> <li>Purge: To remove permanently all deleted metadata records</li> <li>Purge: To remove permanently all deleted organisation</li> </ol>"},{"location":"administrator/manual/usage-statistics/","title":"Usage Statistics Documentation","text":"<ol> <li> <p>Accessing Usage Statistics: Administrators can access the <code>Usage Statistics</code> feature by clicking on the profile icon, revealing an option to view usage statistics.</p> <p></p> <p>Usage Statistics Upon selecting <code>Usage Statistics</code>, a card is presented, displaying the names of various tables capturing different aspects of system usage.</p> <p>Tables include:</p> <ul> <li> <p>Dataset Revisions per Week</p> </li> <li> <p>Most Edited Datasets</p> </li> <li> <p>Largest Groups</p> </li> <li> <p>Top Tags</p> </li> <li> <p>Users Creating Most Datasets</p> </li> <li> <p>Total Number of Datasets</p> </li> </ul> <p>Interacting with Tables:</p> <p>Administrators have the option to interact with the tables in two ways:</p> <ul> <li> <p>Clickable Names: By clicking on the name of a table, administrators can view detailed information within that specific table.</p> </li> <li> <p>Scrolling: Administrators can scroll through the down to view all the tables and their respective statistics.</p> <ol> <li>Dataset Revisions per Week:</li> </ol> <p></p> <p>This table displays the dataset revisions and new datasets created per week.</p> <ul> <li>Date: The specific date of the dataset revisions.</li> <li>All Dataset Revisions: The total number of revisions made to all datasets on that date.</li> <li>New Datasets: The number of new datasets created on that date.</li> </ul> <ol> <li>Most Edited Datasets:</li> </ol> <p></p> <p>This table identifies the most edited datasets, showcasing the dataset name and the corresponding number of edits.</p> <ul> <li>Dataset (Clickable): Clicking on the dataset name navigates to detailed information about that specific dataset.</li> <li>Number of Edits: Indicates how many times the dataset has been edited.</li> </ul> <ol> <li>Largest Groups:</li> </ol> <p></p> <p>This table highlights groups with the highest number of datasets, providing insights into active and influential user communities.</p> <ul> <li>Group: Clicking on the group name leads to detailed information about that specific group.</li> <li>Number of Datasets: Indicates the total number of datasets associated with the group.</li> </ul> <ol> <li>Top Tags:</li> </ol> <p></p> <p>This table lists the top tags based on the number of datasets associated with each tag.</p> <ul> <li>Tag Name: Clicking on the tag name provides additional details about datasets tagged with that specific category.</li> <li>Number of Datasets: Indicates the total number of datasets tagged with a particular category.</li> </ul> <ol> <li>Users Creating Most Datasets:</li> </ol> <p></p> <p>This table recognizes users who have created the most datasets, displaying the user name and the corresponding number of datasets created.</p> <ul> <li>User: Clicking on the user name leads to detailed information about that specific user.</li> <li>Number of Datasets: Indicates how many datasets the user has created.</li> </ul> <ol> <li>Total Number of Datasets:</li> </ol> <p></p> <p>This table provides a snapshot of the total number of datasets on specific dates.</p> <ul> <li>Date: The date for which the total number of datasets is recorded.</li> <li>Total Datasets: The overall count of datasets available on that date.</li> </ul> </li> </ul> </li> </ol>"},{"location":"developer/","title":"For Developers","text":"<p>This is the homepage for all developer related documentation.</p> <ul> <li>The developer guide, which describes common workflows for developers in a tutorial format. This includes instructions on how to set up your developer environment, check out the code, run it locally etc.</li> <li>The developer manual, which describes each python module and its classes, functions etc. This section is autogenerated.</li> </ul>"},{"location":"developer/documentation/","title":"Project Documentation","text":"<p>This documentation describes how to set up and contribute to the project documentation. It consists of:</p> <ul> <li>Writing Documentation: explains how to contribute to the documentation and various standards.</li> </ul>"},{"location":"developer/documentation/writing/","title":"Documentation","text":""},{"location":"developer/documentation/writing/#overview","title":"Overview","text":"<p>Welcome to the instructions for those wishing to contribute to our documentation!</p> <p>Our documentation system is based on the popular mkdocs system. We encourage you to read the upstream documentation from mkdocs for the finer details of how mkdocs. In particular, read this page before you get to work. Mkdocs is not hard, but it may feel initially a little different if you are used to creating your documentation in word.</p> <p>We use mkdocs because it has some great and useful features. Most especially:</p> <ul> <li>The code and the documentation are versioned together. This means that for whatever version of the code we have in our production release, we can be sure the documentation matches that release. We can also look back at changes over time through the version history when needed.</li> <li>It can render beautiful static (not needing a backend server) web sites with great features like search, styling, intuitive navigation etc.</li> <li>It can optionally render PDF documents from the same source markdown.</li> <li>An ecosystem of plugins and themes makes mkdocs really flexible and extensible.</li> </ul>"},{"location":"developer/documentation/writing/#some-terminology","title":"Some terminology","text":"<p>In our documentation, we have organised the information using a specific nomenclature:</p> <ul> <li>guide: A guide is a multi-step workflow / tutorial that leads your through common activities.</li> <li>manual: A collection of documents that describe each part of the project in a matter of fact way without presupposing any specific workflow is being undertaken.</li> </ul> <p>For each of the main topic areas (user, admin, developer, devops, api user) we provide guides and manuals as is appropriate.</p>"},{"location":"developer/documentation/writing/#organisation","title":"Organisation","text":"<p>The documentation is broadly organised in the following structure. This structure may change over time as sections are added / moved / removed:</p> <pre><code>src\n\u251c\u2500\u2500 about\n\u251c\u2500\u2500 administrator\n\u2502   \u251c\u2500\u2500 guide\n\u2502   \u2514\u2500\u2500 manual\n\u251c\u2500\u2500 developer\n\u2502   \u251c\u2500\u2500 documentation\n\u2502   \u251c\u2500\u2500 guide\n\u2502   \u2514\u2500\u2500 manual\n\u251c\u2500\u2500 devops\n\u2502   \u251c\u2500\u2500 guide\n\u2502   \u2514\u2500\u2500 manual\n\u2514\u2500\u2500 user\n    \u251c\u2500\u2500 guide\n    \u251c\u2500\u2500 manual\n    \u251c\u2500\u2500 quickstart\n    \u2514\u2500\u2500 research\n</code></pre>"},{"location":"developer/documentation/writing/#file-naming-conventions","title":"File naming conventions","text":"<p>Please follow these conventions when writing your documentation:</p> <ol> <li>Write file names in all lower case, with hyphens separating words (no spaces). e.g. <code>important-file.md</code> not <code>Important File.md</code> or other deviations.</li> <li>Place the image files in the img folder adjacent to your content.</li> <li>Do not abbreviate any words in file names - but try to use terse, descriptive names.</li> <li>Place your content into the appropriate place as outline in the structure above.</li> <li>Each file should only one level one heading e.g. <code># Page title</code></li> <li>Headings and subheadings should be written as a terse phrase starting with a capital letter and subsequent words in lower case unless they are proper nouns. Do not place a colon after the heading.</li> <li>Use unicode number markers to reference numbers in images e.g. 1\ufe0f\u20e3</li> <li>Every heading / sub-heading should have a single line underneath it summarising the content that will follow. This sentence will be used in the help center in the application to give the user a reference point for the text that will follow. It also makes the help text more consistent and readable.</li> <li>For every section that images, the first image will be used as the thumbnail if the heading is referenced from the application.</li> </ol>"},{"location":"developer/documentation/writing/#contributing-to-the-documentation","title":"Contributing to the documentation","text":"<p> Note: The repo name in the images below is blurred out, you should work against the SAEOSS-Portal repository when following these notes.</p> <p>To start adding to the documentation navigate to the home page of the repository.</p> <p>Once on the repository home page, 1\ufe0f\u20e3 click on Fork </p> <p>On the next page 1\ufe0f\u20e3 Make sure your github account is selected as the owner and 2\ufe0f\u20e3 make sure the \"Copy the <code>main</code> branch only\" option is ticked as you will only need the main branch. </p> <p>Once you have forked the repository, ensure that you are working in the main branch. </p> <p>Once you are in your fork of the repository, click on <code>.</code> on your keyboard. This will open a web editor where you can begin adding to, or editing, the documentation. </p> <p>Once the editor loads, you will be greeted by 1\ufe0f\u20e3 a preview of the project's README.txt. 2\ufe0f\u20e3 Click on the <code>docs</code> directory in the menu on the left, this will expand the directory. To confirm that you are working in the right branch 3\ufe0f\u20e3\ufe0f it will say <code>main</code> in the bottom left of the editor. </p> <p>Once you have expanded the <code>docs</code> directory, 1\ufe0f\u20e3 click on the <code>src</code> directory. All sub-directories within the <code>src</code> directory contain the files that become the documentation. Each sub-directory contains an <code>index.md</code> file that is required for the building of the documentation and static site. If you add a new sub-directory into any folder it must also contain a populated <code>index.md</code> file. </p> <p>Once you have chosen which section of documentation you would like to edit (e.g. user/guide/index.md), click on the file and it will open in the web editor. </p> <p>Once you have the file open, you can start adding to the documentation using Markdown syntax. If you need to add images to your documentation, add them to the relative <code>img</code> sub-directories following the naming conventions set out in the <code>naming-convention.README</code> within the <code>img</code> folders. </p> <p>When you have completed making additions to (or editing) the documentation, 1\ufe0f\u20e3 click on the source control tab then 2\ufe0f\u20e3 click on the <code>plus</code> symbol next to the changes you are finished with to stage them, 3\ufe0f\u20e3\ufe0f add a commit message that is associated with the work you have done, and the 4\ufe0f\u20e3 Click on <code>Commit &amp; Push</code> </p> <p>Once you have committed your changes, 1\ufe0f\u20e3 Click on the burger menu and then 2\ufe0f\u20e3 click on <code>Go To Repository</code> </p> <p>Your fork of the repository will be opened in a new tab within your browser, navigate to that tab. Once there 1\ufe0f\u20e3 ensure you are on the <code>main</code>, you should see how many commits ahead of the upstream branch you are, then 2\ufe0f\u20e3 click on <code>Contribute</code>-&gt; <code>Open pull request</code>. </p> <p>On the next screen, 1\ufe0f\u20e3 give your pull request a meaningful title, 2\ufe0f\u20e3 give additional details regarding changes made in the larger text box, then 3\ufe0f\u20e3\ufe0f click on <code>Create pull request</code>. Also ensure you are creating a pull request to the upstream <code>main</code> branch from your <code>main</code> branch. </p> <p>Once your pull request is opened you need to wait for it to be merged before you can open a new one.</p>"},{"location":"developer/documentation/writing/#creating-new-files","title":"Creating new files","text":""},{"location":"developer/documentation/writing/#page-metadata","title":"Page metadata","text":"<p>Whenever you create a new file, you should add the standard header to the top of the file:</p> <pre><code>---\ntitle: SAEOSS Portal Documentation \nsummary: The SAEOSS-Portal is a system of software components functioning together as the National Central Earth Observation Geospatial Repository.\n    - Tim Sutton\n    - Juanique Voogt\ndate: 2024-01-10\ncopyright: Copyright 2024, SANSA\ncontact: \nlicense: This program is free software; you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.\n#context_id: 1234\n---\n</code></pre> <p>The summary can be updated to include your name for documents you contribute to.</p> <p>The context_id is used to create a unique permalink to this document, and is optional. See further down in this document for more details.</p>"},{"location":"developer/documentation/writing/#navigation","title":"Navigation","text":"<p>All pages need to be added to the 'Nav' section of the <code>mkdocs-base.yml</code> file. This will ensure that it is available in the menus and that mkdocs renders without errors. For example, if you wish to add a new page to the User Guide area, in Nav you would add a line like this:</p> <p><code>- \"Navigating the map\": users/guide/map-navigation.md</code></p> <p>Sometimes you may not wish to have the new page displayed in the menu system (this can be useful when, for example, it is accessed via a link in another page). In these cases, leave the menu entry part blank e.g.</p> <p><code>- \"\": users/guide/map-navigation.md</code></p> <p>Mkdocs will still generate the page but it will not be added to the menu.</p>"},{"location":"developer/documentation/writing/#technical-notes","title":"Technical notes","text":""},{"location":"developer/documentation/writing/#working-locally","title":"Working locally","text":"<p>If you want to work with the documentation locally (i.e. directly on your PC), you need to follow this general process:</p> <ol> <li>Install python</li> <li>Install pip</li> <li>Install virtualenv (<code>pip install virtualenv</code>)</li> <li>Make the docs folder your working directory (<code>cd docs</code>)</li> <li>Create the virtual env in the docs folder (<code>python -m venv env</code>)</li> <li>Activate the venv (<code>source env/bin/activate</code>)</li> <li>Install the python modules listed in docs/requirements.txt (<code>pip install -r requirements.txt</code>)</li> <li>If you are on Linux or macOS, open the docs directory in a shell and run <code>build-docs-html.sh</code></li> <li>In the docs directory, run <code>mkdocs serve</code></li> <li>Open your web browser at https://localhost:8000 to view the rendered docs.</li> </ol> <p>Note that <code>mkdocs serve</code> will dynamically re-render the docs any time you make a change. The process above is illustrated in the diagram below:</p> <p></p>"},{"location":"developer/documentation/writing/#hooks","title":"Hooks","text":"<p>We implement two hooks (plugins for mkdocs that are invoked during the docs rendering process).</p> <ul> <li>uuid_redirects_hook.py - this is used to handle page redirects from a uuid - see below for more details</li> <li>python_manual_hook.py - this is used to auto-generate the reference guide for the python modules, classes and functions that make up the code base for this project.</li> </ul>"},{"location":"developer/documentation/writing/#permalinks-for-user-and-admin-docs","title":"Permalinks for user and admin docs","text":"<p>If you are a developer, you should be aware of the workflow for creating user and administrator documentation for each page you create.</p> <p>Every page should have a help link on it that leads to the appropriate manual page. The workflow for doing this is:</p> <ol> <li>Generate a new page UUID using the provided python utility e.g. <code>./create-uuid.py</code></li> <li>Create a new page in the appropriate manual section e.g. <code>docs/src/user/manual/login.md</code></li> <li>In the metadata section at the top of the page, add the context id e.g. <code>context_id: V4cVEFd2TmwYJVb5HvWRwa</code></li> <li>In your django view, set up your help button to point to the site url and your context id. e.g. <code>https://siteurl/V4cVEFd2TmwYJVb5HvWRwa</code></li> </ol> <p>Whenever the user visits the page using the UUID URL, they will be redirected to the correct page e.g. <code>https://siteurl/login/</code>. This system protects us from file renaming and reorganising on the site, and ensures that the help link will always remain valid.</p>"},{"location":"developer/documentation/writing/#generating-pdfs","title":"Generating PDFS","text":"<p>To generate PDFS, <code>cd</code> into <code>SAEOSS-Portal/docs</code> and then run the <code>build-docs-pdf</code> in a local terminal</p>"},{"location":"developer/documentation/writing/#generating-static-site","title":"Generating Static Site","text":"<p>To generate HTML, <code>cd</code> into <code>SAEOSS-Portal/docs</code> and then run the <code>build-docs-html</code> in a local terminal. You can then run <code>mkdocs serve</code> to generate the static site on your local host, if there is a port conflict you can specify the port using the <code>-a</code> flag e.g <code>mkdocs serve -a 127.0.0.1:8001</code>.</p>"},{"location":"developer/guide/","title":"SAEOSS-Portal Developer Guide","text":"<p>In this section of the documentation, we aim to onboard developers onto the process of setting up a developer workstation, understanding the system architecture, contributing back to the project and so forth. Here is a brief overview of the content provided here:</p> <ul> <li>Architecture: Here we outline the system architecture using ER Diagrams, Software Component Diagrams etc.</li> <li>Prerequisites: An overview of the software that needs to be installed before you can start.</li> <li>Cloning: In this section we cover how to make a local working copy on your own machine.</li> <li>IDE Setup: Here we walk through setting up your IDE.</li> <li>Building: This covers tasks related to building the application so you can test it in your browser.</li> <li>Configuration: This covers standard configuration tasks that need to be done once the site is brought online.</li> <li>Workflows: Examples of typical workflows for adding features, fixing bugs etc.</li> </ul>"},{"location":"developer/guide/architecture/","title":"System Architecture","text":"<p>In this section, we outline the system architecture using ER Diagrams, Software Component Diagrams etc. and key libraries / frameworks used in this project.</p>"},{"location":"developer/guide/architecture/#frameworks-used","title":"Frameworks Used","text":"<p>The following is a list, with brief descriptions, of the key components used in creating this platform. Please refer to their individual documentation for in-depth technical information.</p> Logo Name Notes CKAN CKAN is an open-source DMS (data management system) for powering data hubs and data portals. CKAN makes it easy to publish, share and use data. CKAN PostgreSQL is a powerful, open source object-relational database system with over 35 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance. Pycsw pycsw allows for the publishing and discovery of geospatial metadata via numerous APIs (CSW 2/CSW 3, OpenSearch, OAI-PMH, SRU), providing a standards-based metadata and catalogue component of spatial data infrastructures. Docker Accelerate how you build, share, and run applications. Docker helps developers build, share, and run applications anywhere \u2014 without tedious environment configuration or management. Maplibre Open-source mapping libraries for web and mobile app developers. Ckanext-harvest Remote harvesting extension for CKAN. Jenkins It is used to continually create and test software projects, making it easier for developers and DevOps engineers to integrate changes to the project and for consumers to get a new build. Argo Argo Events is an event-driven workflow automation framework and dependency manager that helps you manage Kubernetes resources, Argo Workflows, and serverless workloads on events from a variety of source."},{"location":"developer/guide/architecture/#high-level-architecture","title":"High-level architecture","text":"<p>This is the high-level system architecture relating to the interaction between the applications.</p> <p></p>"},{"location":"developer/guide/architecture/#ckan-components","title":"CKAN Components","text":""},{"location":"developer/guide/architecture/#data-model","title":"Data Model","text":"<p>The following diagram represents all of the database entities that are created by PostgreSQL. Right click the image and open it in its own tab to see it at full resolution.</p> <p> Note: Click on the image to open an enlarged view</p> <p>For more details on the relationship between the entities, constraints and higher degree of analysis of the database, please click here</p>"},{"location":"developer/guide/building/","title":"Building the dev environment","text":"<p>This section covers the process of building and running the application from your IDE.</p> <p>\ud83d\udea9 NOTE: Make sure you have gone through the IDE Setup Process before following these notes.</p>"},{"location":"developer/guide/building/#setting-up-a-development-environment","title":"Setting Up a Development Environment","text":"<p>Developers should follow the provided instructions to establish their development environment, ensuring consistency in tools and configurations across the team while fostering collaboration. This streamlined approach also boosts productivity, simplifies scalability, and bolsters security by isolating sensitive data.</p> <p>Below are the steps to effectively and accurately set up a productive developer environment:</p>"},{"location":"developer/guide/building/#getting-the-source-code","title":"\ud83d\udc69\u200d\ud83d\udcbb Getting the Source Code","text":"<p>To contribute to the project, you need to fork and clone the repository. This allows you to view and edit the code in your own repository, from which you can create pull requests to merge any changes.</p>"},{"location":"developer/guide/building/#1-navigate-to-the-github-repository","title":"1. Navigate to the GitHub Repository","text":"<p>Go to the SAEOSS-Portal GitHub Repository: https://github.com/kartoza/SAEOSS-Portal</p>"},{"location":"developer/guide/building/#2-fork-the-repository","title":"2. Fork the Repository","text":"<p>Follow the instructions for setting up a proper developer environment, which includes forking the repository.</p> <p></p>"},{"location":"developer/guide/building/#3-navigate-to-your-forked-github-repository","title":"3. Navigate to Your Forked GitHub Repository","text":"<p>Access your forked repository, usually found in your personal repositories, at: https://github.com/{Your-Github-Handle}/SAEOSS-Portal</p> <p>NOTE: Replace {Your-Github-Handle} with your GitHub handle name to fork your repository.</p>"},{"location":"developer/guide/building/#4-clone-the-repository","title":"4. Clone the Repository","text":"<p>Clone the forked repository to your local machine using Git. This allows you to make changes to the code.</p> <pre><code>git clone https://github.com/{Your-Github-Handle}/SAEOSS-Portal.git\n</code></pre>"},{"location":"developer/guide/building/#5-create-a-new-branch","title":"5. Create a New Branch","text":"<p>Before making any changes, create a new branch for your feature or bug fix. This keeps your changes isolated from the main branch.</p> <pre><code>git branch {name_of_your_new_branch}\n</code></pre> <p>NOTE: Replace {name_of_your_new_branch} with the preferred name of your branch.</p> <p>You can also clone the main repository, but this workflow is generally not recommended. We strongly advise developers to follow the aforementioned workflow.</p> <pre><code>git clone https://github.com/kartoza/SAEOSS-Portal.git\n</code></pre> <p>\ud83e\udea7 Now that you have the built the project, move on to the Design documentation.</p>"},{"location":"developer/guide/cloning/","title":"Checking out the Code","text":"<p>This section outlines the process of checking out the code for local development.</p> <p>\ud83d\udea9 Make sure you have gone through the Prerequisites Section before following these notes.</p> <p>Git Code check out  https://github.com/kartoza/SAEOSSS-Portal.git</p> <pre><code>git clone https://github.com/kartoza/SAEOSS-Portal.git\n</code></pre> <p>\ud83d\udcd2Which branch to use?  Note that we deploy our staging work from the <code>develop</code> branch and our production environment from the <code>main</code> branch. If you are planning on contributing improvements to the project, please submit them against the <code>develop</code> branch.</p> <p>\ud83e\udea7 Now that you have the code checked out, move on to the IDE Setup documentation.</p>"},{"location":"developer/guide/configuration/","title":"Project Setup","text":""},{"location":"developer/guide/configuration/#clone-saeoss-portal-repository","title":"Clone SAEOSS-Portal repository","text":"<p>This will clone the SAEOSS-Portal repository to your machine <pre><code>git clone https://github.com/kartoza/SAEOSS-Portal.git\n</code></pre></p>"},{"location":"developer/guide/configuration/#project-setup_1","title":"Project Setup","text":""},{"location":"developer/guide/configuration/#docker-installation","title":"Docker installation","text":"<p>The project needs docker to be able to run it. To install it, please follow below instruction.</p> <pre><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg     \n</code></pre> <p>On the next prompt line:</p> <pre><code>echo \\\n\"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg]https:download.docker.com/linux/ubuntu \\\n$(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n</code></pre> <p>Run apt update:</p> <pre><code>sudo apt-get update\n</code></pre> <p>This will install docker <pre><code>sudo apt-get install  docker-ce-cli containerd.io\n</code></pre></p> <p>This will check if installation of docker was successful <pre><code>sudo docker version\n</code></pre> And it should return like this</p> <pre><code>Client: Docker Engine - Community\n Version:           20.10.9\n API version:       1.41\n Go version:        go1.16.8\n Git commit:        c2ea9bc\n Built:             Mon Oct  4 16:08:29 2021\n OS/Arch:           linux/amd64\n Context:           default\n Experimental:      true\n</code></pre>"},{"location":"developer/guide/configuration/#manage-docker-as-non-root","title":"Manage docker as non-root","text":"<p>This will ensure that the docker can be executed without sudo. <pre><code>sudo systemctl daemon-reload\nsudo systemctl start docker\nsudo usermod -a -G $USER\nsudo systemctl enable docker\n</code></pre></p> <p>Verify that you can run docker commands without sudo. <pre><code>docker run hello-world\n</code></pre></p> <p>For more information how to install docker, please visit Install Docker Engine</p>"},{"location":"developer/guide/configuration/#get-the-project-up-and-running","title":"Get the project up and running","text":"<ol> <li>Navigate to docker folder <code>cd SAEOSS-Portal/docker</code></li> <li>Run the script to build the docker containers <code>./build.sh</code></li> <li>Start the containers <code>./compose.py --compose-file docker-compose.yml --compose-file docker-compose.dev.yml up</code></li> <li>The first time you launch it you will need to set up the ckan database (since the ckan image's entrypoint explicitly does not take care of this). Run the following command: <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan db init</code></li> <li>Afterwards, proceed to run any migrations required by the ckanext-saeoss extension <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan db upgrade --plugin saeoss</code></li> <li>After having initialized the database you can now create the first CKAN sysadmin user <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan sysadmin add admin</code>. Answer the prompts in order to provide the details for this new user. After its successful creation you can login to the CKAN site with the admin user.</li> <li>In order to be able to serve the system's datasets through various OGC standards, create a DB materialized view in order to integrate with pycsw: <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan dalrrd-emc-dcpr pycsw create-materialized-view</code></li> <li>Rebuild solr index: <code>docker exec -it saeoss_ckan-web_1 poetry run ckan search-index rebuild</code></li> <li>You can access the site on your localhost by visiting http:localhost:5000</li> </ol>"},{"location":"developer/guide/design/","title":"Design","text":""},{"location":"developer/guide/ide-setup/","title":"Setting up your IDE","text":"<p>This section outlines the process for configuring your IDE (Integrated Development Environment) for development.</p> <p>\ud83d\udea9 Make sure you have gone through the Cloning Section before following these notes.</p>"},{"location":"developer/guide/ide-setup/#vs-code-setup","title":"VS Code Setup","text":"<p>Open the project in VSCode (1\ufe0f\u20e3, 2\ufe0f\u20e3) by navigating the the place on your file system where you checked out the code in the pre-requisites step above (3\ufe0f\u20e3).</p> <p></p> <p>Accept the 'trust authors' prompt</p> <p></p>"},{"location":"developer/guide/ide-setup/#copying-the-env","title":"Copying the .env","text":"<p>Copy the <code>template.env</code> to <code>.env</code>  Edit the <code>.env</code> file and change the</p> <p><pre><code>DJANGO_SETTINGS_MODULE=core.settings.prod\n</code></pre> to   </p> <pre><code>DJANGO_SETTINGS_MODULE=core.settings.dev\n</code></pre> <p></p>"},{"location":"developer/guide/ide-setup/#override-docker-configs","title":"Override Docker Configs","text":"<p>We are going to copy the docker overrides template to a local file that will not be under version control.</p> <p></p> <p>Rename the file to <code>docker-compose.override.yml</code></p> <p></p> <p>Initially you will not need to change anything in this file, though you may want to take a look through the various configurations provided here if you want to tweak your local setup.</p> <p>Now that you have your IDE set up, we can move on to building the project.</p>"},{"location":"developer/guide/ide-setup/#using-pycharm","title":"Using pycharm","text":"<p>This section is for using pycharm.</p> <p>Requirements:</p> <ul> <li>Pycharm</li> <li>Finished Setting up the project</li> </ul>"},{"location":"developer/guide/ide-setup/#setup-interpreter","title":"Setup interpreter","text":"<ol> <li> <p>Go to file -&gt; setting -&gt; Project -&gt; Project Interpreter -&gt; click cog -&gt; add    </p> </li> <li> <p>Go to ssh interpreter -&gt; Fill the form like below    </p> </li> <li> <p>Click next and fill docker as password    </p> </li> <li> <p>Click next and change interpreter like below and click finish    </p> </li> <li> <p>After finish, it will show all package like below.    </p> </li> <li> <p>In current page, click path mappings, click + button and put local path to where the project (django-project folder) and remote path is like below. and click oK.    </p> </li> </ol> <p>Now the interpreter is done. When we restart the machine, we need to do <code>make up</code> to run the project.</p>"},{"location":"developer/guide/ide-setup/#setup-run-configuration","title":"Setup run configuration","text":"<p>After the interpreter is done, we need configuration to run the project in development mode.</p> <ol> <li> <p>Click \"Add configuration\" like in the cursor in the image below. (top-right)    </p> </li> <li> <p>There will be a popup, and click +, then click django server like below     </p> </li> <li> <p>It will show the form and fill like below.    </p> </li> <li> <p>Don't click the OK yet, but click Environment Variables and add environments like below 9by clicking + button).    </p> </li> <li> <p>After that, click OK.</p> </li> <li> <p>Now we need to run the server by clicking go button in below image.    </p> </li> <li> <p>When we click the go button, pycharm will run a process until like image below.    </p> </li> <li> <p>Now it is done. We can access the development server in http://localhost:2000/</p> </li> </ol> <p>This development mode is DEBUG mode, and also whenever we change the code, the site will also change in runtime.</p> <p>For more information how to set up on pycharm, please visit Using a Docker Compose-Based Python Interpreter in PyCharm</p>"},{"location":"developer/guide/ide-setup/#quick-installation-guide","title":"Quick Installation Guide","text":"<p>This project is a ckan extension, it can be installed standalone. To deploy this project we use  docker, so you need to have docker running on the host.</p> <p>NOTE: Docker is needed to continue with the quick installation guide. Ensure you have docker installed on your system before continuing.</p> <p>Build docker images</p> <pre><code>cd SAEOSS-Portal/docker\n./build.sh\n</code></pre> <p>Start up project</p> <pre><code>./compose.py --compose-file docker-compose.yml --compose-file docker-compose.dev.yml up\n</code></pre> <p>Run down the project</p> <pre><code>./compose.py --compose-file docker-compose.yml --compose-file docker-compose.dev.yml down\n</code></pre> <p>After starting up, the project is available on your local host at http://localhost:5000 </p>"},{"location":"developer/guide/ide-setup/#operations","title":"Operations","text":""},{"location":"developer/guide/ide-setup/#rebuild-solr-index","title":"Rebuild solr index","text":"<pre><code># check if there are any datasets that are not indexed\nckan search-index check\n\n# re-index\ndocker exec -it saeoss_ckan_web_1 poetry run ckan search-index rebuild\n</code></pre>"},{"location":"developer/guide/ide-setup/#operate-harvesters","title":"Operate harvesters","text":"<p>You may use the various <code>ckan harvester &lt;command&gt;</code> commands to operate existing harvesters.</p> <p>Create a job:</p> <pre><code>docker exec -t saeoss-ckan_harvesting-runner poetry run ckan harvester job &lt;source-id&gt;\n</code></pre>"},{"location":"developer/guide/ide-setup/#send-notifications-by-email","title":"Send notifications by email","text":"<p>This needs to be run periodically (once per hour is likely enough).</p> <pre><code>docker exec -it saeoss_ckan_web_1 ckan saeoss send-email-notifications\n</code></pre> <p>Additionally, in order for notifications to work, there is some configuration:</p> <ul> <li>The CKAN settings must have <code>ckan.activity_streams_email_notifications = true</code></li> <li>The CKAN settings must have the relevant email configuration (likely being passed   as environment variables)</li> <li>Each user must manually choose to receive notification e-mails - This is done in   the user's profile</li> <li>Each user must manually follow those entities (datasets, organizations, etc) that   it finds interesting enough in order to be notified of changes via email</li> </ul>"},{"location":"developer/guide/ide-setup/#refresh-pycsw-materialized-view","title":"Refresh pycsw materialized view","text":"<p>This needs to be run periodically (once per hour is likely enough).</p> <pre><code>docker exec -t ckan dalrrd-emc-dcpr pycsw refresh-materialized-view\n</code></pre>"},{"location":"developer/guide/ide-setup/#create-sysadmin-user","title":"Create sysadmin user","text":"<p>After having initialized the database you can now create the first CKAN sysadmin user.</p> <pre><code>docker exec -ti saeoss_ckan_web_1 poetry run ckan sysadmin add admin\n</code></pre> <p>Answer the prompts in order to provide the details for this new user. After its successful creation you can login to the CKAN site with the <code>admin</code> user.</p>"},{"location":"developer/guide/ide-setup/#initialize-ckan-database","title":"Initialize CKAN database","text":"<p>The first time you launch it you will need to set up the ckan database (since the ckan image's entrypoint explicitly does not take care of this, as mentioned above). Run the following command:</p> <pre><code>docker exec -ti saeoss_ckan_web_1 poetry run ckan db init\n</code></pre> <p>Afterwards, proceed to run any migrations required by the ckanext-dlarrd-emc-dcpr extension</p> <pre><code>docker exec -ti saeoss_ckan_web_1 poetry run ckan db upgrade --plugin dalrrd_emc_dcpr\n</code></pre> <p>Now you should be able to go to <code>http://localhost:5000</code> and see the ckan landing page. If not, you may need to reload the ckan web app after performing the DB initialization step. This can done by sending the <code>HUP</code> signal to the gunicorn application server (which is running our ckan flask app):</p> <pre><code>docker exec -ti saeoss_ckan_web_1 bash -c 'kill -HUP 1'\n</code></pre>"},{"location":"developer/guide/ide-setup/#generate-pycsw-db-view","title":"Generate pycsw DB view","text":"<p>In order to be able to serve the system's datasets through various OGC standards, create a DB materialized view in order to integrate with pycsw:</p> <pre><code>docker exec -ti saeoss_ckan_web_1 poetry run ckan dalrrd-emc-dcpr pycsw create-materialized-view\n</code></pre>"},{"location":"developer/guide/ide-setup/#ingest-a-collection-of-metadata-from-a-given-directory-currently-cbers-xml-files","title":"Ingest a collection of metadata from a given directory (currently CBERS xml files)","text":"<p>create datasets (metadata records) from files stored in a directory</p> <pre><code>docker exec -ti saeoss_ckan_web_1 poetry run ckan saeoss ingest cbers --source-path &lt;path&gt; --user &lt;username&gt;\n</code></pre>"},{"location":"developer/guide/ide-setup/#perform-stac-fetch-and-create-datasets-from-stac-endpoint","title":"Perform STAC Fetch and create datasets from STAC endpoint","text":"<p>create datasets (metadata records) from stac endpoint</p> <pre><code>docker exec -ti saeoss_ckan_web_1 poetry run ckan saeoss stac create-stac-dataset --url &lt;url&gt; --user &lt;username&gt; --max &lt;max_number_of_records&gt;\n</code></pre>"},{"location":"developer/guide/ide-setup/#production","title":"Production","text":"<p>Section for juanique and zakki to complete</p>"},{"location":"developer/guide/prerequisites/","title":"Project Prerequisites","text":""},{"location":"developer/guide/prerequisites/#installation-of-docker","title":"Installation of Docker","text":"<p>Ensure that Docker is installed on the machine where the environment will be set up using Docker Compose. Follow the official Docker installation guide for your operating system to install Docker: Docker Installation Guide.</p>"},{"location":"developer/guide/prerequisites/#minimal-dependencies-outside-docker","title":"Minimal Dependencies Outside Docker","text":"<p>Since the environment is set up using Docker Compose, there are minimal dependencies outside Docker itself. Docker Compose will handle the setup and orchestration of containers, so there's no need for additional software or dependencies.</p>"},{"location":"developer/guide/prerequisites/#configuration-in-docker-compose","title":"Configuration in Docker Compose","text":"<p>Define the services and configurations needed for the environment in the docker-compose.yml file. Specify any required Docker images, volumes, networks, ports, environment variables, and other settings in the Docker Compose configuration.</p>"},{"location":"developer/guide/prerequisites/#sudo-rights-for-docker","title":"Sudo Rights for Docker","text":"<p>Ensure that the user running Docker commands has sudo rights to execute Docker commands without requiring a password. Granting sudo rights to Docker commands can be done by adding the user to the Docker group. However, it's essential to understand the security implications of this action.</p> <p>By following these points, you can ensure that Docker is installed, Docker Compose is configured, and the environment is set up smoothly within Docker containers.</p>"},{"location":"developer/guide/workflows/","title":"Developer Workflows","text":""},{"location":"developer/guide/workflows/#adding-a-feature","title":"Adding a Feature","text":"<ul> <li>Create an Issue</li> <li>Wait for it to be added to a Sprint</li> <li>Functional Tests</li> <li>Playwright Tests</li> <li>Write end user documentation</li> </ul>"},{"location":"developer/guide/workflows/#fixing-a-bug","title":"Fixing a Bug","text":"<ul> <li>Claim an Issue</li> <li>Wait for it to be added to a Sprint</li> <li>Regression Test</li> <li>Implement Fix</li> </ul>"},{"location":"developer/guide/workflows/#creating-pull-requests","title":"Creating Pull Requests","text":"<p>NOTE: Frequent PR's should be made to ensure quality of development. Read more on this later in the document.</p>"},{"location":"developer/guide/workflows/#pull-request-workflow","title":"Pull Request Workflow","text":""},{"location":"developer/guide/workflows/#1-fork-the-repository","title":"1. Fork the Repository","text":"<p>Follow the instructions for setting up a proper developer environment, which includes forking the repository.</p>"},{"location":"developer/guide/workflows/#2-clone-the-repository","title":"2. Clone the Repository","text":"<p>Clone the forked repository to your local machine using Git. This allows you to make changes to the code.</p>"},{"location":"developer/guide/workflows/#3-create-a-new-branch","title":"3. Create a New Branch","text":"<p>Before making any changes, create a new branch for your feature or bug fix. This keeps your changes isolated from the main branch.</p>"},{"location":"developer/guide/workflows/#4-make-and-commit-changes","title":"4. Make and Commit Changes","text":"<p>Make the necessary code changes in your local branch. Use Git to commit these changes with clear and descriptive commit messages. Refer to this section to understand how long you should work on a ticket/issue.</p>"},{"location":"developer/guide/workflows/#5-push-changes-to-github","title":"5. Push Changes to GitHub","text":"<p>Push your local branch with changes to your forked repository on GitHub.</p>"},{"location":"developer/guide/workflows/#6-open-a-pull-request","title":"6. Open a Pull Request","text":"<p>Visit the original repository on GitHub, and GitHub will detect your recently pushed branch. Click on the \"Compare &amp; pull request\" button.</p>"},{"location":"developer/guide/workflows/#7-resolving-conflicts","title":"7. Resolving Conflicts","text":"<p>When conflicts are detected, GitHub will generate a message indicating that your pull request cannot be merged until all conflicts have been resolved. This message typically appears when the conflict is too intricate for GitHub's automatic conflict resolver to handle.</p>"},{"location":"developer/guide/workflows/#8-submitting-your-pull-request","title":"8. Submitting Your Pull Request","text":"<p>Simply click the \"Create pull request\" button to submit your pull request. Your request will become visible to the repository's maintainers. It is their responsibility to review the code and merge your pull request into the main repository.</p> <p>Congratulations! You've successfully created a pull request on GitHub, contributing your changes to the open-source project. Your code is now part of the main project for others to use and build upon.</p>"},{"location":"developer/guide/workflows/#frequent-pull-requests-for-efficient-collaboration","title":"Frequent Pull Requests for Efficient Collaboration","text":"<p>Developers should embrace the practice of creating frequent pull requests (PRs) when working on a project for several compelling reasons. Here's why:</p> <p>Collaboration and Feedback: Frequent PRs foster a culture of collaboration. They enable developers to share their work early and often with team members, facilitating peer review and feedback. This iterative process ensures that code changes align with project goals and coding standards and provides an opportunity for knowledge sharing among team members.</p> <p>Code Quality Assurance: By making smaller, incremental changes through frequent PRs, developers can identify and rectify issues more easily. This proactive approach to code review helps catch bugs, improve code readability, and maintain a high level of code quality. It minimizes the risk of introducing complex and hard-to-fix issues that can arise from large, monolithic code changes.</p> <p>Continuous Integration: Frequent PRs seamlessly integrate with continuous integration (CI) and continuous delivery (CD) workflows. CI systems can automatically build, test, and deploy changes submitted through PRs, ensuring that new code integrates smoothly with the existing codebase. This leads to a more stable and reliable project.</p> <p>Project Transparency: Frequent PRs provide transparency into the development process. Team members, stakeholders, and project managers can easily track progress and stay informed about the latest changes. This transparency is especially valuable in agile and collaborative environments.</p> <p>Risk Mitigation: Smaller, more frequent PRs help identify and mitigate potential risks early in the development cycle. If a particular PR introduces an issue, it's easier to identify the source and resolve it promptly, minimizing the impact on the overall project timeline.</p> <p>In summary, creating frequent pull requests is a best practice that enhances collaboration, code quality, and project efficiency. It's a fundamental approach that not only helps developers work more effectively but also contributes to the success of the entire project.</p>"},{"location":"developer/guide/workflows/#committing-to-project","title":"Committing To Project","text":"<p>Follow our commit message conventions.</p>"},{"location":"developer/guide/workflows/#pull-request-template","title":"Pull Request Template","text":"<p>If it has related issues, add links to the issues(like <code>#123</code>) in the description. Fill in the Pull Request Template by check your case.</p>"},{"location":"developer/guide/workflows/#how-to-open-issues-and-create-pull-requests-on-github","title":"How to Open Issues and Create Pull Requests on GitHub","text":"<p>When contributing to the development of the platform, it's essential to adhere to the correct workflow guidelines. Begin by configuring your IDE and developer environment and familiarizing yourself with the approved coding standards. Following the proper workflow guarantees high-quality development and strict adherence to endorsed code standards.</p>"},{"location":"developer/guide/workflows/#ticket-labels","title":"Ticket Labels","text":"<p>Tickets (issues) have accompanying labels which will be assigned by the development team once reviewing the ticket. These labels aim to give a better description of the type of issue as well as keeping development on track with coordinated effort. During the development of the product some team members can be assigned to deal with only certain types of tickets. The team lead or technical lead on the project will upon reviewing the ticket assign the ticket to the correct team member and also add necessary labels.</p> <p></p> <p>Creators of the ticket will be informed of any activity with the ticket via email notification. This includes when tickets have been resolved or being assigned to development team members. Once the ticket has been resolved and closed a final notification will be sent via email stating that the ticket has been resolved/closed.</p>"},{"location":"developer/guide/workflows/#ticket-sizing","title":"Ticket Sizing","text":"<p>Each issue is sized according to its expected time to accomplish. When users report issues they should not add a size label to the ticket as developers will size their own tickets. Labels are rated by size with the following labels:  </p> Label Description <code>[N/A]</code> Applied to issues where size is not applicable. <code>[1]</code> It's quick I will have this done in about 1 hour. <code>[2]</code> Give me 2 hours and I will have it for you. <code>[5]</code> It will take between half a day and a full day. <code>[8]</code> This is a full-day job. <code>[13]</code> I'm going to need about a day and a half to two days. <code>[20]</code> It will take at least two to three days. <code>[40]</code> This will take a full week. <p>Tickets larger than <code>SIZE [8]</code> are usually broken down into smaller tickets/tasks to better display development progress. <code>SIZE [N/A]</code> labels are reserved for tasks which are difficult to estimate, like debugging and complex issues.</p>"},{"location":"developer/guide/templates/bug-report-message-template/","title":"Bug Report Template","text":"<p>A standard workflow for creating tickets is advised to make sure enough information about the problem is related, cutting down on time developers would spend trying to understand the issue at hand. To mitigate this a general approach has been created to make sure users are able to create a GitHub ticket with as much detail as possible. </p> <p>NOTE: Github supports various forms of media including: Markdown syntax, images and video. All of these can be used to better and more accurately describe your issue. Read more</p>"},{"location":"developer/guide/templates/bug-report-message-template/#the-following-template-can-be-copied-and-used-to-create-a-new-ticket","title":"The following template can be copied and used to create a new ticket:","text":"<pre><code>**Title** \nGive issue a descriptive title.\n\n**Describe the bug**\nA clear and concise description of what the bug is.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Go to '...'\n2. Click on '....'\n3. Scroll down to '....'\n4. See error\n\n**Expected behavior**\nA clear and concise description of what you expected to happen.\n\n**Screenshots**\nIf applicable, add screenshots to help explain your problem.\n\n**Desktop (please complete the following information):**\n - OS: [e.g. iOS]\n - Browser [e.g. chrome, safari]\n - Version [e.g. 22]\n\n**Smartphone (please complete the following information):**\n - Device: [e.g. iPhone6]\n - OS: [e.g. iOS8.1]\n - Browser [e.g. stock browser, safari]\n - Version [e.g. 22]\n\n**Additional context**\nAdd any other context about the problem here.\n</code></pre>"},{"location":"developer/guide/templates/commit-message-convention/","title":"Commit Message Convention","text":"<p>When committing changes to the platform informative commit messages are necessary to assist developers to easily review changes and speed up merging of pull requests once the yah been created. In this case all who contribute to the platform whether through development or any additions to its features or information, the following commit message convention should be used:</p>"},{"location":"developer/guide/templates/commit-message-convention/#message-crop","title":"Message crop","text":"<p>Git automatically crops messages at 75 characters and the subject is capped at 50 characters. This is easily viewed when using an IDE like <code>vs code</code> as the character cap changes color. What this means in simple terms is a message is only allowed to contain 75 characters per line.</p>"},{"location":"developer/guide/templates/commit-message-convention/#subject","title":"Subject","text":"<p>When creating a commit message its important to give it a short descriptive subject. The subject should also be separate from the body of the commit massage. This can be achieved by simply adding a blank line.</p> <pre><code># Commit message subject\n#\n# Commit message body\n</code></pre>"},{"location":"developer/guide/templates/commit-message-convention/#message-body","title":"Message body","text":"<p>It is important to specify as much information in the body of the commit message as possible whilst being mindful of the character limit imposed by Git. In this section elaborate on what the commit does: \"Fix broken image links on index page\" or \"Implement proposed messaging system\". In many cases the commit message should be the answer to this phrase: <code>When this commit is implemented then it will...</code>.</p> <pre><code># Implement SANS 1876 standard \n# \n# Ensure new metadata records are compliant with the proposed standard.\n</code></pre>"},{"location":"developer/guide/templates/commit-message-convention/#related-tickets","title":"Related tickets","text":"<p>In many cases GitHub issues are more explanatory than the commit message. When possible ensure related tickets are linked either in the body or subject line of your commit message. This makes tracking issue fixes easier as ell as diagnosing future issues.</p> <pre><code># Ticket/183\n# \n# Ensure metadata records are sans 1876 compliant.\n</code></pre>"},{"location":"developer/guide/templates/commit-message-convention/#tests","title":"Tests","text":"<p>In cases where development should pass tests, the results thereof should be indicated where possible. This can also be indicated with Pull Requests.</p> <pre><code># Ticket/183\n# \n# Ensure metadata records are sans 1876 compliant.\n# Test1: pass\n</code></pre>"},{"location":"developer/guide/templates/pull-request-template/","title":"Pull Request Template","text":"<pre><code>### Description\n\nPlease include a summary of the changes and the related issue. Please also include relevant motivation and context. List any dependencies that are required for this change.\n\nFixes # (issue)\n\n**Screenshots/Media**\n\nInclude any screenshots or media related to bug fix to display working functionality\n\n#### Type of change\n\nPlease delete options that are not relevant.\n\n- [ ] Bug fix (non-breaking change which fixes an issue)\n- [ ] New feature (non-breaking change which adds functionality)\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n- [ ] This change requires a documentation update\n\n### How Has This Been Tested?\n\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\n\n- [ ] Test A\n- [ ] Test B\n\n**Test Configuration**:\n* Firmware version:\n* Hardware:\n* Toolchain:\n* SDK:\n\n### Checklist:\n\n- [ ] My code follows the style guidelines of this project\n- [ ] I have performed a self-review of my code\n- [ ] I have commented my code following the docstring standard\n- [ ] I have made corresponding changes to the documentation, or created documentation for this\n- [ ] My changes generate no new warnings\n- [ ] I have added tests that prove my fix is effective or that my feature works\n- [ ] New and existing unit tests pass locally with my changes\n- [ ] Any dependent changes have been merged and published in downstream modules\n</code></pre>"},{"location":"developer/manual/","title":"Code Reference Manual","text":"<p>Welcome to the SAEOSS developer manual. The manual is intended to function as a reference for the application.  For narrative / workflow based tutorials.</p> <p>Below is linked reference manuals for coding languages and frameworks used in SAEOSS-Portal.</p> <ul> <li>Python Reference Manual</li> <li>Ckan Reference Manual</li> <li>Ckan API Reference</li> </ul> <p>You may prefer to work through our developer guide. Here is a brief  overview of the content provided here:</p> <ul> <li>Coding Conventions: Series of guidelines or rules developers follow when writing code </li> <li>to ensure consistency, readability and maintainability.</li> <li>Project SCrum Board: A visual representation and tracking tool used in Scrum, an  agile project management framework.</li> <li>Assets: Here are the static files associated with a CKAN extension or theme.</li> <li>Blueprints: A way to organise a group of related views, templates, and static files</li> <li>Command Line Interface: Text-based interface that allows users to interact with a SAEOSS application  by typing commands into a terminal or command prompt.  </li> <li>Constants: This contains all the constant variables.</li> <li>Email Notifications: Reimplementation of the core CKAN email notifications.</li> <li>Get Releases: This is a code to get releases from Github</li> <li>Helpers: A utility or module that provides additional functionality, functions, or methods  to assist in customising or extending CKAN's features.</li> <li>Jobs: Asynchronous jobs for SAEOSS portal.</li> <li>Logic: Functions responsible for implementing specific business logic, data processing, or  functionality within the extension.</li> <li>Migration: Set of files and scripts used to manage changes made to the database schema during  updates or version changes.</li> <li>Model: Represents the objects and their relationships that are used to manage and store information.</li> <li>Plugins: Extension or module that adds new features, functionalities, or modifications to the CKAN  framework.</li> <li>Public: Here are publicly accessible files, including customised assets, are stored.</li> <li>Scheming: This CKAN extension provides a way to configure and share metadata schemas. </li> <li>Web Server Gateway Interface: WSGI is the Web Server Gateway Interface</li> <li>Test Local Instance: Tests to ensure that various components, functions, and features work as  expected.</li> <li>CSW: Here we outline the CSW in SAEOSS.</li> </ul>"},{"location":"developer/manual/assets/","title":"Assets","text":"<p>Assets refer to static files such as <code>css</code> and <code>js</code> that may be included in an html page. Assets are included in the page by using the  <code>{% asset %}</code> tag. CKAN then uses Webassets to serve these assets.</p>"},{"location":"developer/manual/assets/#css","title":"css","text":"<p>The folder css is where all <code>.css</code> files are. </p>"},{"location":"developer/manual/assets/#js","title":"js","text":"<p>The folder js is where all <code>.js</code> files are.</p>"},{"location":"developer/manual/assets/#vendor","title":"vendor","text":"<p>The folder vendor is where javascript packages are, like leaflet, leaflet-geoman, plot and popper. </p>"},{"location":"developer/manual/assets/#webassetsyml","title":"webassets.yml","text":"<p>The <code>webassets.yml</code> file is used to define the assets in a directory and its sub-folders.</p>"},{"location":"developer/manual/assets/#webassets-for-css","title":"webassets for css","text":"<pre><code>ckan-base-css:\n  output: ckanext-saeoss/%(version)s_ckan_base.css\n  contents:\n    - css/main.css\n  filter: cssrewrite\n\nckan-responsive-css:\n  output: ckanext-saeoss/%(version)s_ckan_responsive.css\n  contents:\n    - css/responsive.css\n  filter: cssrewrite\n\nsaeoss-css:\n  output: ckanext-saeoss/%(version)s_saeoss.css\n  contents:\n    - css/saeoss.css\n  filter: cssrewrite\n\ndataset-spatial-extent-map-css:\n  output: ckanext-saeoss/%(version)s_datasetSpatialExtentMap.css\n  contents:\n    - css/dataset-spatial-extent-map.css\n  filter: cssrewrite\n  extra:\n    preload:\n      - ckanext-saeoss/vendorized-leaflet-geoman-css\n</code></pre> <p>To include the css in the template page:</p> <pre><code>{% asset 'ckanext-saeoss/ckan-base-css' %}\n{% asset 'ckanext-saeoss/ckan-responsive-css' %}\n{% asset 'ckanext-saeoss/saeoss-css' %}\n{% asset 'ckanext-saeoss/dataset-spatial-extent-map-css' %}\n</code></pre>"},{"location":"developer/manual/assets/#webassets-for-js","title":"webassets for js","text":"<pre><code>dataset-spatial-extent-map-js:\n  output: ckanext-saeoss/%(version)s_datasetSpatialExtentMap.js\n  contents:\n    - js/datasetSpatialExtentMap.js\n  filter: rjsmin\n  extra:\n    preload:\n      - base/main\n      - ckanext-saeoss/vendorized-leaflet-geoman-js\n\nweb-mapping-js:\n  output: ckanext-saeoss/%(version)s_webMapping.js\n  contents:\n    - js/map.js\n  filter: rjsmin\n  extra:\n    preload:\n      - base/main\n      - ckanext-saeoss/vendorized-leaflet-geoman-js\n\nkml-js:\n  output: ckanext-saeoss/L.KML.js\n  contents:\n    - js/L.KML.js\n  filter: rjsmin\n  extra:\n    preload:\n      - base/main\n      - ckanext-saeoss/vendorized-leaflet-geoman-js\n\ncsv-js:\n  output: ckanext-saeoss/csv.js\n  contents:\n    - js/csv.js\n  filter: rjsmin\n  extra:\n    preload:\n      - base/main\n      - ckanext-saeoss/vendorized-leaflet-geoman-js\n</code></pre> <p>To include the js in the template page:</p> <pre><code>{% asset \"ckanext-saeoss/web-mapping-js\" %}\n{% asset \"ckanext-saeoss/dataset-spatial-extent-map-js\" %}\n{% asset 'ckanext-saeoss/kml-js' %}\n{% asset 'ckanext-saeoss/csv-js' %}\n</code></pre>"},{"location":"developer/manual/assets/#webassets-for-vendor","title":"webassets for vendor","text":"<pre><code>vendorized-leaflet-geoman-js:\n  output: ckanext-saeoss/%(version)s_leaflet-geoman.js\n  contents:\n    - vendor/leaflet/leaflet.js\n    - vendor/leaflet-geoman/leaflet-geoman.min.js\n  filter: rjsmin\n\nvendorized-leaflet-geoman-css:\n  output: ckanext-saeoss/%(version)s_leaflet-geoman.css\n  contents:\n    - vendor/leaflet/leaflet.css\n    - vendor/leaflet-geoman/leaflet-geoman.css\n  filter: cssrewrite\n</code></pre> <p><code>vendorized-leaflet-geoman-js</code> is preload in <code>dataset-spatial-extent-map-js</code> and <code>web-mapping-js</code></p> <p><code>vendorized-leaflet-geoman-css</code> is preload in <code>dataset-spatial-extent-map-css</code></p>"},{"location":"developer/manual/blueprints/","title":"Blueprints","text":"<p>Flask uses a concept of blueprints for making application components and supporting common patterns within an application or across applications.  Blueprints can greatly simplify how large applications work and provide a central means for Flask extensions to register operations on applications. A Blueprint object works similarly to a Flask application object, but it is not actually an application. Rather it is a blueprint of how to construct or extend an application. For further information see</p> <p>A blueprint rendering contact page.</p> <p>A blueprint rendering map page.</p> <p>A blueprint rendering new pages.</p> <p>Utility methods for news blueprints</p> <p>re-implement stats blueprint as it's not working</p>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.contact.index","title":"index","text":"<pre><code>index()\n</code></pre> <p>A blueprint rendering contact template.</p> Source code in <code>ckanext/saeoss/blueprints/contact.py</code> <pre><code>@contact_blueprint.route(\"/\")\ndef index():\n    \"\"\"A blueprint rendering contact template.\n\n    \"\"\"\n    return toolkit.render(\"contact.html\")\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.map.index","title":"index","text":"<pre><code>index()\n</code></pre> <p>A blueprint rendering map template.</p> Source code in <code>ckanext/saeoss/blueprints/map.py</code> <pre><code>@map_blueprint.route(\"/\")\ndef index():\n    \"\"\"A blueprint rendering map template.\n\n    \"\"\"\n    return toolkit.render(\"map/map.html\")\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.news.index","title":"index","text":"<pre><code>index()\n</code></pre> <p>A blueprint rendering new template.</p> Source code in <code>ckanext/saeoss/blueprints/news.py</code> <pre><code>@news_blueprint.route(\"/\")\ndef index():\n    \"\"\"A blueprint rendering new template.\n\n    \"\"\"\n    list_news()\n    return toolkit.render(\"news.html\", type=\"news\")\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.news.news_delete","title":"news_delete","text":"<pre><code>news_delete(page)\n</code></pre> <p>A blueprint rendering deleting new.</p> Source code in <code>ckanext/saeoss/blueprints/news.py</code> <pre><code>def news_delete(page):\n    \"\"\"A blueprint rendering deleting new.\n\n    \"\"\"\n    return news_delete_util(page, page_type=\"news\")\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.news.news_edit","title":"news_edit","text":"<pre><code>news_edit(page=None, data=None, errors=None, error_summary=None)\n</code></pre> <p>A blueprint rendering editing new.</p> Source code in <code>ckanext/saeoss/blueprints/news.py</code> <pre><code>def news_edit(page=None, data=None, errors=None, error_summary=None):\n    \"\"\"A blueprint rendering editing new.\n\n    \"\"\"\n    return news_edit_util(page, data, errors, error_summary, \"news\")\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.news.news_show","title":"news_show","text":"<pre><code>news_show(page)\n</code></pre> <p>A blueprint rendering new show.</p> Source code in <code>ckanext/saeoss/blueprints/news.py</code> <pre><code>def news_show(page):\n    \"\"\"A blueprint rendering new show.\n\n    \"\"\"\n    return utils.pages_show(page, page_type=\"news\")\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.news_utils.list_news","title":"list_news","text":"<pre><code>list_news()\n</code></pre> <p>Get list og new.</p> Source code in <code>ckanext/saeoss/blueprints/news_utils.py</code> <pre><code>def list_news():\n    \"\"\"Get list og new.\"\"\"\n    tk.c.pages_dict = tk.get_action(\"ckanext_pages_list\")(\n        context={}, data_dict={\"page_type\": \"news\"}\n    )\n    tk.c.page = helpers.Page(\n        collection=tk.c.pages_dict,\n        page=tk.request.params.get(\"page\", 1),\n        url=helpers.pager_url,\n        items_per_page=21,\n    )\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.news_utils.news_delete_util","title":"news_delete_util","text":"<pre><code>news_delete_util(page, page_type='pages')\n</code></pre> <p>Delete a new.</p> Source code in <code>ckanext/saeoss/blueprints/news_utils.py</code> <pre><code>def news_delete_util(page, page_type=\"pages\"):\n    \"\"\"Delete a new.\n    \"\"\"\n    if page.startswith(\"/\"):\n        page = page[1:]\n    if \"cancel\" in tk.request.params:\n        tk.redirect_to(\"%s_edit\" % page_type, page=\"/\" + page)\n    try:\n        if tk.request.method == \"POST\":\n            tk.get_action(\"ckanext_pages_delete\")({}, {\"page\": page})\n            return tk.redirect_to(\"/news\")\n        else:\n            return tk.abort(404, _(\"Page Not Found\"))\n    except tk.NotAuthorized:\n        return tk.abort(401, _(\"Unauthorized to delete page\"))\n    except tk.ObjectNotFound:\n        return tk.abort(404, _(\"Group not found\"))\n    return tk.render(\"ckanext_pages/confirm_delete.html\", {\"page\": page})\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.news_utils.news_edit_util","title":"news_edit_util","text":"<pre><code>news_edit_util(page=None, data=None, errors=None, error_summary=None, page_type='pages')\n</code></pre> <p>Edit a new.</p> Source code in <code>ckanext/saeoss/blueprints/news_utils.py</code> <pre><code>def news_edit_util(\n    page=None, data=None, errors=None, error_summary=None, page_type=\"pages\"\n):\n    \"\"\"Edit a new.\n    \"\"\"\n\n    page_dict = None\n    if page:\n        if page.startswith(\"/\"):\n            page = page[1:]\n        page_dict = tk.get_action(\"ckanext_pages_show\")(\n            context={}, data_dict={\"org_id\": None, \"page\": page}\n        )\n    if page_dict is None:\n        page_dict = {}\n    if tk.request.method == \"POST\" and not data:\n        data = _parse_form_data(tk.request)\n\n        page_dict.update(data)\n\n        page_dict[\"org_id\"] = None\n        page_dict[\"page\"] = page\n        page_dict[\"page_type\"] = \"page\" if page_type == \"pages\" else page_type\n\n        try:\n            tk.get_action(\"ckanext_pages_update\")(context={}, data_dict=page_dict)\n        except tk.ValidationError as e:\n            errors = e.error_dict\n            error_summary = e.error_summary\n            tk.h.flash_error(error_summary)\n            return news_edit_util(\n                page, data, errors, error_summary, page_type=page_type\n            )\n\n        endpoint = \"news.news_show\"\n        # tk.redirect_to(endpoint, page='/' + page_dict['name'])\n        return tk.redirect_to(\"/news\")\n    try:\n        tk.check_access(\"ckanext_pages_update\", {\"user\": tk.c.user or tk.c.author})\n    except tk.NotAuthorized:\n        return tk.abort(401, _(\"Unauthorized to create or edit a page\"))\n\n    if not data:\n        data = page_dict\n\n    errors = errors or {}\n    error_summary = error_summary or {}\n\n    form_snippet = config.get(\"ckanext.pages.form\", \"ckanext_pages/base_form.html\")\n\n    vars = {\n        \"data\": data,\n        \"errors\": errors,\n        \"error_summary\": error_summary,\n        \"page\": page or \"\",\n        \"form_snippet\": form_snippet,\n    }\n\n    return tk.render(\"ckanext_pages/%s_edit.html\" % page_type, extra_vars=vars)\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.saved_searches.delete_saved_search","title":"delete_saved_search","text":"<pre><code>delete_saved_search()\n</code></pre> <p>deletes a saved search via it's id.</p> Source code in <code>ckanext/saeoss/blueprints/saved_searches.py</code> <pre><code>@saved_searches_blueprint.route(\n    \"/delete_saved_search\", methods=[\"GET\", \"POST\"], strict_slashes=False\n)\ndef delete_saved_search():\n    \"\"\"\n    deletes a saved search via it's id.\n    \"\"\"\n    if request.method == \"POST\":\n        saved_search_id = request.json[\"saved_search_id\"]\n        q = f\"\"\" delete from saved_searches where saved_search_id ='{saved_search_id}' \"\"\"\n        model.Session.execute(q)\n        model.Session.commit()\n        return jsonify({\"status\": 200})\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.saved_searches.save_current_search","title":"save_current_search","text":"<pre><code>save_current_search()\n</code></pre> <p>save the current search query with user_id.</p> Source code in <code>ckanext/saeoss/blueprints/saved_searches.py</code> <pre><code>@saved_searches_blueprint.route(\n    \"/save_search\", methods=[\"GET\", \"POST\"], strict_slashes=False\n)\ndef save_current_search():\n    \"\"\"save the current search query with user_id.\n    \"\"\"\n    query = request.json\n    user_id = c.userobj.id\n    saved_search_id = uuid.uuid4()\n    saved_search_title = _get_saved_search_title(query)\n    q = f\"\"\" insert into saved_searches values('{saved_search_id}', '{user_id}', '{query}', '{saved_search_title}','{datetime.now()}') \"\"\"\n    result = model.Session.execute(q)\n    model.Session.commit()\n    return jsonify({\"status\": 200})\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.sys_stats.get_deleted_packages","title":"get_deleted_packages","text":"<pre><code>get_deleted_packages()\n</code></pre> <p>@return: Returns list of deleted pkgs and date when they were deleted,             in format: [(id, date_ordinal), ...]</p> Source code in <code>ckanext/saeoss/blueprints/sys_stats.py</code> <pre><code>def get_deleted_packages():\n    \"\"\"\n    @return: Returns list of deleted pkgs and date when they were deleted,\n                in format: [(id, date_ordinal), ...]\n    \"\"\"\n\n    def deleted_packages() -&gt; list[tuple[str, int]]:\n        # Can't filter by time in select because 'min' function has to\n        # be 'for all time' else you get first revision in the time period.\n        package = table(\"package\")\n        activity = table(\"activity\")\n\n        s = (\n            select(\n                [package.c[\"id\"], func.min(activity.c[\"timestamp\"])],\n                from_obj=[\n                    activity.join(package, activity.c[\"object_id\"] == package.c[\"id\"])\n                ],\n            )\n            .where(activity.c[\"activity_type\"] == \"deleted package\")\n            .group_by(package.c[\"id\"])\n            .order_by(func.min(activity.c[\"timestamp\"]))\n        )\n        res = model.Session.execute(s).fetchall()\n        res_pickleable: list[tuple[str, int]] = []\n        for pkg_id, deleted_datetime in res:\n            res_pickleable.append((pkg_id, deleted_datetime.toordinal()))\n        return res_pickleable\n\n    return deleted_packages()\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.sys_stats.get_new_packages","title":"get_new_packages","text":"<pre><code>get_new_packages()\n</code></pre> <p>@return: Returns list of new pkgs and date when they were created, in             format: [(id, date_ordinal), ...]</p> Source code in <code>ckanext/saeoss/blueprints/sys_stats.py</code> <pre><code>def get_new_packages() -&gt; list[tuple[str, int]]:\n    \"\"\"\n    @return: Returns list of new pkgs and date when they were created, in\n                format: [(id, date_ordinal), ...]\n    \"\"\"\n\n    def new_packages() -&gt; list[tuple[str, int]]:\n        # Can't filter by time in select because 'min' function has to\n        # be 'for all time' else you get first revision in the time period.\n        package = table(\"package\")\n        activity = table(\"activity\")\n        s = (\n            select(\n                [package.c[\"id\"], func.min(activity.c[\"timestamp\"])],\n                from_obj=[\n                    activity.join(package, activity.c[\"object_id\"] == package.c[\"id\"])\n                ],\n            )\n            .group_by(package.c[\"id\"])\n            .order_by(func.min(activity.c[\"timestamp\"]))\n        )\n        res = model.Session.execute(s).fetchall()\n        res_pickleable: list[tuple[str, int]] = []\n        for pkg_id, created_datetime in res:\n            res_pickleable.append((pkg_id, created_datetime.toordinal()))\n        return res_pickleable\n\n    return new_packages()\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.sys_stats.get_package_revisions","title":"get_package_revisions","text":"<pre><code>get_package_revisions()\n</code></pre> <p>@return: Returns list of revisions and date of them, in             format: [(id, date), ...]</p> Source code in <code>ckanext/saeoss/blueprints/sys_stats.py</code> <pre><code>def get_package_revisions() -&gt; list[Any]:\n    \"\"\"\n    @return: Returns list of revisions and date of them, in\n                format: [(id, date), ...]\n    \"\"\"\n    package = table(\"package\")\n    activity = table(\"activity\")\n    s = select(\n        [package.c[\"id\"], activity.c[\"timestamp\"]],\n        from_obj=[activity.join(package, activity.c[\"object_id\"] == package.c[\"id\"])],\n    ).order_by(activity.c[\"timestamp\"])\n    res = model.Session.execute(s).fetchall()\n    return res\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.sys_stats.index","title":"index","text":"<pre><code>index()\n</code></pre> <p>A blueprint rendering stats template.</p> Source code in <code>ckanext/saeoss/blueprints/sys_stats.py</code> <pre><code>@stats_blueprint.route(\"/\")\ndef index():\n    \"\"\"A blueprint rendering stats template.\n    \"\"\"\n    largestGroups = largest_groups()\n    topTags = top_tags()\n    topPackagesCreators = top_package_creators()\n    mostEditedPackages = most_edited_packages()\n    packageRevisions = get_by_week(\"package_revisions\")\n    packagesCreated = get_by_week(\"new_packages\")\n    packagesDeleted = get_deleted_packages()\n    weeklyPackages = get_num_packages_by_week()\n\n    return toolkit.render(\n        \"sys_stats.html\",\n        {\n            \"largest_groups\": largestGroups,\n            \"top_tags\": topTags,\n            \"top_packages_creators\": topPackagesCreators,\n            \"most_edited_packages\": mostEditedPackages,\n            \"package_revisions\": packageRevisions,\n            \"packages_created\": packagesCreated,\n            \"packages_deleted\": packagesDeleted,\n            \"packages_per_week\": weeklyPackages\n        },\n    )\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.check_fields_mapping","title":"check_fields_mapping","text":"<pre><code>check_fields_mapping()\n</code></pre> <p>Construct new checkers (minimum, maximum) with simplified names</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def check_fields_mapping() -&gt; list:\n    \"\"\"Construct new checkers (minimum, maximum)\n    with simplified names\n    \"\"\"\n\n    dataset_keys = list(DATASET_NAMING_MAPPING.keys())\n    dataset_values = list(DATASET_NAMING_MAPPING.values())\n    new_mapped_set = []\n    for item in xml_minimum_set:\n        try:\n            new_val_pos = dataset_values.index(item)\n            new_mapped_set.append(dataset_keys[new_val_pos])\n        except ValueError:\n            new_mapped_set.append(item)\n    return new_mapped_set\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.check_file_fields","title":"check_file_fields","text":"<pre><code>check_file_fields(file)\n</code></pre> <p>Performs different checks over the xml files.</p> <p>Parameters:</p> Name Type Description Default <code>file</code> <code>file  returns: ----- object with status: False and a message | status:True.</code> <p>The file to check.</p> required Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def check_file_fields(file) -&gt; dict:\n    \"\"\"Performs different checks over\n    the xml files.\n    :param\n    file: The file to check.\n    :type\n    file: file\n\n    returns:\n    -----\n    object with status: False and a message\n    or status:True.\n    \"\"\"\n    root = None\n    # has data check\n    dataset = file_has_dataset(file)\n    file_name_reference = file.filename\n    if dataset[\"state\"]:\n        root = dataset[\"root\"]\n    else:\n        return dataset\n    if root is not None:\n        # return and object of the root\n        root = return_object_root(root)\n        # map standarized names into db fields names\n        root = map_xml_fields(root)\n        # has field more than maximum set\n        maximum_fields_check_ob = maximum_fields_check(root, file_name_reference)\n        if maximum_fields_check_ob[\"state\"] == False:\n            return {\"state\": False, \"msg\": maximum_fields_check_ob[\"msg\"]}\n        # has field less than minimum set\n        minimum_set_check_ob = minimum_set_check(root, file_name_reference)\n        if minimum_set_check_ob[\"state\"] == False:\n            return {\"state\": False, \"msg\": minimum_set_check_ob[\"msg\"]}\n        root = lowercase_dataset_values(root)\n        root = handle_responsible_party_choices_fields(root)\n        root = handle_numeric_choices(root)\n        root = set_language_abbreviation(root)\n        # root = handle_date_fields(root)\n        return create_ckan_dataset(root)\n\n        # things went ok\n    else:\n        return {\"state\": False, \"msg\": \"something went wrong during dataset creation\"}\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.create_ckan_dataset","title":"create_ckan_dataset","text":"<pre><code>create_ckan_dataset(root_ob)\n</code></pre> <p>Create package via ckan api's package_create action.</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def create_ckan_dataset(root_ob):\n    \"\"\"Create package via ckan api's\n    package_create action.\n    \"\"\"\n    package_title = root_ob[\"title\"]\n    package_title = change_name_special_chars_to_underscore(package_title)\n    slug_url_field = package_title.replace(\" \", \"-\")\n    slug_url_field = slug_url_field.lower()\n    # root_ob.update({\"name\": slug_url_field})\n    create_action = toolkit.get_action(\"package_create\")\n    try:\n        create_action(data_dict=root_ob)\n    except ValidationError as e:\n\n        if e.error_summary is None:\n            summary = \"\"\n        else:\n\n            summary = json.dumps(e.error_summary)\n        return {\n            \"state\": False,\n            \"msg\": f'error creating package \"{package_title}\": ' + summary,\n        }\n    return {\"state\": True, \"msg\": f'package \"{package_title}\" were created'}\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.extract_files","title":"extract_files","text":"<pre><code>extract_files()\n</code></pre> <p>The blueprint allows for multiple files to be sent at once, extract each and call parse_xml_dataset. return success after all files parsed.</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>@file_parser_blueprint.route(\"/\", methods=[\"GET\", \"POST\"], strict_slashes=False)\ndef extract_files():\n    \"\"\"The blueprint allows for multiple\n    files to be sent at once, extract\n    each and call parse_xml_dataset.\n    return success after all files\n    parsed.\n    \"\"\"\n    # files = request.files.to_dict()\n    global creator\n    creator = c.userobj\n    files = request.files.getlist(\"dataset_files\")\n    # logging the request files.\n    err_msgs = []\n    info_msgs = []\n    for file in files:\n        check_result = check_file_fields(file)\n        if check_result is None:\n            err_msgs.append(\n                f'something went wrong during \"{file.filename}\" dataset creation!'\n            )\n        if check_result[\"state\"] == False:\n            err_msgs.append(check_result[\"msg\"])\n        else:\n            info_msgs.append(check_result[\"msg\"])\n    # aggregate messages\n    if len(err_msgs) &gt; 0:\n        res = {\"info_msgs\": info_msgs, \"err_msgs\": err_msgs}\n        try:\n            send_email_to_creator(res)\n        except:\n            pass\n        return jsonify({\"response\": res})\n\n    else:\n        # only when all packages are created\n        res = {\"info_msgs\": info_msgs, \"err_msgs\": err_msgs}\n        try:\n            send_email_to_creator(res)\n        except:\n            pass\n        return jsonify({\"response\": \"all packages were created\", \"status\": 200})\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.file_has_dataset","title":"file_has_dataset","text":"<pre><code>file_has_dataset(file)\n</code></pre> <p>Parses the file, checks if file has a dataset within it and returns it.</p> <p>Parameters:</p> Name Type Description Default <code>file</code> <code>file</code> <p>the xml file to parse</p> required Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def file_has_dataset(file):\n    \"\"\"Parses the file,\n    checks if file has a\n    dataset within it and\n    returns it.\n    :param\n    file: the xml file to parse\n    :type\n    file: file\n    \"\"\"\n    try:\n        xml_string = get_xml_string(file)\n        dom_ob = dom.parseString(xml_string)\n    except ExpatError:\n        \"\"\"\n        this happens when the file is\n        completely empty without any tags\n        \"\"\"\n        return {\"state\": False, \"msg\": f\"file {file.filename} is empty!\"}\n\n    root = dom_ob.firstChild\n    if root.hasChildNodes():\n        \"\"\"\n        this will cause the same problem as above\n        \"\"\"\n        return {\"state\": True, \"root\": root}\n    else:\n        return {\"state\": False, \"msg\": f\"file {file.filename} is empty!\"}\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.handle_date_field","title":"handle_date_field","text":"<pre><code>handle_date_field(date_field)\n</code></pre> <p>Returns a date from iso-string YY-MM-DDTHH:MM:SS</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def handle_date_field(date_field):\n    \"\"\"Returns a date from iso-string\n    YY-MM-DDTHH:MM:SS\n    \"\"\"\n    iso_date = datetime.fromisoformat(date_field)\n    return iso_date\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.handle_date_fields","title":"handle_date_fields","text":"<pre><code>handle_date_fields(root_ob)\n</code></pre> <p>Date fields need to be iso compliant inorder to create the package, transform date strings to dates.</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def handle_date_fields(root_ob: dict) -&gt; dict:\n    \"\"\"Date fields need to be\n    iso compliant inorder\n    to create the package,\n    transform date strings\n    to dates.\n    \"\"\"\n    date_fields = [\n        \"metadata_reference_date_and_stamp-0-stamp\",\n        \"metadata_reference_date_and_stamp-0-reference\",\n    ]\n    for field in date_fields:\n        iso_date_field = handle_date_field(root_ob.get(field))\n        root_ob[field] = iso_date_field\n    return root_ob\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.handle_numeric_choices","title":"handle_numeric_choices","text":"<pre><code>handle_numeric_choices(root)\n</code></pre> <p>Some choices fields have a number value to be submitted these are provided by the user as text, corresponding number values should be returned</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def handle_numeric_choices(root):\n    \"\"\"Some choices fields have a\n    number value to be submitted\n    these are provided by the\n    user as text, corresponding\n    number values should be returned\n    \"\"\"\n\n    online_resource_description = {\n        \"download\": 1,\n        \"information\": 2,\n        \"offlineAccess\": 3,\n        \"order\": 4,\n        \"search\": 5,\n    }\n    spatial_parameters_spatial_representation_type = {\n        \"vector\": 1,\n        \"grid\": 2,\n        \"text table\": 3,\n        \"triangulated irregular network\": 4,\n        \"stereo model\": 5,\n        \"video\": 6,\n        \"image\": 7,\n    }\n    metadata_reference_date_and_stamp_reference_date_type = {\n        \"creation\": 1,\n        \"publication\": 2,\n        \"revision\": 3,\n    }\n    metadata_reference_date_and_stamp_stamp_date_type = {\"creation\": 1}\n\n    online_res_desc_value = root.get(\"online_resource-0-description\")\n    if online_res_desc_value is not None:\n        online_res_desc_value = online_res_desc_value.lower()\n    sprt = root[\"spatial_parameters-0-spatial_representation_type\"].lower()\n    reference_date_type_value = root[\n        \"metadata_reference_date_and_stamp-0-reference_date_type\"\n    ].lower()\n    stamp_date_type_value = root[\n        \"metadata_reference_date_and_stamp-0-stamp_date_type\"\n    ].lower()\n\n    online_res_desc_value_ = online_resource_description.get(online_res_desc_value)\n    if online_res_desc_value_ is not None:\n        root[\"online_resource-0-description\"] = online_res_desc_value_\n\n    sprt_ = spatial_parameters_spatial_representation_type.get(sprt)\n    if sprt_ is not None:\n        root[\"spatial_parameters-0-spatial_representation_type\"] = sprt_\n\n    reference_date_type_value_ = (\n        metadata_reference_date_and_stamp_reference_date_type.get(\n            reference_date_type_value\n        )\n    )\n    if reference_date_type_value_ is not None:\n        root[\n            \"metadata_reference_date_and_stamp-0-reference_date_type\"\n        ] = reference_date_type_value_\n\n    stamp_date_type_value_ = metadata_reference_date_and_stamp_stamp_date_type.get(\n        stamp_date_type_value\n    )\n    if stamp_date_type_value_ is not None:\n        root[\n            \"metadata_reference_date_and_stamp-0-stamp_date_type\"\n        ] = stamp_date_type_value_\n\n    return root\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.handle_responsible_party_choices_fields","title":"handle_responsible_party_choices_fields","text":"<pre><code>handle_responsible_party_choices_fields(root)\n</code></pre> <p>Choices fields are strict, only a handful of choices to be returned, here were handling different variations that can be provided by the user for choices.</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def handle_responsible_party_choices_fields(root: dict) -&gt; dict:\n    \"\"\"Choices fields are strict,\n    only a handful of choices\n    to be returned, here were\n    handling different variations\n    that can be provided by the user\n    for choices.\n    \"\"\"\n\n    responsible_party_role = {\n        \"resource provider\": \"resource_provider\",\n        \"point of contact\": \"point_of_contact\",\n        \"principal investigator\": \"principal_investigator\",\n    }\n\n    contact_role = {\"point of contact\": \"point_of_contact\"}\n\n    responsible_party_role_value = root[\"responsible_party-0-role\"]\n    contact_role_value = root.get(\"contact-0-role\")\n    rprv = responsible_party_role_value.lower()\n    rprv_ = responsible_party_role.get(rprv)\n    crv_ = None\n    if contact_role_value is not None:\n        crv = contact_role_value.lower()\n        crv_ = contact_role.get(crv)\n\n    if rprv_ is not None:\n        root[\"responsible_party-0-role\"] = rprv_\n\n    if crv_ is not None:\n        root[\"contact-0-role\"] = crv_\n\n    return root\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.lowercase_dataset_values","title":"lowercase_dataset_values","text":"<pre><code>lowercase_dataset_values(root_ob)\n</code></pre> <p>The metadata creation with CKAN is a very subtle thing, if values provided with xml files are capitalized, some validation rules will fail (e.g. UCS-2 for metadata characteristic will fail vs ucs-2 ) hence lower everything.</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def lowercase_dataset_values(root_ob):\n    \"\"\"The metadata creation with CKAN is a\n    very subtle thing, if values provided\n    with xml files are capitalized, some\n    validation rules will fail (e.g. UCS-2 for\n    metadata characteristic will fail vs ucs-2\n    ) hence lower everything.\n    \"\"\"\n\n    textual_fields = [\n        \"metadata_language_and_character_set-0-dataset_character_set\",\n        \"metadata_language_and_character_set-0-metadata_character_set\",\n        \"topic_and_sasdi_theme-0-iso_topic_category\",\n        \"topic_and_sasdi_theme-0-sasdi_theme\",\n    ]\n    for key, value in root_ob.items():\n        if key in textual_fields:\n            try:\n                root_ob[key] = value.lower()\n            except:\n                \"the case of dates ..etc\"\n                pass\n    return root_ob\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.map_xml_fields","title":"map_xml_fields","text":"<pre><code>map_xml_fields(root)\n</code></pre> <p>Give more user friendly naming for the different fields, avoid the look of the repeating subfields field_name-0-subfield_name</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def map_xml_fields(root: dict) -&gt; dict:\n    \"\"\"Give more user friendly naming\n    for the different fields, avoid\n    the look of the repeating subfields\n    field_name-0-subfield_name\n    \"\"\"\n    import copy\n\n    root_cp = copy.deepcopy(root)\n    for k in root_cp.keys():\n        try:\n            db_field_name = DATASET_NAMING_MAPPING[k]\n            root[db_field_name] = root.pop(k)\n        except KeyError:\n            # the key will presist and fail in max/min checks\n            pass\n\n    return root\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.maximum_fields_check","title":"maximum_fields_check","text":"<pre><code>maximum_fields_check(root_ob, file_name_reference)\n</code></pre> <p>Checking if the provided field is more than the maximum set of EMC datasets fields.</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def maximum_fields_check(root_ob, file_name_reference: str):\n    \"\"\"Checking if the provided field\n    is more than the maximum set\n    of EMC datasets fields.\n    \"\"\"\n    root_ob_keys = root_ob.keys()\n    for field in root_ob_keys:\n        if field not in xml_full_set:\n            return {\n                \"state\": False,\n                \"msg\": f'field \"{field}\" '\n                + f'in the file \"{file_name_reference}\" is not within the '\n                + \"maximum set of allowed xml fields\",\n            }\n    return {\"state\": True}\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.minimum_set_check","title":"minimum_set_check","text":"<pre><code>minimum_set_check(root_ob, file_name_reference)\n</code></pre> <p>Checking if the xml file fields has the minimum required set.</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def minimum_set_check(root_ob: dict, file_name_reference: str):\n    \"\"\"Checking if the xml file fields\n    has the minimum required set.\n    \"\"\"\n    # adding field \"name\" later dynamically\n    for tag in xml_minimum_set:\n        if tag not in root_ob:\n            if tag != \"name\":\n                msg = f'field \"{tag}\" is a required field, missed in file \"{file_name_reference}\"'\n                return {\"state\": False, \"msg\": msg}\n    return {\"state\": True}\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.return_object_root","title":"return_object_root","text":"<pre><code>return_object_root(root)\n</code></pre> <p>Transform the xml dom root into an object of tag_name:tag_value</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def return_object_root(root):\n    \"\"\"Transform the xml dom\n    root into an object of\n    tag_name:tag_value\n    \"\"\"\n    ob_root = {}\n    for field in root.childNodes:\n        if field.nodeType != 3:\n            ob_root[field.tagName] = field.childNodes[0].data\n\n    return ob_root\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.send_email_to_creator","title":"send_email_to_creator","text":"<pre><code>send_email_to_creator(res)\n</code></pre> <p>Per issue #105 we need to send emails to creator for mail_user function check https://github.com/ckan/ckan/blob/master/ckan/lib/mailer.py</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def send_email_to_creator(res):\n    \"\"\"Per issue #105 we need\n    to send emails to creator\n    for mail_user function\n    check https://github.com/ckan/ckan/blob/master/ckan/lib/mailer.py\n    \"\"\"\n    global creator\n    msg_body = (\n        \"xml upload process completed, please navigate to the\"\n        + \"following messages: \\n\"\n    )\n    created_packages_msgs = res[\"info_msgs\"]\n    error_packages_msgs = res[\"err_msgs\"]\n    msg_body += \"created packages: \\n\"\n    for msg in created_packages_msgs:\n        msg_body += f\"{msg} \\n\"\n    msg_body += \"packages with errors upon creation \\n\"\n    for msg in error_packages_msgs:\n        msg_body += f\"{msg} \\n\"\n    try:\n        mail_user(creator, subject=\"creating dataset via xml upload\", body=msg_body)\n    except MailerException as e:\n        return\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.set_language_abbreviation","title":"set_language_abbreviation","text":"<pre><code>set_language_abbreviation(root)\n</code></pre> <p>Check if dataset language and metadata language provided as \"english\" not \"en\" it will be rejected</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def set_language_abbreviation(root: dict) -&gt; dict:\n    \"\"\"Check if dataset language and metadata\n    language provided as \"english\"\n    not \"en\" it will be rejected\n    \"\"\"\n    dataset_lang = root.get(\"metadata_language_and_character_set-0-dataset_language\")\n    if dataset_lang is not None:\n        dataset_lang = dataset_lang.lower()\n    metadata_lang = root.get(\"metadata_language_and_character_set-0-metadata_language\")\n    if metadata_lang is not None:\n        metadata_lang = metadata_lang.lower()\n\n    if dataset_lang == \"english\":\n        root[\"metadata_language_and_character_set-0-dataset_language\"] = \"en\"\n\n    if metadata_lang == \"english\":\n        root[\"metadata_language_and_character_set-0-metadata_language\"] = \"en\"\n\n    return root\n</code></pre>"},{"location":"developer/manual/cli/","title":"CLI","text":"<p>CKAN CLI commands for the saeoss extension</p> <p>Docker entrypoint for CKAN</p> <p>This entrypoint script is inspired by CKAN's, but with some modifications, the most obvious being that rather than a bash script, this is a Python module.</p>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli._parse_date_time.parse_date_time","title":"parse_date_time","text":"<pre><code>parse_date_time(date_stamp)\n</code></pre> <p>A helper method to create a date object from a CBERS time stamp.</p> <p>Parameters:</p> Name Type Description Default <code>date_stamp</code> <code>str  Example format from CBERS:`2015-12-03 10:40:23`</code> <p>Date in this format:</p> required <p>Returns:</p> Type Description <code>datetime</code> <p>A python datetime object.</p> Source code in <code>ckanext/saeoss/cli/_parse_date_time.py</code> <pre><code>def parse_date_time(date_stamp):\n    \"\"\"A helper method to create a date object from a CBERS time stamp.\n\n    :param date_stamp: Date in this format:\n    :type date_stamp: str\n\n    Example format from CBERS:`2015-12-03 10:40:23`\n\n    :returns: A python datetime object.\n    :rtype: datetime\n    \"\"\"\n    # print 'Parsing Date: %s\\n' % date_stamp\n    start_year = date_stamp[0:4]\n    start_month = date_stamp[5:7]\n    start_day = date_stamp[8:10]\n    start_time = date_stamp[11:19]\n    tokens = start_time.split(':')\n    start_hour = tokens[0]\n    start_minute = tokens[1]\n    start_seconds = tokens[2]\n\n    parsed_date_time = datetime(\n        int(start_year),\n        int(start_month),\n        int(start_day),\n        int(start_hour),\n        int(start_minute),\n        int(start_seconds))\n    return parsed_date_time\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.bootstrap","title":"bootstrap","text":"<pre><code>bootstrap()\n</code></pre> <p>Bootstrap the saeoss extension</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.group()\ndef bootstrap():\n    \"\"\"Bootstrap the saeoss extension\"\"\"\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.cbers","title":"cbers","text":"<pre><code>cbers(source_path, user, owner_org, test_only_flag=False, verbosity_level=2, halt_on_error_flag=False)\n</code></pre> <p>Ingest a collection of CBERS metadata folders.</p> <p>Parameters:</p> Name Type Description Default <code>test_only_flag</code> <code>bool</code> <p>Whether to do a dummy run ( database will not be updated. Default False.</p> <code>False</code> <code>source_path</code> <code>str</code> <p>A CBERS created CBERS 04 metadata xml file and thumbnail.</p> required <code>verbosity_level</code> <code>int</code> <p>How verbose the logging output should be. 0-2 where 2 is very very very very verbose! Default is 1.</p> <code>2</code> <code>halt_on_error_flag</code> <code>bool</code> <p>Whather we should stop processing when the first error is encountered. Default is True.</p> <code>False</code> <code>ignore_missing_thumbs</code> <code>bool</code> <p>Whether we should raise an error if we find we are missing a thumbnails. Default is False.</p> required Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@ingest.command()\n@click.option(\n    \"--source-path\",\n    help=\"A path where CBERS xml source locate\",\n)\n@click.option(\n    \"--user\",\n    help=\"user added the dataset\",\n)\n@click.option(\n    \"--owner-org\",\n    help=\"organisation which the dataset belongs to\",\n)\ndef cbers(source_path,\n          user,\n          owner_org,\n          test_only_flag=False,\n          verbosity_level=2,\n          halt_on_error_flag=False,\n          ):\n    \"\"\"\n        Ingest a collection of CBERS metadata folders.\n\n        :param test_only_flag: Whether to do a dummy run ( database will not be\n            updated. Default False.\n        :type test_only_flag: bool\n\n        :param source_path: A CBERS created CBERS 04 metadata xml file and thumbnail.\n        :type source_path: str\n\n        :param verbosity_level: How verbose the logging output should be. 0-2\n            where 2 is very very very very verbose! Default is 1.\n        :type verbosity_level: int\n\n        :param halt_on_error_flag: Whather we should stop processing when the first\n            error is encountered. Default is True.\n        :type halt_on_error_flag: bool\n\n        :param ignore_missing_thumbs: Whether we should raise an error\n            if we find we are missing a thumbnails. Default is False.\n        :type ignore_missing_thumbs: bool\n        \"\"\"\n\n    def log_message(message, level=1):\n        \"\"\"Log a message for a given leven.\n\n        :param message: A message.\n        :param level: A log level.\n        \"\"\"\n        if verbosity_level &gt;= level:\n            print(message)\n\n    log_message((\n                    'Running CBERS 04 Importer with these options:\\n'\n                    'Test Only Flag: %s\\n'\n                    'Source Dir: %s\\n'\n                    'Verbosity Level: %s\\n'\n                    'Halt on error: %s\\n'\n                    '------------------')\n                % (test_only_flag, source_path, verbosity_level,\n                   halt_on_error_flag), 2)\n\n    # Scan the source folder and look for any sub-folders\n    # The sub-folder names should be e.g.\n    # L5-_TM-_HRF_SAM-_0176_00_0078_00_920606_080254_L0Ra_UTM34S\n    log_message('Scanning folders in %s' % source_path, 1)\n    # Loop through each folder found\n\n    ingestor_version = 'CBERS 04 ingestor version 1.1'\n    record_count = 0\n    updated_record_count = 0\n    created_record_count = 0\n    failed_record_count = 0\n    log_message('Starting directory scan...', 2)\n    list_dataset = glob.glob(os.path.join(source_path, '*.XML'))\n    log_message(f\"dataset {list_dataset}\")\n    # workers = len(list_dataset)\n    with futures.ThreadPoolExecutor(3) as executor:\n        to_do = []\n        for cbers_folder in list_dataset:\n            record_count += 1\n\n            try:\n                # Get the folder name\n                product_folder = os.path.split(cbers_folder)[-1]\n                log_message(product_folder, 2)\n\n                # Find the first and only xml file in the folder\n                # search_path = os.path.join(str(cbers_folder), '*.XML')\n                log_message(cbers_folder, 2)\n                xml_file = glob.glob(cbers_folder)[0]\n                file = os.path.basename(xml_file)\n                file_name = os.path.splitext(file)[0]\n                original_product_id = get_original_product_id(file_name)\n\n                # Create a DOM document from the file\n                dom = parse(xml_file)\n\n                # First grab all the generic properties that any CBERS will have...\n                geometry = get_geometry(log_message, dom)\n                start_date_time, center_date_time = get_dates(\n                    log_message, dom)\n                # projection for GenericProduct\n                projection = get_projection(dom)\n\n                # Band count for GenericImageryProduct\n                band_count = get_band_count(dom)\n                row = get_scene_row(dom)\n                path = get_scene_path(dom)\n                solar_azimuth_angle = get_solar_azimuth_angle(dom)\n                sensor_inclination = get_sensor_inclination()\n                # # Spatial resolution x for GenericImageryProduct\n                spatial_resolution_x = float(get_spatial_resolution_x(dom))\n                # # Spatial resolution y for GenericImageryProduct\n                spatial_resolution_y = float(\n                    get_spatial_resolution_y(dom))\n                log_message('Spatial resolution y: %s' % spatial_resolution_y, 2)\n\n                # # Spatial resolution for GenericImageryProduct calculated as (x+y)/2\n                spatial_resolution = (spatial_resolution_x + spatial_resolution_y) / 2\n                log_message('Spatial resolution: %s' % spatial_resolution, 2)\n                radiometric_resolution = get_radiometric_resolution(dom)\n                log_message('Radiometric resolution: %s' % radiometric_resolution, 2)\n                quality = get_quality(dom)\n                # ProductProfile for OpticalProduct\n                # product_profile = get_product_profile(log_message, original_product_id)\n\n                # Do the ingestion here...\n\n                dataset_name = f\"sansa_{uuid.uuid4()}\"\n\n                data = {\n                    'title': original_product_id,\n                    'owner_org': '',\n                    'lineage_statement': 'cbrs',\n                    'spatial': geometry,\n                    'spatial_representation_type': '007',\n                    'spatial_reference_system': projection,\n                    'reference': center_date_time,\n                    'reference_date_type': '001',\n                    'equivalent_scale': radiometric_resolution,\n                    'name': dataset_name,\n                    'version': '1.0',\n                    'radiometric_resolution': radiometric_resolution,\n                    'band_count': band_count,\n                    'unique_product_id': original_product_id,\n                    'spatial_resolution_x': spatial_resolution_x,\n                    'spatial_resolution_y': spatial_resolution_y,\n                    'spatial_resolution': spatial_resolution,\n                    'product_acquisition_start': start_date_time,\n                    'sensor_inclination_angle': sensor_inclination,\n                    'solar_azimuth_angle': solar_azimuth_angle,\n                    'row': row,\n                    'path': path,\n                    'quality': quality\n                }\n                data[\"id\"] = data[\"unique_product_id\"]\n                data[\"lineage\"] = \"cbrs\"\n                data[\"notes\"] = data[\"radiometric_resolution\"]\n                data[\"owner_org\"] = owner_org\n                data[\"spatial\"] = [\n                [16.4699, -34.8212],\n                [32.8931, -34.8212],\n                [32.8931, -22.1265],\n                [16.4699, -22.1265],\n                [16.4699, -34.8212]\n            ]\n\n                logger.debug('catalogue=======&gt; just after', str(data))\n\n                # Check if it's already in catalogue:\n                # try:\n                #     today = datetime.today()\n                #     time_stamp = today.strftime(\"%Y-%m-%d\")\n                #     log_message('Time Stamp: %s' % time_stamp, 2)\n                # except Exception as e:\n                #     print(e.message)\n\n                # update_mode = True\n\n            except Exception as e:\n                log_message('Error on dataset value')\n\n            logger.debug('catalogue=======&gt;', str(data))\n            user = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {'name': user})\n            future = executor.submit(utils.create_single_dataset, user, data)\n            to_do.append(future)\n            num_created = 0\n            num_already_exist = 0\n            num_failed = 0\n            for done_future in futures.as_completed(to_do):\n                try:\n                    result = done_future.result()\n                    if result == utils.DatasetCreationResult.CREATED:\n                        num_created += 1\n                    elif result == utils.DatasetCreationResult.NOT_CREATED_ALREADY_EXISTS:\n                        num_already_exist += 1\n                except dictization_functions.DataError:\n                    logger.exception(f\"Could not create dataset\")\n                    num_failed += 1\n                except ValueError:\n                    logger.exception(f\"Could not create dataset\")\n                    num_failed += 1\n\n    # To decide: should we remove ingested product folders?\n\n    print('===============================')\n    print('Products processed : %s ' % record_count)\n    print('Products updated : %s ' % updated_record_count)\n    print('Products imported : %s ' % created_record_count)\n    print('Products failed to import : %s ' % failed_record_count)\n    print('===============================')\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.create_iso_topic_categories","title":"create_iso_topic_categories","text":"<pre><code>create_iso_topic_categories()\n</code></pre> <p>Create ISO Topic Categories.</p> <p>This command adds a CKAN vocabulary for the ISO Topic Categories and creates each topic category as a CKAN tag.</p> <p>This command can safely be called multiple times - it will only ever create the vocabulary and themes once.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@bootstrap.command()\ndef create_iso_topic_categories():\n    \"\"\"Create ISO Topic Categories.\n\n    This command adds a CKAN vocabulary for the ISO Topic Categories and creates each\n    topic category as a CKAN tag.\n\n    This command can safely be called multiple times - it will only ever create the\n    vocabulary and themes once.\n\n    \"\"\"\n\n    logger.info(\n        f\"Creating ISO Topic Categories CKAN tag vocabulary and adding \"\n        f\"the relevant categories...\"\n    )\n\n    user = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\n    context = {\"user\": user[\"name\"]}\n    vocab_list = toolkit.get_action(\"vocabulary_list\")(context)\n    for voc in vocab_list:\n        if voc[\"name\"] == ISO_TOPIC_CATEGOY_VOCABULARY_NAME:\n            vocabulary = voc\n            logger.info(\n                f\"Vocabulary {ISO_TOPIC_CATEGOY_VOCABULARY_NAME!r} already exists, \"\n                f\"skipping creation...\"\n            )\n            break\n    else:\n        logger.info(f\"Creating vocabulary {ISO_TOPIC_CATEGOY_VOCABULARY_NAME!r}...\")\n        vocabulary = toolkit.get_action(\"vocabulary_create\")(\n            context, {\"name\": ISO_TOPIC_CATEGOY_VOCABULARY_NAME}\n        )\n\n    for theme_name, _ in ISO_TOPIC_CATEGORIES:\n        if theme_name != \"\":\n            already_exists = theme_name in [tag[\"name\"] for tag in vocabulary[\"tags\"]]\n            if not already_exists:\n                logger.info(\n                    f\"Adding tag {theme_name!r} to \"\n                    f\"vocabulary {ISO_TOPIC_CATEGOY_VOCABULARY_NAME!r}...\"\n                )\n                toolkit.get_action(\"tag_create\")(\n                    context, {\"name\": theme_name, \"vocabulary_id\": vocabulary[\"id\"]}\n                )\n            else:\n                logger.info(\n                    f\"Tag {theme_name!r} is already part of the \"\n                    f\"{ISO_TOPIC_CATEGOY_VOCABULARY_NAME!r} vocabulary, skipping...\"\n                )\n    logger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.create_materialized_view","title":"create_materialized_view","text":"<pre><code>create_materialized_view()\n</code></pre> <p>Create the materialized and table views used to map between CKAN and pycsw</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.command()\ndef create_materialized_view():\n    \"\"\"Create the materialized and table views used to map between CKAN and pycsw\"\"\"\n    logger.info(\"Creating materialized view\")\n    jinja_env = utils.get_jinja_env()\n\n    # Create materialized view\n    materialized_template = jinja_env.get_template(\"pycsw/pycsw_view.sql\")\n    materialized_ddl = materialized_template.render(view_name=_PYCSW_MATERIALIZED_VIEW_NAME)\n    with model.meta.engine.connect() as conn:\n        conn.execute(sla_text(materialized_ddl))\n    logger.info(\"Materialized view created\")\n\n    # Create table view\n    logger.info(\"Creating table view\")\n    table_template = jinja_env.get_template(\"pycsw/pycsw_table.sql\")\n    table_ddl = table_template.render(table_name='saeoss_pycsw_table')\n    with model.meta.engine.connect() as conn:\n        conn.execute(sla_text(table_ddl))\n    logger.info(\"Table view created\")\n\n    logger.info(\"Done creating pycsw views!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.create_pages","title":"create_pages","text":"<pre><code>create_pages()\n</code></pre> <p>Create default pages</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@bootstrap.command()\ndef create_pages():\n    \"\"\"Create default pages\"\"\"\n    logger.info(\"Creating default pages...\")\n    user = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\n    context = {\"user\": user[\"name\"]}\n    existing_pages = toolkit.get_action(\"ckanext_pages_list\")(\n        context=context, data_dict={}\n    )\n    existing_page_names = [p[\"name\"] for p in existing_pages]\n    for page in PORTAL_PAGES:\n        if page.name not in existing_page_names:\n            logger.info(f\"Creating page {page.name!r}...\")\n            toolkit.get_action(\"ckanext_pages_update\")(\n                context=context, data_dict=page.to_data_dict()\n            )\n        else:\n            logger.info(f\"Page {page.name!r} already exists, skipping...\")\n    logger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.create_saeoss_organizations","title":"create_saeoss_organizations","text":"<pre><code>create_saeoss_organizations()\n</code></pre> <p>Create main Saeoss organizations</p> <p>This command creates the main Saeoss organizations.</p> <p>This function may fail if the Saeoss organizations already exist but are disabled, which can happen if they are deleted using the CKAN web frontend.</p> <p>This is a product of a CKAN limitation whereby it is not possible to retrieve a list of organizations regardless of their status - it will only return those that are active.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@bootstrap.command()\ndef create_saeoss_organizations():\n    \"\"\"Create main Saeoss organizations\n\n    This command creates the main Saeoss organizations.\n\n    This function may fail if the Saeoss organizations already exist but are disabled,\n    which can happen if they are deleted using the CKAN web frontend.\n\n    This is a product of a CKAN limitation whereby it is not possible to retrieve a\n    list of organizations regardless of their status - it will only return those that\n    are active.\n\n    \"\"\"\n\n    existing_organizations = toolkit.get_action(\"organization_list\")(\n        context={},\n        data_dict={\n            \"organizations\": [org.name for org in SAEOSS_ORGANIZATIONS],\n            \"all_fields\": False,\n        },\n    )\n    user = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\n    for org_details in SAEOSS_ORGANIZATIONS:\n        if org_details.name not in existing_organizations:\n            logger.info(f\"Creating organization {org_details.name!r}...\")\n            try:\n                toolkit.get_action(\"organization_create\")(\n                    context={\n                        \"user\": user[\"name\"],\n                        \"return_id_only\": True,\n                    },\n                    data_dict={\n                        \"name\": org_details.name,\n                        \"title\": org_details.title,\n                        \"description\": org_details.description,\n                        \"image_url\": org_details.image_url,\n                    },\n                )\n            except toolkit.ValidationError:\n                logger.exception(f\"Could not create organization {org_details.name!r}\")\n    logger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.create_sample_datasets","title":"create_sample_datasets","text":"<pre><code>create_sample_datasets(owner_org, num_datasets, name_prefix, name_suffix, temporal_range, longitude_range, latitude_range)\n</code></pre> <p>Create multiple sample datasets</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@load_sample_data.command()\n@click.argument(\"owner_org\")\n@click.option(\"-n\", \"--num-datasets\", default=10, show_default=True)\n@click.option(\"-p\", \"--name-prefix\", default=\"sample-dataset\", show_default=True)\n@click.option(\"-s\", \"--name-suffix\")\n@click.option(\n    \"-t\",\n    \"--temporal-range\",\n    nargs=2,\n    type=click.DateTime(),\n    default=(dt.datetime(2021, 1, 1), dt.datetime(2022, 12, 31)),\n)\n@click.option(\"-x\", \"--longitude-range\", nargs=2, type=float, default=(16.3, 33.0))\n@click.option(\"-y\", \"--latitude-range\", nargs=2, type=float, default=(-35.0, -21.0))\ndef create_sample_datasets(\n        owner_org,\n        num_datasets,\n        name_prefix,\n        name_suffix,\n        temporal_range,\n        longitude_range,\n        latitude_range,\n):\n    \"\"\"Create multiple sample datasets\"\"\"\n    user = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\n    datasets = generate_sample_datasets(\n        num_datasets,\n        name_prefix,\n        owner_org,\n        name_suffix,\n        temporal_range_start=temporal_range[0],\n        temporal_range_end=temporal_range[1],\n        longitude_range_start=longitude_range[0],\n        longitude_range_end=longitude_range[1],\n        latitude_range_start=latitude_range[0],\n        latitude_range_end=latitude_range[1],\n    )\n    ready_to_create_datasets = [ds.to_data_dict() for ds in datasets]\n    workers = min(3, len(ready_to_create_datasets))\n    with futures.ThreadPoolExecutor(workers) as executor:\n        to_do = []\n        for dataset in ready_to_create_datasets:\n            future = executor.submit(utils.create_single_dataset, user, dataset)\n            to_do.append(future)\n        num_created = 0\n        num_already_exist = 0\n        num_failed = 0\n        for done_future in futures.as_completed(to_do):\n            try:\n                result = done_future.result()\n                if result == utils.DatasetCreationResult.CREATED:\n                    num_created += 1\n                elif result == utils.DatasetCreationResult.NOT_CREATED_ALREADY_EXISTS:\n                    num_already_exist += 1\n            except dictization_functions.DataError:\n                logger.exception(f\"Could not create dataset\")\n                num_failed += 1\n            except ValueError:\n                logger.exception(f\"Could not create dataset\")\n                num_failed += 1\n\n    logger.info(f\"Created {num_created} datasets\")\n    logger.info(f\"Skipped {num_already_exist} datasets\")\n    logger.info(f\"Failed to create {num_failed} datasets\")\n    logger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.create_sample_organizations","title":"create_sample_organizations","text":"<pre><code>create_sample_organizations(app_context)\n</code></pre> <p>Create sample organizations and members</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@load_sample_data.command()\n@provide_request_context\ndef create_sample_organizations(app_context):\n    \"\"\"Create sample organizations and members\"\"\"\n    user = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\n    create_org_action = toolkit.get_action(\"organization_create\")\n    create_org_member_action = toolkit.get_action(\"organization_member_create\")\n    create_harvester_action = toolkit.get_action(\"harvest_source_create\")\n    logger.info(f\"Creating sample organizations ...\")\n    for org_details, memberships, harvesters in SAMPLE_ORGANIZATIONS:\n        logger.debug(f\"Creating {org_details.name!r}...\")\n        try:\n            create_org_action(\n                context={\n                    \"user\": user[\"name\"],\n                },\n                data_dict={\n                    \"name\": org_details.name,\n                    \"title\": org_details.title,\n                    \"description\": org_details.description,\n                    \"image_url\": org_details.image_url,\n                },\n            )\n        except toolkit.ValidationError:\n            logger.exception(f\"Could not create organization {org_details.name!r}\")\n        for user_name, role in memberships:\n            logger.debug(f\"Creating membership {user_name!r} ({role!r})...\")\n            create_org_member_action(\n                context={\n                    \"user\": user[\"name\"],\n                },\n                data_dict={\n                    \"id\": org_details.name,\n                    \"username\": user_name,\n                    \"role\": role if role != \"publisher\" else \"admin\",\n                },\n            )\n        for harvester_details in harvesters:\n            logger.debug(f\"Creating harvest source {harvester_details.name!r}...\")\n            try:\n                create_harvester_action(\n                    context={\"user\": user[\"name\"]},\n                    data_dict={\n                        \"name\": harvester_details.name,\n                        \"url\": harvester_details.url,\n                        \"source_type\": harvester_details.source_type,\n                        \"frequency\": harvester_details.update_frequency,\n                        \"config\": json.dumps(harvester_details.configuration),\n                        \"owner_org\": org_details.name,\n                    },\n                )\n            except toolkit.ValidationError:\n                logger.exception(\n                    f\"Could not create harvest source {harvester_details.name!r}\"\n                )\n                logger.debug(\n                    f\"Attempting to re-enable possibly deleted harvester source...\"\n                )\n                sample_harvester = model.Package.get(harvester_details.name)\n                if sample_harvester is None:\n                    logger.error(\n                        f\"Could not find harvester source {harvester_details.name!r}\"\n                    )\n                    continue\n                else:\n                    sample_harvester.state = model.State.ACTIVE\n                    model.repo.commit()\n    logger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.create_stac_dataset_func","title":"create_stac_dataset_func","text":"<pre><code>create_stac_dataset_func(user, url, owner_org, number_records=10)\n</code></pre> <p>Fetch data from a valid STAC catalog and create one dataset per collection, adding items as resource links.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>def create_stac_dataset_func(user: str, url: str, owner_org: str, number_records: int = 10):\n    \"\"\"\n    Fetch data from a valid STAC catalog\n    and create one dataset per collection, adding items as resource links.\n    \"\"\"\n    catalog = Client.open(url)\n    stac_collections = list(catalog.get_collections())\n\n    try:\n        number_records = int(number_records)\n    except:\n        number_records = 10\n        logger.info(\"number_records is not an integer, setting it to 10\")\n\n    created = 0\n    processed = 0\n\n    stac_harvester_id = uuid.uuid4()\n    q = f\"\"\"INSERT INTO stac_harvester VALUES ('{stac_harvester_id}', '{user}', '{owner_org}', '{url}', '{number_records}', 'running', '', '{datetime.datetime.now()}')\"\"\"\n    model.Session.execute(q)\n    model.Session.commit()\n\n    for collection in stac_collections:\n        if processed &gt; number_records:\n            break\n\n        collection_items = list(collection.get_items())\n        meta_date = datetime.datetime.now().isoformat()\n\n        logger.debug(collection.extent.spatial.bboxes[0])\n\n        data_dict = {\n            \"id\": f\"{catalog.id}_{collection.id}\",\n            \"title\": f\"{catalog.title} - {collection.title}\",\n            \"name\": collection.id,\n            \"notes\": collection.description,\n            \"owner_org\": owner_org,\n            \"lineage_statement\": \"lineage statement\",\n            \"private\": False,\n            \"metadata_language_and_character_set-0-dataset_language\": \"en\",\n            \"metadata_language_and_character_set-0-metadata_language\": \"en\",\n            \"metadata_language_and_character_set-0-dataset_character_set\": \"utf-8\",\n            \"metadata_language_and_character_set-0-metadata_character_set\": \"utf-8\",\n            \"spatial\": \",\".join(map(str, collection.extent.spatial.bboxes[0])) if collection.extent else \"\",\n            \"metadata_date\": meta_date,\n            \"tag_string\": \"general\",\n            \"resources\": []\n        }\n\n        for asset in collection.assets.values():  \n            if \"thumbnail\" in asset.roles:\n                data_dict[\"metadata_thumbnail\"] = asset.href\n                break\n\n        for item in collection_items:\n            for link in item.links:\n                if link.rel == \"thumbnail\":\n                    data_dict[\"resources\"].append({\n                        \"name\": link.target,\n                        \"url\": link.target,\n                        \"format\": \"jpg\",\n                        \"format_version\":\n                            \"1.0\"\n                    })\n                if link.rel == \"self\":\n                    data_dict[\"resources\"].append({\n                        \"name\": item.properties.title or item.id,\n                        \"url\": link.target,\n                        \"format\": \"JSON\",\n                        \"format_version\":\n                            \"1.0\"\n                    })\n        processed = processed + 1\n\n        with futures.ThreadPoolExecutor(3) as executor:\n            user = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {'name': user})\n            future = executor.submit(utils.create_single_dataset, user, data_dict)\n            logger.debug(future.result())\n            if str(future.result()) != 'DatasetCreationResult.NOT_CREATED_ALREADY_EXISTS':\n                created += 1\n\n    _q = f\"\"\"UPDATE stac_harvester SET message = 'finished', status = 'finished' WHERE harvester_id = '{stac_harvester_id}'\"\"\"\n    model.Session.execute(_q)\n    model.Session.commit()\n\n    logger.debug('STAC dataset creation finished')\n    logger.debug(f'{created} records created')\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.defer_to_alembic","title":"defer_to_alembic","text":"<pre><code>defer_to_alembic(alembic_command, collect_args, command_arg, command_kwarg)\n</code></pre> <p>Run an alembic command</p> <p>Examples:</p> <pre><code>\b\ndefer-to-alembic current --command-kwarg=verbose:true\ndefer-to-alembic heads --command-kwarg=verbose:true\ndefer-to-alembic history\n</code></pre> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@extra_commands.command()\n@click.argument(\"alembic_command\")\n@click.option(\n    \"--collect-args\",\n    help=\"Should the command args be collected into a list?\",\n    is_flag=True,\n)\n@click.option(\n    \"--command-arg\",\n    multiple=True,\n    help=\"Arguments for the alembic command. Can be provided multiple times\",\n)\n@click.option(\n    \"--command-kwarg\",\n    multiple=True,\n    help=(\n            \"Provide each keyword argument as a colon-separated string of \"\n            \"key_name:value. This option can be provided multiple times\"\n    ),\n)\ndef defer_to_alembic(alembic_command, collect_args, command_arg, command_kwarg):\n    \"\"\"Run an alembic command\n\n    Examples:\n\n        \\b\n        defer-to-alembic current --command-kwarg=verbose:true\n        defer-to-alembic heads --command-kwarg=verbose:true\n        defer-to-alembic history\n\n    \"\"\"\n\n    alembic_wrapper = AlembicWrapper(\"saeoss\")\n    bool_keys = (\n        \"verbose\",\n        \"autogenerate\",\n    )\n    try:\n        command = getattr(alembic.command, alembic_command)\n    except AttributeError:\n        logger.exception(\"Something wrong with retrieving the command\")\n    else:\n        kwargs = {}\n        for raw_kwarg in command_kwarg:\n            key, value = raw_kwarg.partition(\":\")[::2]\n            if key in bool_keys:\n                kwargs[key] = toolkit.asbool(value)\n            else:\n                kwargs[key] = value\n        if collect_args:\n            out = alembic_wrapper.run_command(command, command_arg, **kwargs)\n        else:\n            out = alembic_wrapper.run_command(command, *command_arg, **kwargs)\n        for line in out:\n            logger.info(line)\n        logger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.delete_data","title":"delete_data","text":"<pre><code>delete_data()\n</code></pre> <p>Delete saeoss bootstrapped and sample data</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.group()\ndef delete_data():\n    \"\"\"Delete saeoss bootstrapped and sample data\"\"\"\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.delete_pages","title":"delete_pages","text":"<pre><code>delete_pages()\n</code></pre> <p>Delete default pages</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@delete_data.command()\ndef delete_pages():\n    \"\"\"Delete default pages\"\"\"\n    logger.info(\"Deleting default pages...\")\n    user = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\n    context = {\"user\": user[\"name\"]}\n    existing_pages = toolkit.get_action(\"ckanext_pages_list\")(\n        context=context, data_dict={}\n    )\n    existing_page_names = [p[\"name\"] for p in existing_pages]\n    for page in PORTAL_PAGES:\n        if page.name in existing_page_names:\n            logger.info(f\"Deleting page {page.name!r}...\")\n            toolkit.get_action(\"ckanext_pages_delete\")(\n                context=context, data_dict={\"page\": page.name}\n            )\n        else:\n            logger.info(f\"Page {page.name!r} does not exist, skipping...\")\n    logger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.delete_saeoss_organizations","title":"delete_saeoss_organizations","text":"<pre><code>delete_saeoss_organizations()\n</code></pre> <p>Delete the main Saeoss organizations.</p> <p>This command will delete the Saeoss organizations from the CKAN DB - CKAN refers to this as purging the organizations (the CKAN default behavior is to have the delete command simply disable the existing organizations, but keeping them in the DB).</p> <p>It can safely be called multiple times - it will only ever delete the organizations once.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@delete_data.command()\ndef delete_saeoss_organizations():\n    \"\"\"Delete the main Saeoss organizations.\n\n    This command will delete the Saeoss organizations from the CKAN DB - CKAN refers to\n    this as purging the organizations (the CKAN default behavior is to have the delete\n    command simply disable the existing organizations, but keeping them in the DB).\n\n    It can safely be called multiple times - it will only ever delete the\n    organizations once.\n\n    \"\"\"\n\n    user = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\n    for org_details in SAEOSS_ORGANIZATIONS:\n        logger.info(f\"Purging  organization {org_details.name!r}...\")\n        try:\n            toolkit.get_action(\"organization_purge\")(\n                context={\"user\": user[\"name\"]}, data_dict={\"id\": org_details.name}\n            )\n        except toolkit.ObjectNotFound:\n            logger.info(\n                f\"Organization {org_details.name!r} does not exist, skipping...\"\n            )\n    logger.info(f\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.delete_sample_datasets","title":"delete_sample_datasets","text":"<pre><code>delete_sample_datasets()\n</code></pre> <p>Deletes at most 1000 of existing sample datasets</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@delete_data.command()\ndef delete_sample_datasets():\n    \"\"\"Deletes at most 1000 of existing sample datasets\"\"\"\n    user = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\n    purge_dataset_action = toolkit.get_action(\"dataset_purge\")\n    get_datasets_action = toolkit.get_action(\"package_search\")\n    max_rows = 1000\n    existing_sample_datasets = get_datasets_action(\n        context={\"user\": user[\"name\"]},\n        data_dict={\n            \"q\": f\"tags:{SAMPLE_DATASET_TAG}\",\n            \"rows\": max_rows,\n            \"facet\": False,\n            \"include_drafts\": True,\n            \"include_private\": True,\n        },\n    )\n    for dataset in existing_sample_datasets[\"results\"]:\n        logger.debug(f\"Purging dataset {dataset['name']!r}...\")\n        purge_dataset_action(\n            context={\"user\": user[\"name\"]}, data_dict={\"id\": dataset[\"id\"]}\n        )\n    num_existing = existing_sample_datasets[\"count\"]\n    remaining_sample_datasets = num_existing - max_rows\n    if remaining_sample_datasets &gt; 0:\n        logger.info(f\"{remaining_sample_datasets} still remain\")\n    logger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.delete_sample_organizations","title":"delete_sample_organizations","text":"<pre><code>delete_sample_organizations()\n</code></pre> <p>Delete sample organizations.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@delete_data.command()\ndef delete_sample_organizations():\n    \"\"\"Delete sample organizations.\"\"\"\n    user = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\n\n    org_show_action = toolkit.get_action(\"organization_show\")\n    purge_org_action = toolkit.get_action(\"organization_purge\")\n    package_search_action = toolkit.get_action(\"package_search\")\n    dataset_purge_action = toolkit.get_action(\"dataset_purge\")\n    harvest_source_list_action = toolkit.get_action(\"harvest_source_list\")\n    harvest_source_delete_action = toolkit.get_action(\"harvest_source_delete\")\n    logger.info(f\"Purging sample organizations ...\")\n    for org_details, _, _ in SAMPLE_ORGANIZATIONS:\n        try:\n            org = org_show_action(\n                context={\"user\": user[\"name\"]}, data_dict={\"id\": org_details.name}\n            )\n            logger.debug(f\"{org = }\")\n        except toolkit.ObjectNotFound:\n            logger.info(f\"Organization {org_details.name} does not exist, skipping...\")\n        else:\n            packages = package_search_action(\n                context={\"user\": user[\"name\"]},\n                data_dict={\"fq\": f\"owner_org:{org['id']}\"},\n            )\n            logger.debug(f\"{packages = }\")\n            for package in packages[\"results\"]:\n                logger.debug(f\"Purging package {package['id']}...\")\n                dataset_purge_action(\n                    context={\"user\": user[\"name\"]}, data_dict={\"id\": package[\"id\"]}\n                )\n            harvest_sources = harvest_source_list_action(\n                context={\"user\": user[\"name\"]}, data_dict={\"organization_id\": org[\"id\"]}\n            )\n            logger.debug(f\"{ harvest_sources = }\")\n            for harvest_source in harvest_sources:\n                logger.debug(f\"Deleting harvest_source {harvest_source['title']}...\")\n                harvest_source_delete_action(\n                    context={\"user\": user[\"name\"], \"clear_source\": True},\n                    data_dict={\"id\": harvest_source[\"id\"]},\n                )\n            logger.debug(f\"Purging {org_details.name!r}...\")\n            purge_org_action(\n                context={\"user\": user[\"name\"]},\n                data_dict={\"id\": org[\"id\"]},\n            )\n    logger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.delete_sample_users","title":"delete_sample_users","text":"<pre><code>delete_sample_users()\n</code></pre> <p>Delete sample users.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@delete_data.command()\ndef delete_sample_users():\n    \"\"\"Delete sample users.\"\"\"\n    user = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\n    delete_user_action = toolkit.get_action(\"user_delete\")\n    logger.info(f\"Deleting sample users ...\")\n    for user_details in SAMPLE_USERS:\n        logger.info(f\"Deleting {user_details.name!r}...\")\n        delete_user_action(\n            context={\"user\": user[\"name\"]},\n            data_dict={\"id\": user_details.name},\n        )\n    logger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.drop_materialized_view","title":"drop_materialized_view","text":"<pre><code>drop_materialized_view()\n</code></pre> <p>Delete the materialized view used to map between CKAN and pycsw</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.command()\ndef drop_materialized_view():\n    \"\"\"Delete the materialized view used to map between CKAN and pycsw\"\"\"\n    with model.meta.engine.connect() as conn:\n        conn.execute(\n            sla_text(\n                f\"DROP MATERIALIZED VIEW {_PYCSW_MATERIALIZED_VIEW_NAME};\"\n                f\"DROP TABLE saeoss_pycsw_table;\"\n            )\n        )\n    logger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.extra_commands","title":"extra_commands","text":"<pre><code>extra_commands()\n</code></pre> <p>Extra commands that are less relevant</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.group()\ndef extra_commands():\n    \"\"\"Extra commands that are less relevant\"\"\"\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.harvesting_dispatcher","title":"harvesting_dispatcher","text":"<pre><code>harvesting_dispatcher(ctx, post_run_delay_seconds)\n</code></pre> <p>Manages the harvesting queue and then sleeps a while after that.</p> <p>This command takes care of submitting pending jobs and marking done jobs as finished.</p> <p>It is similar to ckanext.harvest's <code>harvester run</code> CLI command, with the difference being that this command is designed to run and then wait a specific amount of time before exiting. This is a workaround for the fact that it is not possible to specify a delay period when restarting docker containers in docker-compose's normal mode.</p> <p>NOTE: This command is not needed when running under k8s or docker-compose swarm mode, as these offer other ways to control periodic services. In that case you can simply configure the periodic service and then use</p> <p><code>launch-ckan-cli harvester run</code></p> <p>as the container's CMD instruction.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@extra_commands.command()\n@click.option(\n    \"--post-run-delay-seconds\",\n    help=\"How much time to sleep after performing the harvesting command\",\n    default=(60 * 5),\n)\n@click.pass_context\ndef harvesting_dispatcher(ctx, post_run_delay_seconds: int):\n    \"\"\"Manages the harvesting queue and then sleeps a while after that.\n\n    This command takes care of submitting pending jobs and marking done jobs as finished.\n\n    It is similar to ckanext.harvest's `harvester run` CLI command, with the difference\n    being that this command is designed to run and then wait a specific amount of time\n    before exiting. This is a workaround for the fact that it is not possible to\n    specify a delay period when restarting docker containers in docker-compose's normal\n    mode.\n\n    NOTE: This command is not needed when running under k8s or docker-compose swarm\n    mode, as these offer other ways to control periodic services. In that case you can\n    simply configure the periodic service and then use\n\n    `launch-ckan-cli harvester run`\n\n    as the container's CMD instruction.\n\n    \"\"\"\n\n    flask_app = ctx.meta[\"flask_app\"]\n    with flask_app.test_request_context():\n        logger.info(f\"Calling harvester run command...\")\n        harvest_utils.run_harvester()\n    logger.info(f\"Sleeping for {post_run_delay_seconds!r} seconds...\")\n    time.sleep(post_run_delay_seconds)\n    logger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.ingest","title":"ingest","text":"<pre><code>ingest()\n</code></pre> <p>Ingest a collection to metadata</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.group()\ndef ingest():\n    \"\"\" Ingest a collection to metadata\"\"\"\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.load_sample_data","title":"load_sample_data","text":"<pre><code>load_sample_data()\n</code></pre> <p>Load sample data into non-production deployments</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.group()\ndef load_sample_data():\n    \"\"\"Load sample data into non-production deployments\"\"\"\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.pycsw","title":"pycsw","text":"<pre><code>pycsw()\n</code></pre> <p>Commands related to integration between CKAN and pycsw</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.group()\ndef pycsw():\n    \"\"\"Commands related to integration between CKAN and pycsw\"\"\"\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.refresh_materialized_view","title":"refresh_materialized_view","text":"<pre><code>refresh_materialized_view()\n</code></pre> <p>Refresh the materialized view used to map between CKAN and pycsw</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.command()\ndef refresh_materialized_view():\n    \"\"\"Refresh the materialized view used to map between CKAN and pycsw\"\"\"\n    with model.meta.engine.connect() as conn:\n        conn.execute(\n            sla_text(\n                f\"REFRESH MATERIALIZED VIEW {_PYCSW_MATERIALIZED_VIEW_NAME};\"\n                f\"DELETE FROM saeoss_pycsw_table;\"\n                f\"INSERT INTO saeoss_pycsw_table SELECT * FROM saeoss_pycsw_view;\"\n            )\n        )\n    logger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.refresh_pycsw_materialized_view","title":"refresh_pycsw_materialized_view","text":"<pre><code>refresh_pycsw_materialized_view(ctx, post_run_delay_seconds)\n</code></pre> <p>Refreshes the pycsw materiolized view and then sleeps for a while</p> <p>This is similar to our own <code>ckan run pycsw refresh-materialized-view</code>, with the difference being that this command is designed to run and then wait a specific amount of time before exiting. This is a workaround for the fact that it is not possible to specify a delay period when restarting docker containers in docker-compose's normal mode.</p> <p>NOTE: This command is not needed when running under k8s or docker-compose swarm mode, as these offer other ways to control periodic services. In that case you can simply configure a periodic service and then use</p> <p><code>launch-ckan-cli saeoss pycsw refresh-materizalied-view</code></p> <p>as the container's CMD instruction.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@extra_commands.command()\n@click.option(\n    \"--post-run-delay-seconds\",\n    help=\"How much time to sleep after refreshing the materialized view\",\n    default=(60 * 5),\n)\n@click.pass_context\ndef refresh_pycsw_materialized_view(ctx, post_run_delay_seconds: int):\n    \"\"\"Refreshes the pycsw materiolized view and then sleeps for a while\n\n    This is similar to our own `ckan run pycsw refresh-materialized-view`, with the\n    difference being that this command is designed to run and then wait a specific\n    amount of time before exiting. This is a workaround for the fact that it is not\n    possible to specify a delay period when restarting docker containers in\n    docker-compose's normal mode.\n\n    NOTE: This command is not needed when running under k8s or docker-compose swarm\n    mode, as these offer other ways to control periodic services. In that case you can\n    simply configure a periodic service and then use\n\n    `launch-ckan-cli saeoss pycsw refresh-materizalied-view`\n\n    as the container's CMD instruction.\n\n    \"\"\"\n\n    flask_app = ctx.meta[\"flask_app\"]\n    with flask_app.test_request_context():\n        logger.info(f\"Calling the pycsw refresh-materialized-view command...\")\n        ctx.invoke(refresh_materialized_view)\n    logger.info(f\"Sleeping for {post_run_delay_seconds!r} seconds...\")\n    time.sleep(post_run_delay_seconds)\n    logger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.saeoss","title":"saeoss","text":"<pre><code>saeoss(verbose)\n</code></pre> <p>Commands related to the saeoss extension.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@click.group()\n@click.option(\"--verbose\", is_flag=True)\ndef saeoss(verbose: bool):\n    \"\"\"Commands related to the saeoss extension.\"\"\"\n    click_handler = utils.ClickLoggingHandler()\n    logging.basicConfig(\n        level=logging.DEBUG if verbose else logging.INFO, handlers=(click_handler,)\n    )\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.send_email_notifications","title":"send_email_notifications","text":"<pre><code>send_email_notifications()\n</code></pre> <p>Send pending email notifications to users</p> <p>This command should be ran periodically.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.command()\ndef send_email_notifications():\n    \"\"\"Send pending email notifications to users\n\n    This command should be ran periodically.\n\n    \"\"\"\n\n    setting_key = \"ckan.activity_streams_email_notifications\"\n    if toolkit.asbool(toolkit.config.get(setting_key)):\n        env_sentinel = \"CKAN_SMTP_PASSWORD\"\n        if os.getenv(env_sentinel) is not None:\n            num_sent = get_and_send_notifications_for_all_users()\n            logger.info(f\"Sent {num_sent} emails\")\n            logger.info(\"Done!\")\n        else:\n            logger.error(\n                f\"Could not find the {env_sentinel!r} environment variable. Email \"\n                f\"notifications are not configured correctly. Aborting...\",\n            )\n    else:\n        logger.error(f\"{setting_key} is not enabled in config. Aborting...\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.shell","title":"shell","text":"<pre><code>shell()\n</code></pre> <p>Launch a shell with CKAN already imported and ready to explore</p> <p>The implementation of this command is mostly inspired and adapted from django's <code>shell</code> command</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@click.command()\ndef shell():\n    \"\"\"\n    Launch a shell with CKAN already imported and ready to explore\n\n    The implementation of this command is mostly inspired and adapted from django's\n    `shell` command\n\n    \"\"\"\n\n    try:\n        from IPython import start_ipython\n\n        start_ipython(argv=[])\n    except ImportError:\n        import code\n\n        # Set up a dictionary to serve as the environment for the shell.\n        imported_objects = {}\n\n        # By default, this will set up readline to do tab completion and to read and\n        # write history to the .python_history file, but this can be overridden by\n        # $PYTHONSTARTUP or ~/.pythonrc.py.\n        try:\n            sys.__interactivehook__()\n        except Exception:\n            # Match the behavior of the cpython shell where an error in\n            # sys.__interactivehook__ prints a warning and the exception and continues.\n            print(\"Failed calling sys.__interactivehook__\")\n            traceback.print_exc()\n\n        # Set up tab completion for objects imported by $PYTHONSTARTUP or\n        # ~/.pythonrc.py.\n        try:\n            import readline\n            import rlcompleter\n\n            readline.set_completer(rlcompleter.Completer(imported_objects).complete)\n        except ImportError:\n            pass\n\n        # Start the interactive interpreter.\n        code.interact(local=imported_objects)\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.stac","title":"stac","text":"<pre><code>stac()\n</code></pre> <p>Commnads related to STAC catalogues</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.group()\ndef stac():\n    \"\"\"Commnads related to STAC catalogues\"\"\"\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.test_background_job","title":"test_background_job","text":"<pre><code>test_background_job(job_name, job_arg, job_kwarg)\n</code></pre> <p>Run background jobs synchronously</p> <p>JOB_NAME is the name of the job function to be run. Look in the <code>jobs</code> module for existing functions.</p> <p>Example:</p> <p>\b     ckan saeoss test-background-job \\         notify_org_admins_of_dataset_maintenance_request \\         --job-arg=f1733d0c-5188-43b3-8039-d95efb76b4f5</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@extra_commands.command()\n@click.argument(\"job_name\")\n@click.option(\n    \"--job-arg\",\n    multiple=True,\n    help=\"Arguments for the job function. Can be provided multiple times\",\n)\n@click.option(\n    \"--job-kwarg\",\n    multiple=True,\n    help=(\n            \"Provide each keyword argument as a colon-separated string of \"\n            \"key_name:value. This option can be provided multiple times\"\n    ),\n)\ndef test_background_job(job_name, job_arg, job_kwarg):\n    \"\"\"Run background jobs synchronously\n\n    JOB_NAME is the name of the job function to be run. Look in the `jobs` module for\n    existing functions.\n\n    Example:\n\n    \\b\n        ckan saeoss test-background-job \\\\\n            notify_org_admins_of_dataset_maintenance_request \\\\\n            --job-arg=f1733d0c-5188-43b3-8039-d95efb76b4f5\n\n    \"\"\"\n\n    job_function = getattr(jobs, job_name, None)\n    if job_function is not None:\n        kwargs = {}\n        for raw_kwarg in job_kwarg:\n            key, value = raw_kwarg.partition(\":\")[::2]\n            kwargs[key] = value\n        job_function(*job_arg, **kwargs)\n        logger.info(\"Done!\")\n    else:\n        logger.error(f\"Job function {job_name!r} does not exist\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.utils.ClickLoggingHandler","title":"ClickLoggingHandler","text":"<p>               Bases: <code>Handler</code></p> <p>Custom logging handler to allow using click output functions</p>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.utils.sanitize_dataset_name","title":"sanitize_dataset_name","text":"<pre><code>sanitize_dataset_name(name)\n</code></pre> <p>Converts a string to a CKAN-compliant dataset name.</p> Source code in <code>ckanext/saeoss/cli/utils.py</code> <pre><code>def sanitize_dataset_name(name: str) -&gt; str:\n    \"\"\"\n    Converts a string to a CKAN-compliant dataset name.\n    \"\"\"\n    # Lowercase, replace spaces with dashes, remove invalid characters\n    name = name.lower().replace(\" \", \"-\")\n    name = re.sub(r\"[^a-z0-9\\-_]\", \"\", name)\n    return name\n</code></pre>"},{"location":"developer/manual/coding-conventions/","title":"Coding Conventions","text":"<ul> <li>Coding must follow a style guide. In case of Python it is   PEP8 and   using the command line tool pep8 (or <code>make pep8</code>) to enforce this.   The pep8 checks E121-E128 have been disabled until pep8 version 1.3 becomes   widely available.</li> <li>Python documentation guide</li> <li>Code must pass a pylint validation. You can test   this using the make target <code>make pylint</code>. In some cases you may wish to   override a line or group of lines so that they are not validated by pylint.   You can do this by adding either:</li> </ul> <pre><code>     import foo  # pylint: disable=unused-imports\n</code></pre> <p>or:</p> <pre><code>     # pylint: disable=unused-imports\n     import foo\n     print 'hello'\n     print 'goodbye'\n     # pylint: enable=unused-imports\n</code></pre> <p>Note: The use of messages codes (e.g. <code>disable=W1234</code>) should be considered deprecated. Any new exceptions should be added using the keyword format (e.g. <code>disable=unused-exceptions</code>).</p> <p>.. note:: You can globally ignore messages by adding them to :file:<code>pylintrc</code>      in the :samp:<code>[MESSAGES CONTROL]</code> section.</p> <p>The following pylint messages have been thus globally excluded from the check. For a discussion of these see also github issue #245.</p> <ul> <li>All type R: Refactor suggestions such as limiting the number of local                 variables. We may bring some back later.</li> <li>All type I: Information only</li> <li>W0142: Allow the Python feature F(*args, **kwargs)</li> <li>W0201: Allow definition of class attributes outside the constructor.</li> <li>W0212: Allow access to protected members (e.g. _show_system_info)</li> <li>W0231: Allow classes without constructors.</li> <li>W0232: Un-instantiated classes is a feature used in this project.</li> <li>W0403: Relative imports are OK for modules that live in the same dir</li> <li>W0511: Appearance of TODO and FIXME is not a sign of poor quality</li> <li>E1101: Disable check for missing attributes.</li> <li>E1103: This one does not understand numpy variables.</li> <li>C0103: Allow mathematical variables such as x0 or A.</li> <li>C0111: Allow missing docstrings in some cases</li> <li>C0302: No restriction on the number of lines per module</li> </ul> <p>The following pylint check has been removed from Jenkins due to a bug in astroid.</p> <ul> <li>E1002: Use of super on an old style class.</li> </ul> <p>It is of course possible to run all pylint checks on any part of the code   if desired: E.g pylint safe/storage/raster.py</p>"},{"location":"developer/manual/coding-conventions/#naming-conventions","title":"Naming conventions","text":"<p>Variable names should as far as possible follow python naming conventions (see Qt Notes below for exceptions to this rule).</p> <p>We reject the idea the code should be obfuscated with hard to understand symbol names. For this reason all classes, methods, functions, variable names should be written in full. At the same time overly verbose names should be avoided. Here is an example of what we mean by this:</p> <p>Bad:</p> <pre><code>    cur_dpth = 0  # obscure\n    currentDepth = 0  # camel case is not python standard\n    content_of_page = 'foo'  # overly verbose\n</code></pre> <p>Good:</p> <pre><code>    current_depth = 0\n    page_content = 'foo'\n</code></pre> <p>Avoid 'yoda speak' in variable names.</p> <p>Bad:</p> <pre><code>    title_dialog = self.tr('Save Scenario')\n</code></pre> <p>Good:</p> <pre><code>    dialog_title = self.tr('Save Scenario')\n</code></pre> <p>This is a summary of the naming conventions you should use:</p> <ul> <li>package dir name: concise (preferably single word) lower case, underscore   separated e.g. <code>utilities</code>.</li> <li>module file name: concise (preferably single word) lower case, underscore   separated e.g. <code>utilities.py</code>.</li> <li>class name: Concise singular camel case phrase e.g. <code>PrintDialog</code>.</li> <li>method and function name: Concise lower case underscore separated name   .e.g. <code>remove_entry</code>. Avoid java style get suffixes as it adds no   useful meaning to a symbol name.</li> <li>variable naming: Concise, unabbreviated, lower case, underscore separated   e.g. <code>population_count</code>.</li> </ul>"},{"location":"developer/manual/coding-conventions/#code-formatting","title":"Code formatting","text":"<p>The guidelines above still leave substantial room for your own approach to code style so the following provide some more explicit guidelines.</p> <p>We follow a 'pull left' policy in our code. This means that instead of e.g.::</p> <pre><code>    def polygonize_thresholds(raster_file_name,\n                          threshold_min=0.0,\n                          threshold_max=float('inf')):\n</code></pre> <p>You should rather do this:</p> <pre><code>    def polygonize_thresholds(\n        raster_file_name,\n        threshold_min=0.0,\n        threshold_max=float('inf')):\n</code></pre> <p>The same applies in all other contexts. For example, calling a function:</p> <pre><code>    clipped_exposure = clip_layer(\n        layer=exposure_layer,\n        extent=geo_extent,\n        cell_size=cell_size,\n        extra_keywords=extra_exposure_keywords,\n        hard_clip_flag=self.clip_hard)\n</code></pre> <p>We do this because the 80 character line limit in PEP8 can cause visual clutter in your code as you manage line breaks as you run up to the 80 column limit. By always pulling code left as much as possible, we reduce the amount of line continuation management we have to do.</p>"},{"location":"developer/manual/coding-conventions/#ordering-of-imports","title":"Ordering of imports","text":"<p>When importing please adhere to the following rules:</p> <p>Do not do <code>*</code> imports e.g.</p> <pre><code>from PyQt4.QtGui import *\n</code></pre> <p>is bad.</p> <p>Either import the individual modules you need e.g.</p> <pre><code>from PyQt4.QtGui import QProgressDialog\n</code></pre> <p>or import the whole package and use the namespace to reference a module e.g.:</p> <pre><code>    from PyQt4 import QtGui\n\n    progress = QtGui.QProgressDialog()\n</code></pre> <p>Imports should be made in the following order:</p> <ul> <li>core python imports (e.g. <code>import os</code>)</li> <li>third party imports (e.g. <code>from PyQt4 import QtGui</code>)</li> <li>application imports (e.g. <code>from foo import bar</code>)</li> </ul>"},{"location":"developer/manual/coding-conventions/#doc-strings-and-comments","title":"Doc strings and comments","text":"<p>All code should be self documenting. Please take special note and follow these PEP guidelines and sphinx documents:</p> <ul> <li>http://www.python.org/dev/peps/pep-0287/</li> <li>http://sphinx-doc.org/markup/desc.html#info-field-lists</li> <li>http://thomas-cokelaer.info/tutorials/sphinx/docstring_python.html</li> </ul> <p>We follow these specific guidelines for our code:</p> <ul> <li>Docstrings must triple quoted with <code>\"\"\"</code></li> <li>Inline comments should start with a # and a single space.</li> <li>Comments should be complete sentences ending with a full stop / period.</li> <li>If a comment is a phrase or sentence, its first word should be capitalized,   unless it is an identifier that begins with a lower case letter (never alter   the case of identifiers!).</li> </ul> <p>We use the following style for documenting functions and class methods:</p> <pre><code>class MyObject(object):\n\n   \"\"\"My new class.\"\"\"\n\n    def set_keyword_db_path(self, path):\n        \"\"\"Set the path for the keyword database (sqlite).\n\n        The file will be used to search for keywords for non local datasets.\n\n        :param path: A valid path to a sqlite database. The database does\n            not need to exist already, but the user should be able to write\n            to the path provided.\n        :type path: str\n\n        :returns: Flag indicating if the path was set successfully.\n        :rtype: boolean\n        \"\"\"\n        self.keyword_db_path = str(path)\n</code></pre> <p>Another example:</p> <pre><code>class MyObject(object):\n\n   \"\"\"My new class.\"\"\"\n\n    def add_layers(scenario_dir, paths):\n        \"\"\"Add the layers described in a scenario file to QGIS.\n\n        :param scenario_dir: Base directory to find path.\n        :type scenario_dir: str\n\n        :param paths: Path of scenario file (or a list of paths).\n        :type paths: str, list\n\n        :raises: Exception, TypeError, FileNotFoundError\n\n        .. note::\n            * Exception - occurs when paths have illegal extension\n            * TypeError - occurs when paths is not string or list\n            * FileNotFoundError - occurs when file not found\n    \"\"\"\n</code></pre> <p>Note the following in the above examples:</p> <ul> <li>The first line of a docstring should be a precise description of the class/method/function   expressed in less than 80 chars, terminated with a full stop and excluding   redundant phrases such as 'Class to do x' or 'This method does...'.</li> <li>There should be an empty line following the first docstring line.</li> <li>More detailed explanation and usage examples can follow this first line. The   detailed explanation should not repeat the information provided in the   parameters and returns sections.</li> <li>A line break should follow the optional detailed description.</li> <li>param and type are grouped together with no line break between them.</li> <li>If the param description is more than one line, indent the successive lines   with 4 spaces.</li> <li>A newline should be placed after each type and rtype.</li> <li>If multiple types are allowed, separate them with commas e.g. <code>:rtype: str,   boolean</code>.</li> <li>If a function or method returns nothing, no returns section is used.</li> <li>If a function or method does not raise anything explicitly, no raises section   is used.</li> <li>If a function or method is extremely obvious there is no need to have   anything more than a single line docstring.</li> <li>If a function or method returns a tuple it should be be documented as   <code>:rtype: (&lt;type&gt;, &lt;type&gt;, ..)</code> e.g. <code>:rtype: (int, int)</code>.</li> </ul>"},{"location":"developer/manual/coding-conventions/#strings-and-internationalisation","title":"Strings and internationalisation","text":"<ul> <li>Simple strings in source code should be quoted with <code>'</code></li> <li>Favour interpolation over concatenation. For example this is bad:</li> </ul> <pre><code>    world = 'World'\n    foo = 'Hello ' + world\n</code></pre> <p>And this is good:</p> <pre><code>    world = 'World'\n    food = 'Hello %s' % world\n</code></pre> <ul> <li>Use parenthesis for long strings. For example this is bad:</li> </ul> <pre><code>    foo = 'The quick brown fox jumps over the lazy dog. ' +\n          'The slow fat rat runs around the mouldy cheese.'\n</code></pre> <p>And this is good:</p> <pre><code>    bar = (\n        'The quick brown fox jumps over the lazy dog. '\n        'The slow fat rat runs around the mouldy cheese.')\n</code></pre> <p>Note: The good example above follows the 'pull left' principle.</p> <ul> <li>All strings should be internationalisation enabled. Please see [i18n]   for details.</li> <li> <p>When using gettext, alias the uggettext as tr, and do not use the common   convention of <code>_('foo')</code> as the underscore trips up some tools like pylint,   sphinx. Also using <code>tr</code> makes it easy to migrate code to and from Qt's   translation system and gettext. Note: gettext use is deprecated in InaSAFE.</p> </li> <li> <p>If you use a literal string or expression in more than one place, refactor   it into a function or variable.</p> </li> </ul>"},{"location":"developer/manual/coding-conventions/#standard-headers","title":"Standard headers","text":"<p>Each source file should include a standard header containing copyright, authorship and version metadata as shown in the exampled below.</p> <p>Example standard header:</p> <pre><code># -*- coding: utf-8 -*-\n\"\"\"One line description.\n\n.. tip::\n   Detailed multi-paragraph description...\n\"\"\"\n\nimport os  # python core imports first\nimport qgis.core  # then external imports\nimport safe.utils.gis  # then project imports (always using full path)\n\n__copyright__ = \"Copyright 2016, The InaSAFE Project\"\n__license__ = \"GPL version 3\"\n__email__ = \"info@inasafe.org\"\n__revision__ = '$Format:%H$'\n</code></pre> <p>Note:: Please see [faq_developer] for details on how the revision tag is replaced with the SHA1 for the file when the release packages are made.</p>"},{"location":"developer/manual/coding-conventions/#landscape","title":"Landscape","text":"<pre><code># coding=utf-8-\n\n\"\"\"One line description with full stop. New line after file-docstring.\"\"\"\n\nimport os\nimport qgis.core\nimport safe.utils.gis\n\n__copyright__ = \"Copyright 2016, The InaSAFE Project\"\n__license__ = \"GPL version 3\"\n__email__ = \"info@inasafe.org\"\n__revision__ = '$Format:%H$'\n\nclass MyObject(object):\n\n    \"\"\"Class docstring with one new line before and after and full stop.\"\"\"\n\n    def my_function(self, foo):\n    \"\"\"One line descriptive sentence with full stop and a new line between each block.\n\n    Extra information goes here.\n\n    :param foo: Text with full stop.\n    :type foo: object\n\n    :return: It returns something.\n    :rtype: basestring\n    \"\"\"\n    i = 0  # No new line after method/function docstring.\n    return i\n</code></pre>"},{"location":"developer/manual/constants/","title":"Constants","text":"<p>This contains all the constant variables the SAEOSS-portal will use for the development.</p> <p>The constant variables whose values can not be changed.</p> <p>Examples:</p> <p><code>SANSA_ORG_NAME = \"sansa\"</code></p> <pre><code>PROJECTION = {\n    \"32737\": \"UTM37S\",\n    \"32733\": \"UTM33S\",\n    \"32738\": \"UTM38S\",\n    ...\n    \"0\": \"ORBIT\"\n}\n</code></pre>"},{"location":"developer/manual/csw/","title":"CSW","text":""},{"location":"developer/manual/csw/#overview","title":"Overview","text":"<p>Catalogue Service for the Web (CSW) is a catalogue service support the ability to  publish and search collections of descriptive information (metadata) for data, services, and related information objects.  Metadata in catalogues represent resource characteristics that can be queried and presented for evaluation and further  processing by both humans and software. Catalogue services are required to support the discovery and binding to registered  information resources within an information community.</p> <p>In SAEOSS portal, we implemented pycsw to allow the publishing and discovery of geospatial metadata  via numerous APIs. </p>"},{"location":"developer/manual/csw/#pycsw-configuration","title":"pycsw configuration","text":"<p>There are many ways to install pycsw, but in SAEOSS we install it via docker. After building the project, there is a  container called <code>saeoss-pycsw-1</code></p> <p>After running the <code>docker-compose</code>, the CSW page is visible at http://localhost:5001/</p> <p></p>"},{"location":"developer/manual/csw/#generate-pycsw-db-view","title":"Generate pycsw DB view","text":"<p>To be able to access the portal's datasets via various OGC standards and on CSW web page, a materialized view  must be created into the database and integrated into pycsw. </p> <pre><code>docker exec -ti saeoss_ckan-web_1 poetry run ckan saeoss pycsw create-materialized-view\n</code></pre>"},{"location":"developer/manual/csw/#refresh-pycsw-materialized-view","title":"Refresh pycsw materialized view","text":"<pre><code>docker exec -t saeoss-ckan-web-1 poetry run ckan saeoss pycsw refresh-materialized-view\n</code></pre>"},{"location":"developer/manual/email-notification/","title":"Email notification","text":"<p>Reimplementation of the core CKAN email notifications.</p> <p>This module reimplements the core CKAN email notifications in order to:</p> <ul> <li> <p>Be able to provide more visibility onto what is going on. This includes returning the   number of emails being sent.</p> </li> <li> <p>Modify the default implementation in order to not require an active request.</p> </li> </ul>"},{"location":"developer/manual/email-notification/#ckanext.saeoss.email_notifications.get_notifications","title":"get_notifications","text":"<pre><code>get_notifications(user_dict, since)\n</code></pre> <p>Return any email notifications for the given user since <code>since</code>.</p> <p>For example email notifications about activity streams will be returned for any activities the occurred since <code>since</code>.</p> <p>Parameters:</p> Name Type Description Default <code>user_dict</code> <code>dictionary</code> <p>a dictionary representing the user, should contain 'id' and 'name'</p> required <code>since</code> <p>datetime after which to return notifications from</p> required <p>Returns:</p> Type Description <code>list of dicts with keys 'subject' and 'body'</code> <p>a list of email notifications</p> Source code in <code>ckanext/saeoss/email_notifications.py</code> <pre><code>def get_notifications(user_dict, since):\n    \"\"\"Return any email notifications for the given user since `since`.\n\n    For example email notifications about activity streams will be returned for\n    any activities the occurred since `since`.\n\n    :param user_dict: a dictionary representing the user, should contain 'id'\n        and 'name'\n    :type user_dict: dictionary\n\n    :param since: datetime after which to return notifications from\n    :rtype since: datetime.datetime\n\n    :returns: a list of email notifications\n    :rtype: list of dicts with keys 'subject' and 'body'\n\n    \"\"\"\n    notifications = []\n    for function in _notifications_functions:\n        notifications.extend(function(user_dict, since))\n    return notifications\n</code></pre>"},{"location":"developer/manual/email-notification/#ckanext.saeoss.email_notifications.send_notification","title":"send_notification","text":"<pre><code>send_notification(user, email_dict)\n</code></pre> <p>Email <code>email_dict</code> to <code>user</code>.</p> Source code in <code>ckanext/saeoss/email_notifications.py</code> <pre><code>def send_notification(user, email_dict):\n    \"\"\"Email `email_dict` to `user`.\"\"\"\n    import ckan.lib.mailer\n\n    if not user.get(\"email\"):\n        # FIXME: Raise an exception.\n        return\n\n    try:\n        ckan.lib.mailer.mail_recipient(\n            user[\"display_name\"],\n            user[\"email\"],\n            email_dict[\"subject\"],\n            email_dict[\"body\"],\n        )\n    except ckan.lib.mailer.MailerException:\n        logger.error(ckan.lib.mailer.MailerException)\n        raise\n    else:\n        logger.debug(f\"Email sent!\")\n</code></pre>"},{"location":"developer/manual/email-notification/#ckanext.saeoss.email_notifications.string_to_timedelta","title":"string_to_timedelta","text":"<pre><code>string_to_timedelta(s)\n</code></pre> <p>Parse a string s and return a standard datetime.timedelta object.</p> <p>Handles days, hours, minutes, seconds, and microseconds.</p> <p>Accepts strings in these formats:</p> <p>2 days 14 days 4:35:00 (hours, minutes and seconds) 4:35:12.087465 (hours, minutes, seconds and microseconds) 7 days, 3:23:34 7 days, 3:23:34.087465 .087465 (microseconds only)</p> <p>Raises:</p> Type Description <code>ckan.logic.ValidationError</code> <p>if the given string does not match any of the recognised formats</p> Source code in <code>ckanext/saeoss/email_notifications.py</code> <pre><code>def string_to_timedelta(s):\n    \"\"\"Parse a string s and return a standard datetime.timedelta object.\n\n    Handles days, hours, minutes, seconds, and microseconds.\n\n    Accepts strings in these formats:\n\n    2 days\n    14 days\n    4:35:00 (hours, minutes and seconds)\n    4:35:12.087465 (hours, minutes, seconds and microseconds)\n    7 days, 3:23:34\n    7 days, 3:23:34.087465\n    .087465 (microseconds only)\n\n    :raises ckan.logic.ValidationError: if the given string does not match any\n        of the recognised formats\n\n    \"\"\"\n    patterns = []\n    days_only_pattern = \"(?P&lt;days&gt;\\d+)\\s+day(s)?\"\n    patterns.append(days_only_pattern)\n    hms_only_pattern = \"(?P&lt;hours&gt;\\d?\\d):(?P&lt;minutes&gt;\\d\\d):(?P&lt;seconds&gt;\\d\\d)\"\n    patterns.append(hms_only_pattern)\n    ms_only_pattern = \".(?P&lt;milliseconds&gt;\\d\\d\\d)(?P&lt;microseconds&gt;\\d\\d\\d)\"\n    patterns.append(ms_only_pattern)\n    hms_and_ms_pattern = hms_only_pattern + ms_only_pattern\n    patterns.append(hms_and_ms_pattern)\n    days_and_hms_pattern = \"{0},\\s+{1}\".format(days_only_pattern, hms_only_pattern)\n    patterns.append(days_and_hms_pattern)\n    days_and_hms_and_ms_pattern = days_and_hms_pattern + ms_only_pattern\n    patterns.append(days_and_hms_and_ms_pattern)\n\n    for pattern in patterns:\n        match = re.match(\"^{0}$\".format(pattern), s)\n        if match:\n            break\n\n    if not match:\n        raise logic.ValidationError(\"Not a valid time: {0}\".format(s))\n\n    gd = match.groupdict()\n    days = int(gd.get(\"days\", \"0\"))\n    hours = int(gd.get(\"hours\", \"0\"))\n    minutes = int(gd.get(\"minutes\", \"0\"))\n    seconds = int(gd.get(\"seconds\", \"0\"))\n    milliseconds = int(gd.get(\"milliseconds\", \"0\"))\n    microseconds = int(gd.get(\"microseconds\", \"0\"))\n    delta = dt.timedelta(\n        days=days,\n        hours=hours,\n        minutes=minutes,\n        seconds=seconds,\n        milliseconds=milliseconds,\n        microseconds=microseconds,\n    )\n    return delta\n</code></pre>"},{"location":"developer/manual/get-releases/","title":"Get Releases","text":"<p>This is a code to get releases from Github. It can provide a clear and organised way for  users to access stable versions the software.</p> <p>Get project releases from Github API.</p>"},{"location":"developer/manual/helpers/","title":"Helpers","text":""},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.build_pages_nav_main","title":"build_pages_nav_main","text":"<pre><code>build_pages_nav_main(*args)\n</code></pre> <p>Reimplementation of ckanext-pages <code>build_pages_nav_main()</code></p> <p>This function reimplements the original ckanext-pages in order to overcome a bug whereby the groups menu is not removable because of a typo in its route name.</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def build_pages_nav_main(*args):\n    \"\"\"Reimplementation of ckanext-pages `build_pages_nav_main()`\n\n    This function reimplements the original ckanext-pages in order to overcome\n    a bug whereby the groups menu is not removable because of a typo in its route name.\n\n    \"\"\"\n\n    about_menu = toolkit.asbool(toolkit.config.get(\"ckanext.pages.about_menu\", True))\n    group_menu = toolkit.asbool(toolkit.config.get(\"ckanext.pages.group_menu\", True))\n    org_menu = toolkit.asbool(\n        toolkit.config.get(\"ckanext.pages.organization_menu\", True)\n    )\n\n    new_args = []\n    for arg in args:\n        if arg[0] == \"home.about\" and not about_menu:\n            continue\n        if arg[0] == \"organization.index\" and not org_menu:\n            continue\n        if arg[0] == \"group.index\" and not group_menu:\n            continue\n        new_args.append(arg)\n\n    output = core_build_nav_main(*new_args)\n\n    # do not display any private pages in menu even for sysadmins\n    pages_list = toolkit.get_action(\"ckanext_pages_list\")(\n        None, {\"order\": True, \"private\": False}\n    )\n\n    page_name = \"\"\n    is_current_page = toolkit.get_endpoint() in (\n        (\"pages\", \"show\"),\n        (\"pages\", \"blog_show\"),\n    )\n\n    if is_current_page:\n        page_name = toolkit.request.path.split(\"/\")[-1]\n\n    for page in pages_list:\n        if page.get(\"title\") == \"About\":\n            continue  # nsif staff decided they don't want about page.\n        type_ = \"blog\" if page[\"page_type\"] == \"blog\" else \"pages\"\n        name = quote(page[\"name\"])\n        title = html_escape(page[\"title\"])\n        link = toolkit.h.literal('&lt;a href=\"/{}/{}\"&gt;{}&lt;/a&gt;'.format(type_, name, title))\n        if page[\"name\"] == page_name:\n            li = (\n                    toolkit.literal('&lt;li class=\"active\"&gt;') + link + toolkit.literal(\"&lt;/li&gt;\")\n            )\n        else:\n            li = toolkit.literal(\"&lt;li&gt;\") + link + toolkit.literal(\"&lt;/li&gt;\")\n        output = output + li\n    return output\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_all_datasets_count","title":"get_all_datasets_count","text":"<pre><code>get_all_datasets_count(user_obj)\n</code></pre> <p>fixes a bug when applying solr active search</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_all_datasets_count(user_obj):\n    \"\"\"\n    fixes a bug when applying\n    solr active search\n\n    \"\"\"\n    # context = {\"user\":c.user, \"auth_user_obj\":c.userobj}\n    # return len(packages)\n    # 32000 rows is the maximum of what can be retrieved\n    # by ckan at once.\n    # the question becomes, do i want you to know the private datasets count ?\n    # q = \"\"\" select count(distinct(id)) from package where state='active' and type='dataset' \"\"\"\n    # result = model.Session.execute(q)\n    # return result.fetchone()[0]\n\n    # this doesn't work\n    # results = toolkit.get_action(\"package_list\")(context={\"auth_user_obj\": c.userobj}, data_dict={'include_private':True})\n\n    result = toolkit.get_action(\"package_search\")(\n        data_dict={\"q\": \"*:*\", \"include_private\": True}\n    )\n    return result[\"count\"]\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_current_release","title":"get_current_release","text":"<pre><code>get_current_release()\n</code></pre> <p>get releases to website footer, the release depends on the environment, if it's staging it uses v..-rc, rather if it's production v...</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_current_release():\n    \"\"\"get releases to website footer,\n    the release depends on the environment,\n    if it's staging it uses v*.*.*-rc, rather\n    if it's production v.*.*.*\n    \"\"\"\n    current_file_path = Path(__file__)\n    releases_file_path = current_file_path.parent.joinpath(\"releases.txt\")\n    with open(releases_file_path) as f:\n        releases = json.loads(f.read())\n        current_branch = _get_git_branch()\n        # this might change so main is release candidate\n        # and release branch is the latest release\n        if current_branch == \"development\":\n            return releases.get(\"latest_release_candidate\")\n        elif current_branch == \"main\":\n            return releases.get(\"latest_release\")\n        else:\n            return \"\"\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_datasets_thumbnail","title":"get_datasets_thumbnail","text":"<pre><code>get_datasets_thumbnail(data_dict)\n</code></pre> <p>Generate thumbnails based on metadataset</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_datasets_thumbnail(data_dict):\n    \"\"\"\n    Generate thumbnails based on metadataset\n    \"\"\"\n    print(\"DATA DICT\", data_dict)\n    data_thumbnail = \"/images/org.png\"\n    if data_dict.get(\"metadata_thumbnail\"):\n        data_thumbnail = data_dict.get(\"metadata_thumbnail\")\n    else:\n        if 'organization' not in data_dict or not data_dict['organization']:\n            return data_thumbnail\n        org_id = data_dict['organization'][\"id\"]\n        org_image_url = None\n        context = {\n            'model': model,\n            'session': model.Session,\n            'user': toolkit.c.user\n        }\n        if org_id:\n            try:\n                org = toolkit.get_action('organization_show')(context, {'id': org_id})\n                org_image_url = org.get('image_display_url')\n                return org_image_url\n            except Exception as e:\n                logger.warning(f\"Could not fetch organization {org_id}: {e}\")\n        image_url = data_dict['organization']['image_url']\n        if image_url and not image_url.startswith('http'):\n            #munge here should not have an effect only doing it incase\n            #of potential vulnerability of dodgy api input\n            image_url = munge.munge_filename_legacy(image_url)\n            data_thumbnail = h.url_for_static(\n            'uploads/group/%s' % data_dict['organization']['image_url'],\n            qualified=True\n            )\n    return data_thumbnail\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_default_bounding_box","title":"get_default_bounding_box","text":"<pre><code>get_default_bounding_box()\n</code></pre> <p>Return the default bounding box in the form upper left, lower right</p> <p>This function calculates the default bounding box from the <code>ckan.saeoss.default_spatial_search_extent</code> configuration value. Note that this configuration value is expected to be in GeoJSON format and in GeoJSON, coordinate pairs take the form <code>lon, lat</code>.</p> <p>This function outputs a list with upper left latitude, upper left latitude, lower right latitude, lower right longitude.</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_default_bounding_box() -&gt; typing.Optional[typing.List[float]]:\n    \"\"\"Return the default bounding box in the form upper left, lower right\n\n    This function calculates the default bounding box from the\n    `ckan.saeoss.default_spatial_search_extent` configuration value. Note that\n    this configuration value is expected to be in GeoJSON format and in GeoJSON,\n    coordinate pairs take the form `lon, lat`.\n\n    This function outputs a list with upper left latitude, upper left latitude, lower\n    right latitude, lower right longitude.\n\n    \"\"\"\n\n    configured_extent = toolkit.config.get(\n        \"ckan.saeoss.default_spatial_search_extent\"\n    )\n    parsed_extent = json.loads(configured_extent)\n    return convert_geojson_to_bbox(parsed_extent)\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_default_spatial_search_extent","title":"get_default_spatial_search_extent","text":"<pre><code>get_default_spatial_search_extent(padding_degrees=None)\n</code></pre> <p>Return GeoJSON polygon with bbox to use for default view of spatial search map widget.</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_default_spatial_search_extent(\n        padding_degrees: typing.Optional[float] = None,\n) -&gt; typing.Dict:\n    \"\"\"\n    Return GeoJSON polygon with bbox to use for default view of spatial search map widget.\n    \"\"\"\n    configured_extent = toolkit.config.get(\n        \"ckan.saeoss.default_spatial_search_extent\"\n    )\n    if padding_degrees and configured_extent:\n        parsed_extent = json.loads(configured_extent)\n        result = _pad_geospatial_extent(parsed_extent, padding_degrees)\n    else:\n        result = configured_extent\n    return result\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_featured_datasets_count","title":"get_featured_datasets_count","text":"<pre><code>get_featured_datasets_count()\n</code></pre> <p>used with facets count</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_featured_datasets_count():\n    \"\"\"\n    used with facets count\n    \"\"\"\n    search_action = toolkit.get_action(\"package_search\")\n    result = search_action(data_dict={\"q\": \"featured:true\", \"include_private\": True})\n    return result[\"count\"]\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_maintenance_custom_other_field_data","title":"get_maintenance_custom_other_field_data","text":"<pre><code>get_maintenance_custom_other_field_data(data_dict)\n</code></pre> <p>The custom field \"maintenance\" stores other options in an __extra structure in the database, in package_extra table, this structure doesn't show up with regular ckan actions like package_show, package_search ..etc., we need to grab it from the database, if other alternatives can be used (e.g. when using the pkg coming with /package/read.html, the whole data shows up) it would be preferable</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_maintenance_custom_other_field_data(data_dict):\n    \"\"\"The custom field \"maintenance\" stores **other**\n    options in an __extra structure in the database,\n    in package_extra table, this structure\n    doesn't show up with regular ckan actions like\n    **package_show**, **package_search** ..etc., we need\n    to grab it from the database, if other alternatives\n    can be used (e.g. when using the pkg coming with\n    /package/read.html, the whole data shows up)\n    it would be preferable\n    \"\"\"\n    dataset_id = data_dict.get(\"id\")\n    # will be none if we are creating new package\n    if dataset_id is not None:\n        q = f\"\"\" select value from package_extra where package_id='{data_dict[\"id\"]}' AND key = 'maintenance_information'  \"\"\"\n        result = model.Session.execute(q)\n        for row in result.fetchall():\n            load_row = json.loads(dict(row)[\"value\"])\n            try:\n                return load_row[0][\"__extras\"][\"custom_other_choice_select\"]\n            except:\n                pass\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_org_memberships","title":"get_org_memberships","text":"<pre><code>get_org_memberships(user_id)\n</code></pre> <p>Return a list of organizations and roles where the input user is a member</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_org_memberships(user_id: str):\n    \"\"\"Return a list of organizations and roles where the input user is a member\"\"\"\n    query = (\n        model.Session.query(model.Group, model.Member.capacity)\n        .join(model.Member, model.Member.group_id == model.Group.id)\n        .join(model.User, model.User.id == model.Member.table_id)\n        .filter(\n            model.User.id == user_id,\n            model.Member.state == \"active\",\n            model.Group.is_organization == True,\n        )\n        .order_by(model.Group.name)\n    )\n    return query.all()\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_org_public_records_count","title":"get_org_public_records_count","text":"<pre><code>get_org_public_records_count(org_id)\n</code></pre> <p>the default behavior is showing fixed number of recoreds for orgs if the user is not a part of them in org list page, we are adjusting</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_org_public_records_count(org_id: str) -&gt; int:\n    \"\"\"\n    the default behavior is showing fixed\n    number of recoreds for orgs if the\n    user is not a part of them in org\n    list page, we are adjusting\n    \"\"\"\n    query = model.Session.query(model.Package).filter(\n        model.Package.owner_org == org_id,\n        model.Package.private == \"f\",\n        model.Package.state == \"active\",\n        model.Package.type == \"dataset\",\n    )\n    count = len(query.all())\n    return count\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_recent_news","title":"get_recent_news","text":"<pre><code>get_recent_news(number=5, exclude=None)\n</code></pre> <p>Get the five recent news.</p> <p>Parameters:</p> Name Type Description Default <code>number</code> <code>int</code> <p>Number of new want to get</p> <code>5</code> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_recent_news(number=5, exclude=None):\n    \"\"\"Get the five recent news.\n\n    :param\n    number: Number of new want to get\n    :type\n    number: int\n    \"\"\"\n    news_list = toolkit.get_action(\"ckanext_pages_list\")(\n        None, {\"order_publish_date\": True, \"private\": False, \"page_type\": \"news\"}\n    )\n    new_list = []\n    for news in news_list:\n        if exclude and news[\"name\"] == exclude:\n            continue\n        new_list.append(news)\n        if len(new_list) == number:\n            break\n\n    return new_list\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_saved_searches","title":"get_saved_searches","text":"<pre><code>get_saved_searches()\n</code></pre> <p>Returns saved searches</p> <p>based on a user id.</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_saved_searches():\n    \"\"\"Returns saved searches\n\n    based on a user id.\n    \"\"\"\n    if c.userobj is None:\n        return []\n\n    user_id = c.userobj.id\n    if c.userobj.sysadmin:\n        q = f\"\"\" select saved_search_title, search_query, saved_search_date, saved_search_id, owner_user from saved_searches order by owner_user \"\"\"\n    else:\n        q = f\"\"\" select saved_search_title, search_query, saved_search_date, saved_search_id from saved_searches where owner_user='{user_id}' order by saved_search_date desc \"\"\"\n    rows = model.Session.execute(q)\n    saved_searches_list = []\n    for row in rows:\n        saved_searches_list.append(row)\n    # saved_searches_list = SavedSearches.get(SavedSearches,owner_user=user_id)\n    return saved_searches_list\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_seo_metatags","title":"get_seo_metatags","text":"<pre><code>get_seo_metatags(site_key)\n</code></pre> <p>Get metatags value for SEO.</p> <p>Parameters:</p> Name Type Description Default <code>site_key</code> <code>str</code> <p>Site's key</p> required Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_seo_metatags(site_key):\n    \"\"\"Get metatags value for SEO.\n\n    :param\n    site_key: Site's key\n    :type\n    site_key: str\n    \"\"\"\n    data_dict = {\n        \"site_author\": toolkit.config.get(\n            \"ckan.site_author\",\n        ),\n        \"site_description\": toolkit.config.get(\n            \"ckan.site_description\",\n        ),\n        \"site_keywords\": toolkit.config.get(\n            \"ckan.site_keywords\",\n        ),\n    }\n    return data_dict[site_key]\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_user_dashboard_packages","title":"get_user_dashboard_packages","text":"<pre><code>get_user_dashboard_packages(user_id)\n</code></pre> <p>The current behavior displays all the available datasets to the user, we need only the datasets created by the user.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>int</code> <p>User's id</p> required Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_user_dashboard_packages(user_id):\n    \"\"\"The current behavior displays\n    all the available datasets to the\n    user, we need only the datasets\n    created by the user.\n\n    :param\n    user_id: User's id\n    :type\n    user_id: int\n    \"\"\"\n    # q = f\"\"\" select package.*, key, value from package join package_extra on package_id=package.id where\n    # package.creator_user_id='{user_id}' \"\"\" rows = model.Session.execute(q) packages = [] for row in rows:\n    # packages.append(dict(row)) return packages\n    query = model.Session.query(model.Package).filter(\n        model.Package.creator_user_id == user_id\n    )\n    packages = [\n        package_dictize(package, context={\"user\": user_id, \"model\": model})\n        for package in query.all()\n    ]\n    return packages\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_user_id","title":"get_user_id","text":"<pre><code>get_user_id(user_name)\n</code></pre> <p>Gets user id from its username (the username is also unique)</p> <p>Parameters:</p> Name Type Description Default <code>user_name</code> <code>str</code> <p>User's username</p> required Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_user_id(user_name: str):\n    \"\"\"Gets user id from its username (the username is also unique)\n\n    :param\n    user_name: User's username\n    :type\n    user_name:str\n    \"\"\"\n    user_obj = model.Session.query(model.User).filter_by(name=user_name).first()\n    return user_obj.id\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_user_name","title":"get_user_name","text":"<pre><code>get_user_name(user_id)\n</code></pre> <p>Get a user's username by its id</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>int</code> <p>User's id</p> required Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_user_name(user_id):\n    \"\"\"Get a user's username by its id\n\n    :param\n    user_id: User's id\n    :type\n    user_id:int\n    \"\"\"\n    user_obj = model.Session.query(model.User).filter_by(id=user_id).first()\n    return user_obj.name\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_user_name_from_url","title":"get_user_name_from_url","text":"<pre><code>get_user_name_from_url(url)\n</code></pre> <p>Get user's name from url</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The url</p> required Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_user_name_from_url(url: str):\n    \"\"\"Get user's name from url\n\n    :param\n    url: The url\n    :type\n    url:str\n    \"\"\"\n\n    return url.split(\"/user/\")[1]\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_year","title":"get_year","text":"<pre><code>get_year()\n</code></pre> <p>Display current year in the footer.</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_year():\n    \"\"\"Display current year in the footer.\n\n    \"\"\"\n    return datetime.datetime.now().year\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.mod_scheming_flatten_subfield","title":"mod_scheming_flatten_subfield","text":"<pre><code>mod_scheming_flatten_subfield(subfield, data)\n</code></pre> <p>this is specifically for testing site and might not be useful after a while, we are mimicking and modifying https://github.com/ckan/ckanext-scheming/blob/master/ckanext/scheming/helpers.py#L414 to avoid few errors</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def mod_scheming_flatten_subfield(subfield, data):\n    \"\"\"\n    this is specifically for testing site\n    and might not be useful after a while,\n    we are mimicking and modifying\n    https://github.com/ckan/ckanext-scheming/blob/master/ckanext/scheming/helpers.py#L414\n    to avoid few errors\n    \"\"\"\n    flat = dict(data)\n\n    if subfield[\"field_name\"] not in data:\n        return flat\n\n    for i, record in enumerate(data[subfield[\"field_name\"]]):\n        prefix = \"{field_name}-{index}-\".format(\n            field_name=subfield[\"field_name\"],\n            index=i,\n        )\n        for k in record:\n            \"\"\"\n            this is where the modification happens,\n            records can be just an empty string,\n            accessing it as a dict would cause a\n            type error\n            \"\"\"\n            if type(flat) is dict and type(record) is dict:\n                flat[prefix + k] = record[k]\n    return flat\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.org_member_list","title":"org_member_list","text":"<pre><code>org_member_list(org_id, role=None)\n</code></pre> <p>Return list of organization members with the specified role</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def org_member_list(org_id: str, role: typing.Optional[str] = None) -&gt; typing.List:\n    \"\"\"Return list of organization members with the specified role\"\"\"\n    member_list_action = toolkit.get_action(\"member_list\")\n    org_members = member_list_action(data_dict={\"id\": org_id, \"object_type\": \"user\"})\n\n    results = []\n    for member_id, _, member_role in org_members:\n        if role is None or member_role.lower() == role.lower():\n            results.append(member_id)\n\n    return results\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.user_is_org_member","title":"user_is_org_member","text":"<pre><code>user_is_org_member(org_id, user=None, role=None)\n</code></pre> <p>Check if user has editor role in the input organization.</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def user_is_org_member(\n        org_id: str, user=None, role: typing.Optional[str] = None\n) -&gt; bool:\n    \"\"\"Check if user has editor role in the input organization.\"\"\"\n    result = False\n    if user is not None:\n        member_list_action = toolkit.get_action(\"member_list\")\n        try:\n            org_members = member_list_action(\n                data_dict={\"id\": org_id, \"object_type\": \"user\"}\n            )\n        except:\n            return result\n        for member_id, _, member_role in org_members:\n            if user.id == member_id:\n                if role is None or member_role.lower() == role.lower():\n                    result = True\n                break\n    return result\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.user_is_staff_member","title":"user_is_staff_member","text":"<pre><code>user_is_staff_member(user_id)\n</code></pre> <p>Check if user is a member of the staff org</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def user_is_staff_member(user_id: str) -&gt; bool:\n    \"\"\"Check if user is a member of the staff org\"\"\"\n    memberships_action = toolkit.get_action(\"organization_list_for_user\")\n    memberships = memberships_action(context={\"user\": user_id}, data_dict={})\n    portal_staff = toolkit.config.get(\n        \"ckan.saeoss.portal_staff_organization_name\", \"saeoss staff\"\n    )\n    for group in memberships:\n        is_org = group.get(\"type\", \"organization\") == \"organization\"\n        is_portal_staff = group.get(\"title\").lower() == portal_staff.lower()\n        if is_org and is_portal_staff:\n            result = True\n            break\n    else:\n        result = False\n    return result\n</code></pre>"},{"location":"developer/manual/jobs/","title":"Jobs","text":"<p>This a background task or process that is executed asynchronously. Jobs in CKAN extensions are often  used to perform time-consuming or resource-intensive operations without blocking the main application or user interface.</p> <p>Asynchronous jobs for SAEOSS portal.</p>"},{"location":"developer/manual/jobs/#ckanext.saeoss.jobs.notify_org_admins_of_dataset_management_request","title":"notify_org_admins_of_dataset_management_request","text":"<pre><code>notify_org_admins_of_dataset_management_request(activity_id)\n</code></pre> <p>Send a request of management to an organisation admin</p> <p>Parameters:</p> Name Type Description Default <code>activity_id</code> <code>str</code> <p>The activity to request</p> required Source code in <code>ckanext/saeoss/jobs.py</code> <pre><code>def notify_org_admins_of_dataset_management_request(activity_id: str):\n    \"\"\"Send a request of management to an organisation admin\n\n    :param\n    activity_id: The activity to request\n    :type\n    activity_id: str\n    \"\"\"\n    activity_obj = model.Activity.get(activity_id)\n    if activity_obj is not None:\n        activity_type = DatasetManagementActivityType(activity_obj.activity_type)\n        dataset = (activity_obj.data or {}).get(\"package\")\n        templates_map = {\n            DatasetManagementActivityType.REQUEST_PUBLICATION: (),\n            DatasetManagementActivityType.REQUEST_MAINTENANCE: (\n                \"email_notifications/dataset_maintenance_request_subject.txt\",\n                \"email_notifications/dataset_maintenance_request_body.txt\",\n            ),\n        }\n        if dataset is not None:\n            org_id = dataset[\"owner_org\"]\n            organization = toolkit.get_action(\"organization_show\")(\n                context={\"ignore_auth\": True},\n                data_dict={\n                    \"id\": org_id,\n                    \"include_users\": True,\n                },\n            )\n            jinja_env = email_notifications.get_jinja_env()\n            subject_path, body_path = templates_map[activity_type]\n            subject_template = jinja_env.get_template(subject_path)\n            body_template = jinja_env.get_template(body_path)\n            for member in organization.get(\"users\", []):\n                is_active = member.get(\"state\") == \"active\"\n                is_org_admin = member.get(\"capacity\") == \"admin\"\n                if is_active and is_org_admin:\n                    user_obj = model.User.get(member[\"id\"])\n                    logger.debug(\n                        f\"About to send a notification to {user_obj.name!r}...\"\n                    )\n                    subject = subject_template.render(\n                        site_title=toolkit.config.get(\"ckan.site_title\", \"SASDI EMC\")\n                    )\n                    body = body_template.render(\n                        organization=organization,\n                        user_obj=user_obj,\n                        dataset=dataset,\n                        h=toolkit.h,\n                        site_url=toolkit.config.get(\"ckan.site_url\", \"\"),\n                    )\n                    email_notifications.send_notification(\n                        {\n                            \"name\": user_obj.name,\n                            \"display_name\": user_obj.display_name,\n                            \"email\": user_obj.email,\n                        },\n                        {\"subject\": subject, \"body\": body},\n                    )\n    else:\n        raise RuntimeError(f\"Could not retrieve activity with id {activity_id!r}\")\n</code></pre>"},{"location":"developer/manual/logic/","title":"Logic","text":""},{"location":"developer/manual/logic/#action","title":"Action","text":"<p>ckan scheming gives repeating subfields the naming of fieldname-0*-subfieldname the number * can change accoring to the number of repeating subfields, this schema may affect how the field is going to be referenced from other services related to EMC, we are changing this naming here.</p>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.add_named_url.populate_dataset_name","title":"populate_dataset_name","text":"<pre><code>populate_dataset_name(data_dict, context, calls=0)\n</code></pre> <p>Adding uuid to the named url , the name field was a bit confusing to the client.</p> Source code in <code>ckanext/saeoss/logic/action/add_named_url.py</code> <pre><code>def populate_dataset_name(data_dict: dict, context: dict, calls:int = 0):\n    \"\"\"Adding uuid to the named url\n    , the name field was a bit\n    confusing to the client.\n    \"\"\"\n    title = data_dict.get(\"title\")\n    if data_dict.get('name'):\n        name = _remove_special_characters_from_package_url(data_dict.get('name'))\n    else:\n        name = _remove_special_characters_from_package_url(title)\n\n    validation_dict = {\"name\":name}\n    schema = {\"name\": [tk.get_validator(\"package_name_exists\")]}\n    data,error = tk.navl_validate(validation_dict,schema, context)\n    if error:\n        return name\n\n    calls += 1\n    if re.search(r'-\\d$',name):\n        name = re.sub(r'-\\d$', '', name)\n        name = name+'-'+str(calls)\n    else:\n        name = name+'-'+str(calls)\n    data_dict['name'] = name\n    return populate_dataset_name(data_dict, context, calls)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan.package_patch","title":"package_patch","text":"<pre><code>package_patch(original_action, context, data_dict)\n</code></pre> <p>Intercepts the core <code>package_patch</code> action to check if package is being published.</p> Source code in <code>ckanext/saeoss/logic/action/ckan.py</code> <pre><code>@toolkit.chained_action\ndef package_patch(original_action, context, data_dict):\n    \"\"\"\n    Intercepts the core `package_patch` action to check if package is being published.\n    \"\"\"\n    _ensure_resource_formats(data_dict)\n    return _act_depending_on_package_visibility(original_action, context, data_dict)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan.package_show","title":"package_show","text":"<pre><code>package_show(original_action, context, data_dict)\n</code></pre> <p>Intercepts the core <code>package_show</code> action to add reference_date to package dict</p> Source code in <code>ckanext/saeoss/logic/action/ckan.py</code> <pre><code>@toolkit.chained_action\ndef package_show(original_action, context, data_dict):\n    \"\"\"\n    Intercepts the core `package_show` action to add reference_date to package dict\n    \"\"\"\n    package_dict = _package_show(context, data_dict)\n    package_dict['reference_date'] = _get_reference_date(package_dict)\n    return package_dict\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan.package_update","title":"package_update","text":"<pre><code>package_update(original_action, context, data_dict)\n</code></pre> <p>Intercepts the core <code>package_update</code> action to check if package is being published.</p> Source code in <code>ckanext/saeoss/logic/action/ckan.py</code> <pre><code>@toolkit.chained_action\ndef package_update(original_action, context, data_dict):\n    \"\"\"\n    Intercepts the core `package_update` action to check if package is being published.\n    \"\"\"\n    tag_controlled = data_dict.get(\"tag_controlled_string\")\n\n    if isinstance(tag_controlled, str):\n        tag_controlled = [tag_controlled]\n\n    if tag_controlled:\n        cleaned_tags = [sanitize_tag(tag.strip()) for tag in tag_controlled if tag.strip()]\n        data_dict[\"tags\"] = [{\"name\": tag} for tag in cleaned_tags]\n\n    try:\n        data_dict['tags'] = _get_tags(data_dict)\n    except KeyError:\n        data_dict['tags'] = []\n\n    data_dict['tag_string'] = ','.join([tag['name'] for tag in data_dict['tags']])\n\n    _ensure_resource_formats(data_dict)\n    return _act_depending_on_package_visibility(original_action, context, data_dict)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan.user_create","title":"user_create","text":"<pre><code>user_create(original_action, context, data_dict)\n</code></pre> <p>Intercepts the core <code>user_create</code> action to also create the extra_fields.</p> Source code in <code>ckanext/saeoss/logic/action/ckan.py</code> <pre><code>@toolkit.chained_action\ndef user_create(original_action, context, data_dict):\n    \"\"\"Intercepts the core `user_create` action to also create the extra_fields.\"\"\"\n    original_result = original_action(context, data_dict)\n    user_id = original_result[\"id\"]\n    model = context[\"model\"]\n    extra = UserExtraFields(\n        user_id=user_id,\n        affiliation=data_dict.get(\"extra_fields\") or \"\",\n        professional_occupation=data_dict.get(\"extra_fields\") or \"\",\n    )\n    model.Session.add(extra)\n    model.Session.commit()\n    original_result[\"extra_fields\"] = _dictize_user_extra_fields(extra)\n    return original_result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan.user_patch","title":"user_patch","text":"<pre><code>user_patch(context, data_dict)\n</code></pre> <p>Implements user_patch action, which is not available on CKAN</p> <p>The <code>data_dict</code> parameter is expected to contain at least the <code>id</code> key, which should hold the user's id or name</p> Source code in <code>ckanext/saeoss/logic/action/ckan.py</code> <pre><code>def user_patch(context: typing.Dict, data_dict: typing.Dict) -&gt; typing.Dict:\n    \"\"\"Implements user_patch action, which is not available on CKAN\n\n    The `data_dict` parameter is expected to contain at least the `id` key, which\n    should hold the user's id or name\n\n    \"\"\"\n\n    logger.debug(\"About to check access of user_update\")\n    toolkit.check_access(\"user_update\", context, data_dict)\n    show_context = {\n        \"model\": context[\"model\"],\n        \"session\": context[\"session\"],\n        \"user\": context[\"user\"],\n        \"auth_user_obj\": context[\"auth_user_obj\"],\n    }\n    user_dict = toolkit.get_action(\"user_show\")(\n        show_context, data_dict={\"id\": context[\"user\"]}\n    )\n    patched = dict(user_dict)\n    patched.update(data_dict)\n    update_action = toolkit.get_action(\"user_update\")\n    return update_action(context, patched)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan.user_show","title":"user_show","text":"<pre><code>user_show(original_action, context, data_dict)\n</code></pre> <p>Intercepts the core <code>user_show</code> action to add any extra_fields that may exist for the user</p> Source code in <code>ckanext/saeoss/logic/action/ckan.py</code> <pre><code>@toolkit.chained_action\ndef user_show(original_action, context, data_dict):\n    \"\"\"\n    Intercepts the core `user_show` action to add any extra_fields that may exist for\n    the user\n    \"\"\"\n\n    original_result = original_action(context, data_dict)\n    user_id = original_result.get(\"id\")\n    model = context[\"model\"]\n    user_obj = model.Session.query(model.User).filter_by(id=user_id).first()\n    if user_obj.extra_fields is not None:\n        original_result[\"extra_fields\"] = _dictize_user_extra_fields(\n            user_obj.extra_fields\n        )\n    else:\n        original_result[\"extra_fields\"] = None\n    return original_result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan.user_update","title":"user_update","text":"<pre><code>user_update(original_action, context, data_dict)\n</code></pre> <p>Intercepts the core <code>user_update</code> action to update any extra_fields that may exist for the user. Also checks if the user is updating their image before validating MIME type.</p> Source code in <code>ckanext/saeoss/logic/action/ckan.py</code> <pre><code>@toolkit.chained_action\ndef user_update(original_action, context, data_dict):\n    \"\"\"\n    Intercepts the core `user_update` action to update any extra_fields that may exist\n    for the user. Also checks if the user is updating their image before validating MIME type.\n    \"\"\"\n    original_result = original_action(context, data_dict)\n\n    # Check if image_url is being updated\n    if \"image_url\" in data_dict and data_dict[\"image_url\"]:\n        mime = MimeTypes()\n        mime_type = mime.guess_type(data_dict[\"image_url\"])\n\n        if mime_type[0] in mimeNotAllowed:\n            raise ValidationError([f\"Mimetype {mime_type[0]} is not allowed!\"])\n\n    user_id = original_result[\"id\"]\n    model = context[\"model\"]\n    user_obj = model.Session.query(model.User).filter_by(id=user_id).first()\n\n    if user_obj.extra_fields is None:\n        extra = UserExtraFields(user_id=user_id)\n    else:\n        extra = user_obj.extra_fields\n\n    extra.affiliation = data_dict.get(\"extra_fields_affiliation\")\n    extra.professional_occupation = data_dict.get(\"extra_fields_professional_occupation\")\n\n    model.Session.add(extra)\n    model.Session.commit()\n\n    original_result[\"extra_fields\"] = _dictize_user_extra_fields(extra)\n    return original_result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan_custom_actions.organization_create","title":"organization_create","text":"<pre><code>organization_create(original_action, context, data_dict)\n</code></pre> <p>Create a new organization.</p> <p>You must be authorized to create organizations.</p> <p>Plugins may change the parameters of this function depending on the value of the <code>type</code> parameter, see the class:<code>~ckan.plugins.interfaces.IGroupForm</code> plugin interface.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>string</code> <p>the name of the organization, a string between 2 and 100 characters long, containing only lowercase alphanumeric characters, <code>-</code> and <code>_</code></p> required <code>id</code> <code>string</code> <p>the id of the organization (optional)</p> required <code>title</code> <code>string</code> <p>the title of the organization (optional)</p> required <code>description</code> <code>string</code> <p>the description of the organization (optional)</p> required <code>image_url</code> <code>string</code> <p>the URL to an image to be displayed on the organization's page (optional)</p> required <code>state</code> <code>string</code> <p>the current state of the organization, e.g. <code>'active'</code> or <code>'deleted'</code>, only active organizations show up in search results and other lists of organizations, this parameter will be ignored if you are not authorized to change the state of the organization (optional, default: <code>'active'</code>)</p> required <code>approval_status</code> <code>string</code> <p>(optional)</p> required <code>extras</code> <code>list of dataset extra dictionaries</code> <p>the organization's extras (optional), extras are arbitrary (key: value) metadata items that can be added to organizations, each extra dictionary should have keys <code>'key'</code> (a string), <code>'value'</code> (a string), and optionally <code>'deleted'</code></p> required <code>packages</code> <code>list of dictionaries</code> <p>the datasets (packages) that belong to the organization, a list of dictionaries each with keys <code>'name'</code> (string, the id or name of the dataset) and optionally <code>'title'</code> (string, the title of the dataset)</p> required <code>users</code> <code>list of dictionaries</code> <p>the users that belong to the organization, a list of dictionaries each with key <code>'name'</code> (string, the id or name of the user) and optionally <code>'capacity'</code> (string, the capacity in which the user is a member of the organization)</p> required <p>Returns:</p> Type Description <code>dictionary</code> <p>the newly created organization (unless 'return_id_only' is set to True in the context, in which case just the organization id will be returned)</p> Source code in <code>ckanext/saeoss/logic/action/ckan_custom_actions.py</code> <pre><code>@toolkit.chained_action\ndef organization_create(original_action, context: dict, data_dict: dict):\n    '''Create a new organization.\n\n    You must be authorized to create organizations.\n\n    Plugins may change the parameters of this function depending on the value\n    of the ``type`` parameter, see the\n    :py:class:`~ckan.plugins.interfaces.IGroupForm` plugin interface.\n\n    :param name: the name of the organization, a string between 2 and\n        100 characters long, containing only lowercase alphanumeric\n        characters, ``-`` and ``_``\n    :type name: string\n    :param id: the id of the organization (optional)\n    :type id: string\n    :param title: the title of the organization (optional)\n    :type title: string\n    :param description: the description of the organization (optional)\n    :type description: string\n    :param image_url: the URL to an image to be displayed on the\n        organization's page (optional)\n    :type image_url: string\n    :param state: the current state of the organization, e.g. ``'active'`` or\n        ``'deleted'``, only active organizations show up in search results and\n        other lists of organizations, this parameter will be ignored if you\n        are not authorized to change the state of the organization\n        (optional, default: ``'active'``)\n    :type state: string\n    :param approval_status: (optional)\n    :type approval_status: string\n    :param extras: the organization's extras (optional), extras are arbitrary\n        (key: value) metadata items that can be added to organizations,\n        each extra\n        dictionary should have keys ``'key'`` (a string), ``'value'`` (a\n        string), and optionally ``'deleted'``\n    :type extras: list of dataset extra dictionaries\n    :param packages: the datasets (packages) that belong to the organization,\n        a list of dictionaries each with keys ``'name'`` (string, the id\n        or name of the dataset) and optionally ``'title'`` (string, the\n        title of the dataset)\n    :type packages: list of dictionaries\n    :param users: the users that belong to the organization, a list\n        of dictionaries each with key ``'name'`` (string, the id or name\n        of the user) and optionally ``'capacity'`` (string, the capacity\n        in which the user is a member of the organization)\n    :type users: list of dictionaries\n\n    :returns: the newly created organization (unless 'return_id_only' is set\n              to True in the context, in which case just the organization id\n              will be returned)\n    :rtype: dictionary\n\n    '''\n    # wrapper for creating organizations\n    context['ignore_auth'] = True\n    data_dict.setdefault('type', 'organization')\n    return original_action(context, data_dict)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan_custom_actions.resource_update","title":"resource_update","text":"<pre><code>resource_update(original_action, context, data_dict)\n</code></pre> <p>Update a resource.</p> <p>To update a resource you must be authorized to update the dataset that the resource belongs to.</p> <p>.. note:: Update methods may delete parameters not explicitly provided in the     data_dict. If you want to edit only a specific attribute use <code>resource_patch</code>     instead.</p> <p>For further parameters see func:<code>~ckan.logic.action.create.resource_create</code>.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>string</code> <p>the id of the resource to update</p> required <p>Returns:</p> Type Description <code>string</code> <p>the updated resource</p> Source code in <code>ckanext/saeoss/logic/action/ckan_custom_actions.py</code> <pre><code>@toolkit.chained_action\ndef resource_update(original_action, context: dict, data_dict: dict):\n    '''Update a resource.\n\n    To update a resource you must be authorized to update the dataset that the\n    resource belongs to.\n\n    .. note:: Update methods may delete parameters not explicitly provided in the\n        data_dict. If you want to edit only a specific attribute use `resource_patch`\n        instead.\n\n    For further parameters see\n    :py:func:`~ckan.logic.action.create.resource_create`.\n\n    :param id: the id of the resource to update\n    :type id: string\n\n    :returns: the updated resource\n    :rtype: string\n\n    '''\n\n    model = context['model']\n    id = _get_or_bust(data_dict, \"id\")\n\n    if not data_dict.get('url'):\n        data_dict['url'] = ''\n\n    # if \"http\" not in data_dict[\"url\"] and \"https\" not in data_dict[\"url\"]:\n    #\n    #     if data_dict[\"updated_text\"]:\n    #         first_folder = id[0:3]\n    #         second_folder = id[3:6]\n    #         file_name = id[6:len(id)]\n    #\n    #         upload = f\"/home/appuser/data/resources/{first_folder}/{second_folder}/{file_name}\"\n    #\n    #         logger.debug(f\"resource update custom {data_dict}\")\n    #         f = open(upload, \"w\")\n    #         f.write(data_dict[\"updated_text\"])\n    #         f.close()\n    #\n    #         del data_dict[\"updated_text\"]\n\n    resource = model.Resource.get(id)\n    context[\"resource\"] = resource\n    old_resource_format = resource.format\n\n    if not resource:\n        raise NotFound(_('Resource was not found.'))\n\n    _check_access('resource_update', context, data_dict)\n    del context[\"resource\"]\n\n    package_id = resource.package.id\n    pkg_dict = _get_action('package_show')(dict(context, return_type='dict'),\n                                           {'id': package_id})\n\n    for n, p in enumerate(pkg_dict['resources']):\n        if p['id'] == id:\n            break\n    else:\n        logger.error('Could not find resource %s after all', id)\n        raise NotFound(_('Resource was not found.'))\n\n    # Persist the datastore_active extra if already present and not provided\n    if ('datastore_active' in resource.extras and\n            'datastore_active' not in data_dict):\n        data_dict['datastore_active'] = resource.extras['datastore_active']\n\n    for plugin in plugins.PluginImplementations(plugins.IResourceController):\n        plugin.before_update(context, pkg_dict['resources'][n], data_dict)\n\n    pkg_dict['resources'][n] = data_dict\n\n    try:\n        context['use_cache'] = False\n        updated_pkg_dict = _get_action('package_update')(context, pkg_dict)\n    except ValidationError as e:\n        try:\n            raise ValidationError(e.error_dict['resources'][n])\n        except (KeyError, IndexError):\n            raise ValidationError(e.error_dict)\n\n    resource = _get_action('resource_show')(context, {'id': id})\n\n    if old_resource_format != resource['format']:\n        _get_action('resource_create_default_resource_views')(\n            {'model': context['model'], 'user': context['user'],\n             'ignore_auth': True},\n            {'package': updated_pkg_dict,\n             'resource': resource})\n\n    for plugin in plugins.PluginImplementations(plugins.IResourceController):\n        plugin.after_update(context, resource)\n\n    return resource\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.dataset_versioning_control.handle_versioning","title":"handle_versioning","text":"<pre><code>handle_versioning(context, data_dict)\n</code></pre> <p>According to whether the dataset status is completed or not, the update action should either create a new version or overwrite the existing dataset.</p> Source code in <code>ckanext/saeoss/logic/action/dataset_versioning_control.py</code> <pre><code>def handle_versioning(context, data_dict):\n    \"\"\"According to whether the dataset\n    status is completed or not, the\n    update action should either create\n    a new version or overwrite the\n    existing dataset.\n    \"\"\"\n    # handling the version number\n    old_dataset = toolkit.get_action(\"package_show\")(data_dict={\"id\": data_dict[\"id\"]})\n    shared_items = {\n        k: data_dict[k]\n        for k in data_dict\n        if k in old_dataset and data_dict[k] == old_dataset[k]\n    }\n    # if it's changed from draft to active\n    non_shared = []\n    for k in data_dict:\n        if k not in shared_items.keys():\n            non_shared.append(k)\n            if k == \"state\":\n                if old_dataset[k] == \"draft\":\n                    return data_dict\n            if k == \"resources\":\n                return data_dict\n    resources = _get_package_resource(context, data_dict)\n    new_version = data_dict.get(\"version\")\n    url = data_dict.get(\"name\")\n    new_version = numbering_version(url, context, data_dict)\n    # create new dataset if the status is completed\n    if old_dataset.get(\"status\") == \"completed\":\n        generated_id = \"\".join(\n            random.SystemRandom().choice(string.ascii_uppercase + string.digits)\n            for _ in range(6)\n        )\n        update_dataset_title_and_url(new_version, generated_id, data_dict)\n        context[\"ignore_auth\"] = True\n        data_dict[\"resources\"] = resources\n        result = toolkit.get_action(\"package_create\")(context, data_dict)\n        flash_success(\"new version is created, updating the existing one !\")\n        return result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.dataset_versioning_control.numbering_version","title":"numbering_version","text":"<pre><code>numbering_version(url, context, data_dict)\n</code></pre> <p>Handle the numbering logic of the new version, incrementing the last one by one</p> Source code in <code>ckanext/saeoss/logic/action/dataset_versioning_control.py</code> <pre><code>def numbering_version(url, context, data_dict):\n    \"\"\"\n    Handle the numbering\n    logic of the new\n    version, incrementing\n    the last one by one\n    \"\"\"\n    previous_version = _get_previous_versions(url, context, data_dict)\n    if previous_version == 0:\n        version_number = \"2\"\n    else:\n        version_number = previous_version + 1\n\n    return str(version_number)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.dataset_versioning_control.search_and_update","title":"search_and_update","text":"<pre><code>search_and_update(title_or_url, new_version)\n</code></pre> <p>Uses regex to find version (num) at the end of string and substitute it, either in the title and/or url, the title has a dot in it's struct and the name (url) has a dash</p> Source code in <code>ckanext/saeoss/logic/action/dataset_versioning_control.py</code> <pre><code>def search_and_update(title_or_url, new_version):\n    \"\"\"Uses regex to find version (num) at the end of\n    string and substitute it, either in the title\n    and/or url, the title\n    has a dot in it's struct and\n    the name (url) has a dash\n    \"\"\"\n    delimeter = \"\"\n    str_to_substitute = \"\"\n    if title_or_url.get(\"type\") == \"title\":\n        delimeter = \".\"\n        str_to_substitute = title_or_url.get(\"title\")\n    else:\n        delimeter = \"_\"\n        str_to_substitute = title_or_url.get(\"url\")\n    # ends with _v.digit\n    match = re.search(r\"_v[._][\\d$]\", str_to_substitute)\n    if match is not None:\n        str_to_substitute = re.sub(\n            r\"_v[._][\\d]+$\", f\"_v{delimeter}{new_version}\", str_to_substitute\n        )\n    else:\n        # first time to change the versions\n        str_to_substitute += f\"_v{delimeter}\" + new_version\n    return str_to_substitute\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.dataset_versioning_control.update_dataset_title_and_url","title":"update_dataset_title_and_url","text":"<pre><code>update_dataset_title_and_url(new_version, generated_id, data_dict)\n</code></pre> <p>Set the name and the url for the new version.</p> Source code in <code>ckanext/saeoss/logic/action/dataset_versioning_control.py</code> <pre><code>def update_dataset_title_and_url(\n    new_version: str, generated_id: str, data_dict: dict\n) -&gt; dict:\n    \"\"\"Set the name and the url for\n    the new version.\n    \"\"\"\n    id = data_dict.get(\"id\")\n    new_id = \"\"\n    if id is not None:\n        new_id = id + \"_version_num_\" + new_version + \"_\" + generated_id\n    new_title = search_and_update(\n        {\"type\": \"title\", \"title\": data_dict.get(\"title\")}, new_version\n    )\n    new_url = search_and_update(\n        {\"type\": \"url\", \"url\": data_dict.get(\"name\")}, new_version\n    )\n    for i in new_url:\n        if i in \"!\u201d#$%&amp;'()*+,./:;&lt;=&gt;?@[\\]^`{|}~.\":\n            new_url = new_url.replace(i, \"_\")\n    data_dict.update({\"id\": new_id, \"title\": new_title, \"name\": new_url})\n    return data_dict\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.handle_repeating_subfields.handle_repeating_subfields_naming","title":"handle_repeating_subfields_naming","text":"<pre><code>handle_repeating_subfields_naming(data_dict)\n</code></pre> <p>change the naming of repeating subfields from fieldname-0-subfieldname to fieldname_subfieldname</p> Source code in <code>ckanext/saeoss/logic/action/handle_repeating_subfields.py</code> <pre><code>def handle_repeating_subfields_naming(data_dict: dict):\n    \"\"\"\n    change the naming of repeating subfields from\n    fieldname-0-subfieldname\n    to fieldname_subfieldname\n    \"\"\"\n    repeating_fields = [\n        \"contact\",\n        \"lineage\",\n        \"distribution\",\n        \"maintenance_information\",\n        \"reference_system_additional_info\",\n    ]\n    new_data_dict = deepcopy(data_dict)\n    for k in data_dict:\n        for key in repeating_fields:\n            if k.startswith(key):\n                key_initials = f\"{key}-\\w+-\"\n                print(key_initials)\n                subfield_name = re.sub(key_initials, \"\", k)\n                print(subfield_name)\n                new_key = f\"{key}_\" + subfield_name\n                new_data_dict[new_key] = new_data_dict.pop(k)\n    return new_data_dict\n</code></pre>"},{"location":"developer/manual/logic/#auth","title":"Auth","text":"<p>Custom auth functions for ckanext-pages</p> <p>These are used to control which users are allowed to edit new pages on the portal</p>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.auth.ckan.authorize_package_publish","title":"authorize_package_publish","text":"<pre><code>authorize_package_publish(context, data_dict=None)\n</code></pre> <p>Check if the current user is authorized to publish a dataset</p> <p>Only org admins or site-wide sysadmins are authorized to publish a dataset (i.e. make it public).</p> Source code in <code>ckanext/saeoss/logic/auth/ckan.py</code> <pre><code>def authorize_package_publish(\n    context: typing.Dict, data_dict: typing.Optional[typing.Dict] = None\n) -&gt; typing.Dict:\n    \"\"\"Check if the current user is authorized to publish a dataset\n\n    Only org admins or site-wide sysadmins are authorized to publish a dataset (i.e.\n    make it public).\n\n    \"\"\"\n\n    data_ = data_dict.copy() if data_dict else {}\n    user = context[\"auth_user_obj\"]\n    result = {\"success\": False, \"msg\": \"You are not authorized to publish package\"}\n    # TODO: check whether we need to make this check, as sysadmin is likely granted access by default\n    if user.sysadmin:\n        result = {\"success\": True}\n    else:\n        # if we have an org to check we can check if package can be published, otherwise\n        # we have no way of knowing if the user is a member of the target org\n        # beforehand, so we deny\n        owner_org = data_.get(\"owner_org\", data_.get(\"group_id\"))\n        if owner_org is not None:\n            members = toolkit.get_action(\"member_list\")(\n                data_dict={\"id\": owner_org, \"object_type\": \"user\"}\n            )\n            admin_member_ids = [\n                member_tuple[0]\n                for member_tuple in members\n                if member_tuple[2] == \"Admin\"\n            ]\n            if user.id in admin_member_ids:\n                result = {\"success\": True}\n    return result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.auth.ckan.package_patch","title":"package_patch","text":"<pre><code>package_patch(next_auth, context, data_dict)\n</code></pre> <p>Custom auth for the package_patch action.</p> Source code in <code>ckanext/saeoss/logic/auth/ckan.py</code> <pre><code>@toolkit.chained_auth_function\ndef package_patch(\n    next_auth: typing.Callable, context: typing.Dict, data_dict: typing.Dict\n):\n    \"\"\"Custom auth for the package_patch action.\"\"\"\n    return package_update(next_auth, context, data_dict)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.auth.ckan.package_update","title":"package_update","text":"<pre><code>package_update(next_auth, context, data_dict=None)\n</code></pre> <p>Custom auth for the package_update action.</p> <p>Packages that are public shall not be editable by users that are not org admins or site-wide sysadmins.</p> Source code in <code>ckanext/saeoss/logic/auth/ckan.py</code> <pre><code>@toolkit.chained_auth_function\ndef package_update(next_auth, context, data_dict=None):\n    \"\"\"Custom auth for the package_update action.\n\n    Packages that are public shall not be editable by users that are not org admins\n    or site-wide sysadmins.\n\n    \"\"\"\n    user = context[\"auth_user_obj\"]\n    if user.sysadmin:\n        final_result = next_auth(context, data_dict)\n    elif data_dict is not None:\n        # NOTE: we do not call toolkit.get_action(\"package_show\") here but rather do it\n        # the same as vanilla CKAN which uses a custom way to retrieve the object from\n        # the context - this is in order to ensure other extensions\n        # (e.g. ckanext.harvest) are able to function correctly\n        package = get_package_object(context, data_dict)\n        if package.type == CKANEXT_HARVEST_DATASET_TYPE_NAME:\n            # defer auth to the ckanext.harvest extension\n            final_result = next_auth(context, data_dict)\n        else:\n            result = {\"success\": False}\n            if package.private or package.state == \"draft\":\n                result[\"success\"] = True\n            else:\n                org_id = data_dict.get(\"owner_org\", package.owner_org)\n                if org_id is not None:\n                    members = toolkit.get_action(\"member_list\")(\n                        data_dict={\"id\": org_id, \"object_type\": \"user\"}\n                    )\n                    for member_id, _, role in members:\n                        if member_id == user.id and role.lower() == \"admin\":\n                            result[\"success\"] = True\n                            break\n                    else:\n                        result[\"msg\"] = (\n                            f\"Only administrators of organization {org_id!r} are \"\n                            f\"authorized to edit one of its public datasets\"\n                        )\n            if result[\"success\"]:\n                final_result = next_auth(context, data_dict)\n            else:\n                final_result = result\n    else:\n        final_result = next_auth(context, data_dict)\n    return final_result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.auth.pages.authorize_delete_page","title":"authorize_delete_page","text":"<pre><code>authorize_delete_page(next_auth, context, data_dict=None)\n</code></pre> <p>Check whether user should be allowed to delete pages</p> <p>This auth function customizes the default behavior of ckanext-pages. Where the default is to only allow sysadmins to delete a page, we instead check if they are members of the special portal staff group.</p> <p>As a result of this override behavior we do not call <code>next_auth</code> here - otherwise the default ckanext-pages auth function would be called last and it would end up enforcing the default behavior.</p> Source code in <code>ckanext/saeoss/logic/auth/pages.py</code> <pre><code>@toolkit.chained_auth_function\ndef authorize_delete_page(\n    next_auth: typing.Callable,\n    context: typing.Dict,\n    data_dict: typing.Optional[typing.Dict] = None,\n) -&gt; typing.Dict:\n    \"\"\"Check whether user should be allowed to delete pages\n\n    This auth function customizes the default behavior of ckanext-pages. Where the\n    default is to only allow sysadmins to delete a page, we instead check if they are\n    members of the special portal staff group.\n\n    As a result of this override behavior we do not call `next_auth` here - otherwise\n    the default ckanext-pages auth function would be called last and it would\n    end up enforcing the default behavior.\n\n    \"\"\"\n\n    result = {\"success\": False}\n    user = context[\"auth_user_obj\"]\n    if toolkit.h[\"user_is_staff_member\"](user.id):\n        result[\"success\"] = True\n    else:\n        result[\"msg\"] = toolkit._(\"You are not authorized to delete pages\")\n    return result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.auth.pages.authorize_edit_page","title":"authorize_edit_page","text":"<pre><code>authorize_edit_page(next_auth, context, data_dict=None)\n</code></pre> <p>Check whether user should be allowed to edit pages</p> <p>This auth function customizes the default behavior of ckanext-pages. Where the default is to only allow sysadmins to edit a page, we instead check if they are members of the special portal staff group.</p> <p>As a result of this override behavior we do not call <code>next_auth</code> here - otherwise the default ckanext-pages auth function would be called last and it would end up enforcing the default behavior (i.e. only allow sysadmins to edit a page).</p> Source code in <code>ckanext/saeoss/logic/auth/pages.py</code> <pre><code>@toolkit.chained_auth_function\ndef authorize_edit_page(\n    next_auth: typing.Callable,\n    context: typing.Dict,\n    data_dict: typing.Optional[typing.Dict] = None,\n) -&gt; typing.Dict:\n    \"\"\"Check whether user should be allowed to edit pages\n\n    This auth function customizes the default behavior of ckanext-pages. Where the\n    default is to only allow sysadmins to edit a page, we instead check if they are\n    members of the special portal staff group.\n\n    As a result of this override behavior we do not call `next_auth` here - otherwise\n    the default ckanext-pages auth function would be called last and it would\n    end up enforcing the default behavior (i.e. only allow sysadmins to edit a page).\n\n    \"\"\"\n\n    result = {\"success\": False}\n    user = context[\"auth_user_obj\"]\n    if toolkit.h[\"user_is_staff_member\"](user.id):\n        result[\"success\"] = True\n    else:\n        result[\"msg\"] = toolkit._(\"You are not authorized to edit pages\")\n    return result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.auth.pages.authorize_show_page","title":"authorize_show_page","text":"<pre><code>authorize_show_page(next_auth, context, data_dict=None)\n</code></pre> <p>Check whether user should be allowed to view a page</p> <p>This auth function customized the default behavior of ckanext-pages. Where the default is to check if a page is public and if not only allow access to sysadmins, we want members of the special portal staff group to also be able to access private pages.</p> <p>As a result of this override behavior we may not call <code>next_auth</code> here - otherwise the default ckanext-pages auth function would be called last and it would end up enforcing the default behavior.</p> Source code in <code>ckanext/saeoss/logic/auth/pages.py</code> <pre><code>@toolkit.chained_auth_function\n@toolkit.auth_allow_anonymous_access\ndef authorize_show_page(\n    next_auth: typing.Callable,\n    context: typing.Dict,\n    data_dict: typing.Optional[typing.Dict] = None,\n) -&gt; typing.Dict:\n    \"\"\"Check whether user should be allowed to view a page\n\n    This auth function customized the default behavior of ckanext-pages. Where the\n    default is to check if a page is public and if not only allow access to sysadmins,\n    we want members of the special portal staff group to also be able to access private\n    pages.\n\n    As a result of this override behavior we may not call `next_auth` here - otherwise\n    the default ckanext-pages auth function would be called last and it would\n    end up enforcing the default behavior.\n\n    \"\"\"\n\n    data_dict = dict(data_dict) if data_dict is not None else {}\n    org_id = data_dict.get(\"org_id\")\n    page = data_dict.get(\"page\")\n    out = pages_db.Page.get(group_id=org_id, name=page)\n    result = {\"success\": False}\n    if out:\n        if org_id:  # check membership of the user by calling original method\n            result = next_auth(context, data_dict)\n        else:  # universal page, lets see if page is private and/or if user is staff\n            if out.private:  # user can only see it if it is from staff\n                user = context[\"auth_user_obj\"]\n                if toolkit.h[\"user_is_staff_member\"](user.id):\n                    result[\"success\"] = True\n                else:\n                    result[\"msg\"] = toolkit._(\n                        \"You are not authorized to access page %s\" % page\n                    )\n            else:  # everyone can see it\n                result[\"success\"] = True\n    else:\n        result[\"msg\"] = toolkit._(\"Page %s not found\") % page\n    return result\n</code></pre>"},{"location":"developer/manual/logic/#stac-validators","title":"STAC Validators","text":""},{"location":"developer/manual/logic/#converters","title":"Converters","text":""},{"location":"developer/manual/logic/#ckanext.saeoss.logic.converters.check_if_int","title":"check_if_int","text":"<pre><code>check_if_int(data_dict)\n</code></pre> <p>check if the given value can be converted to an integer</p> Source code in <code>ckanext/saeoss/logic/converters.py</code> <pre><code>def check_if_int(data_dict):\n    \"\"\"\n    check if the given value can be\n    converted to an integer\n    \"\"\"\n    logger.debug(\"convert to int \")\n    if data_dict == \"\":\n        return \"\"\n    try:\n        return int(data_dict)\n    except:\n        raise toolkit.Invalid(\"select field should be an integer \")\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.converters.check_if_number","title":"check_if_number","text":"<pre><code>check_if_number(data_dict)\n</code></pre> <p>check if the given value can be converted to a number</p> Source code in <code>ckanext/saeoss/logic/converters.py</code> <pre><code>def check_if_number(data_dict):\n    \"\"\"\n    check if the given value can be\n    converted to a number\n    \"\"\"\n    logger.debug(\"convert to real number \")\n    if data_dict == \"\":\n        return \"\"\n    try:\n        return float(data_dict)\n    except:\n        raise toolkit.Invalid(\"select field should be a number \")\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.converters.convert_choices_select_to_int","title":"convert_choices_select_to_int","text":"<pre><code>convert_choices_select_to_int(data_dict, context)\n</code></pre> <p>while submitting the select choices numerical values, they are returned as strings, they should be submitted as ints, otherwises a value error would be raised.</p> Source code in <code>ckanext/saeoss/logic/converters.py</code> <pre><code>def convert_choices_select_to_int(data_dict, context):\n    \"\"\"\n    while submitting the select choices numerical\n    values, they are returned as strings,\n    they should be submitted as ints, otherwises\n    a value error would be raised.\n    \"\"\"\n    # TODO: adding the field name for proper loggin\n\n    logger.debug(\"convert select choices to int \")\n    if data_dict == \"\":\n        return \"\"\n    try:\n        return int(data_dict)\n    except:\n        raise toolkit.Invalid(\"select field should have a string value\")\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.converters.convert_select_custom_choice_to_extra","title":"convert_select_custom_choice_to_extra","text":"<pre><code>convert_select_custom_choice_to_extra(data_dict)\n</code></pre> <p>adding custom field to select options, currently appears as \"__extras\" in the database,</p> Source code in <code>ckanext/saeoss/logic/converters.py</code> <pre><code>def convert_select_custom_choice_to_extra(data_dict):\n    \"\"\"\n    adding custom field to select options,\n    currently appears as \"__extras\" in the\n    database,\n    \"\"\"\n    return data_dict\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.converters.default_metadata_standard_name","title":"default_metadata_standard_name","text":"<pre><code>default_metadata_standard_name(value)\n</code></pre> <p>returns SANS1878 as the default metadata standard name.</p> Source code in <code>ckanext/saeoss/logic/converters.py</code> <pre><code>def default_metadata_standard_name(value):\n    \"\"\"\n    returns SANS1878 as the default\n    metadata standard name.\n    \"\"\"\n    if value == \"\":\n        return \"SANS 1878-1:2011\"\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.converters.default_metadata_standard_version","title":"default_metadata_standard_version","text":"<pre><code>default_metadata_standard_version(value)\n</code></pre> <p>returns SANS1878 as the default metadata standard name.</p> Source code in <code>ckanext/saeoss/logic/converters.py</code> <pre><code>def default_metadata_standard_version(value):\n    \"\"\"\n    returns SANS1878 as the default\n    metadata standard name.\n    \"\"\"\n    if value == \"\":\n        return \"1.1\"\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.converters.spatial_resolution_converter","title":"spatial_resolution_converter","text":"<pre><code>spatial_resolution_converter(value)\n</code></pre> <p>the natural numbers validator used with spatial resolution field causes internal server error when the type is None, handled here</p> Source code in <code>ckanext/saeoss/logic/converters.py</code> <pre><code>def spatial_resolution_converter(value: str):\n    \"\"\"\n    the natural numbers validator used with\n    spatial resolution field causes\n    internal server error when the type\n    is None, handled here\n    \"\"\"\n    if value == \"\":\n        return -1\n    return value\n</code></pre>"},{"location":"developer/manual/logic/#schema","title":"Schema","text":""},{"location":"developer/manual/logic/#validators","title":"Validators","text":""},{"location":"developer/manual/logic/#ckanext.saeoss.logic.validators.doi_validator","title":"doi_validator","text":"<pre><code>doi_validator(value)\n</code></pre> <p>check if the doi follows certain pattern.</p> Source code in <code>ckanext/saeoss/logic/validators.py</code> <pre><code>def doi_validator(value: str):\n    \"\"\"\n    check if the doi follows\n    certain pattern.\n    \"\"\"\n    if value == \"\" or value is None:\n        return \"\"\n\n    if type(value) is Missing:\n        return \"\"\n\n    pattern = \"^10\\\\.\\\\d{4,}(\\\\.\\\\d+)*/[-._;()/:a-zA-Z0-9]+$\"\n    if re.match(pattern, value) is None:\n        raise toolkit.Invalid(\n            \"\"\"\n        doi is not in the correct form,\n        please refer to https://www.doi.org/\n        \"\"\"\n        )\n    else:\n        return value\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.validators.lineage_source_srs_validator","title":"lineage_source_srs_validator","text":"<pre><code>lineage_source_srs_validator(value)\n</code></pre> <p>\" the difference from above method that the lineage source srs can be empty</p> Source code in <code>ckanext/saeoss/logic/validators.py</code> <pre><code>def lineage_source_srs_validator(value):\n    \"\"\" \"\n    the difference from above method\n    that the lineage source srs can\n    be empty\n    \"\"\"\n    if value == \"\":\n        return \"\"\n    else:\n        srs_validator(value)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.validators.srs_validator","title":"srs_validator","text":"<pre><code>srs_validator(value)\n</code></pre> <p>Validator for a dataset's spatial_reference_system field</p> Source code in <code>ckanext/saeoss/logic/validators.py</code> <pre><code>def srs_validator(value: str) -&gt; str:\n    \"\"\"Validator for a dataset's spatial_reference_system field\"\"\"\n\n    try:\n        parsed_value = value.replace(\" \", \"\").upper()\n        if parsed_value.count(\":\") == 0:\n            raise toolkit.Invalid(\n                toolkit._(\"Please provide a colon-separated value, e.g. EPSG:4326\")\n            )\n    except AttributeError:\n        value = \"EPSG:4326\"\n\n    try:\n        authority, code = value.split(\":\")\n    except ValueError:\n        raise toolkit.Invalid(\n            toolkit._(\n                \"Could not extract Spatial Reference System's authority and code. \"\n                \"Please provide them as a colon-separated value, e.g. \"\n                \"EPSG:4326\"\n            )\n            % {\"value\": value}\n        )\n\n    return value\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.validators.to_date_after_from_date_validator","title":"to_date_after_from_date_validator","text":"<pre><code>to_date_after_from_date_validator(key, flattened_data, errors, context)\n</code></pre> <p>Validator that checks that start and end dates are consistent</p> Source code in <code>ckanext/saeoss/logic/validators.py</code> <pre><code>def to_date_after_from_date_validator(key, flattened_data, errors, context):\n    \"\"\"Validator that checks that start and end dates are consistent\"\"\"\n    logger.debug(f\"{flattened_data=}\")\n    # ('reference_system_additional_info', 0, 'temporal_extent_period_duration_from')\n    from_date = flattened_data[\n        (\"reference_system_additional_info\", 0, \"temporal_extent_period_duration_from\")\n    ]\n    to_date = flattened_data[\n        (\"reference_system_additional_info\", 0, \"temporal_extent_period_duration_to\")\n    ]\n    from_date = datetime.strptime(from_date, \"%y-%m-%d\")\n    to_date = datetime.strptime(to_date, \"%y-%m-%d\")\n    if to_date &lt; from_date:\n        raise toolkit.Invalid(\n            toolkit._(\n                \"Please provide correct temporal duration for temporal references (from - to)\"\n            )\n        )\n    else:\n        return ignore_missing(key, flattened_data, errors, context)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.validators.validate_stac_json","title":"validate_stac_json","text":"<pre><code>validate_stac_json(stac_json)\n</code></pre> <p>Validate a STAC JSON string or dict.</p> <p>Args:     stac_json (str | dict): STAC JSON data as a string or dictionary.</p> <p>Returns:     bool: True if valid, raises an error if invalid.</p> Source code in <code>ckanext/saeoss/logic/validators.py</code> <pre><code>def validate_stac_json(stac_json: typing.Union[str, dict]) -&gt; bool:\n    \"\"\"\n    Validate a STAC JSON string or dict.\n\n    Args:\n        stac_json (str | dict): STAC JSON data as a string or dictionary.\n\n    Returns:\n        bool: True if valid, raises an error if invalid.\n    \"\"\"\n    # Load JSON if it's a string\n    if isinstance(stac_json, str):\n        try:\n            stac_data = json.loads(stac_json)\n        except json.JSONDecodeError as e:\n            raise ckan_custom_actions.ValidationError(f\"Invalid JSON: {e}\")\n    else:\n        stac_data = stac_json\n\n    try:\n        # This checks the JSON structure against the STAC schemas\n        validate_dict(stac_data)\n        return True\n    except Exception as e:\n        raise ckan_custom_actions.ValidationError([f\"The file/link does not follow STAC guidelines. Errors: \\n\\n{e}\"],)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.validators.value_or_true_validator","title":"value_or_true_validator","text":"<pre><code>value_or_true_validator(value)\n</code></pre> <p>Validator that provides a default value of <code>True</code> when the input is None.</p> <p>This was designed with a package's <code>private</code> field in mind. We want it to be assigned a value of True when it is not explicitly provided on package creation. This shall enforce creating private packages by default.</p> Source code in <code>ckanext/saeoss/logic/validators.py</code> <pre><code>def value_or_true_validator(value: typing.Union[str, Missing]):\n    \"\"\"Validator that provides a default value of `True` when the input is None.\n\n    This was designed with a package's `private` field in mind. We want it to be\n    assigned a value of True when it is not explicitly provided on package creation.\n    This shall enforce creating private packages by default.\n\n    \"\"\"\n\n    logger.debug(f\"inside value_or_true. Original value: {value!r}\")\n    return value if value != toolkit.missing else True\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.validators.version_validator","title":"version_validator","text":"<pre><code>version_validator(value)\n</code></pre> <p>check if the version is number or not</p> Source code in <code>ckanext/saeoss/logic/validators.py</code> <pre><code>def version_validator(value):\n    \"\"\"\n    check if the version is number or not\n    \"\"\"\n    try:\n        value = float(value)\n    except:\n        raise toolkit.Invalid(\"the dataset version should be a number\")\n    return value\n</code></pre>"},{"location":"developer/manual/migration/","title":"Migration","text":"<p>Migration is a process of migrating models into the database.  In Flask, the extension Flask-Migrate handles SQLAlchemy database migrations for Flask  applications using Alembic.</p>"},{"location":"developer/manual/migration/#sqlalchemy","title":"SQLAlchemy","text":"<p>SQLAlchemy is the Python SQL toolkit and Object Relational Mapper that gives application  developers the full power and flexibility of SQL.</p> <p>To create a table, we need to have a SQLAlchemy function. The function can be updated and changed.</p> <p>See the code below</p> <p>Define a table and a class to hold stac harvester the class has a get method that returns a list of stac harvester there is also a mapper to map relationships.</p>"},{"location":"developer/manual/migration/#ckanext.saeoss.model.stac_harvester.StacHarvester","title":"StacHarvester","text":"<pre><code>StacHarvester(**kw)\n</code></pre> <p>               Bases: <code>StatefulObjectMixin</code>, <code>DomainObject</code></p> <p>StacHarvester model.</p> Source code in <code>ckanext/saeoss/model/stac_harvester.py</code> <pre><code>def __init__(self, **kw):\n    super(StacHarvester, self).__init__(**kw)\n    self.owner_id = kw.get(\"user\")\n</code></pre>"},{"location":"developer/manual/migration/#ckanext.saeoss.model.stac_harvester.StacHarvester.get","title":"get","text":"<pre><code>get(**kw)\n</code></pre> <p>returns a list of saved searches based on user id.</p> Source code in <code>ckanext/saeoss/model/stac_harvester.py</code> <pre><code>def get(cls, **kw):\n    \"\"\"\n    returns a list of saved searches\n    based on user id.\n    \"\"\"\n    query = model.meta.Session.query(cls)\n    return query.filter_by(**kw)\n</code></pre>"},{"location":"developer/manual/migration/#migrate-a-model","title":"Migrate a model","text":"<p>In SAEOSS-Portal, after adding or updating a model. To apply a migration, run the following command: </p> <pre><code>docker exec -it saeoss_ckan-web_1 poetry run alembic -c /home/appuser/app/ckanext/saeoss/migration/saeoss/alembic.ini  revision -m \"Add stac harvest table\"\n</code></pre> <p>After running the above command, a new file would have been created in the directory: <code>ckanext/saeoss/migration/saeoss/alembic/versions</code></p> <p>In each file in the path, there is a feature called upgrade and/or downgrade to create or update the table. </p> <p>See the code below</p> <p>Add stac harvest table</p> <p>Revision ID: 796cac900039 Revises: cf3438c769b2 Create Date: 2023-10-11 11:37:26.280343</p>"},{"location":"developer/manual/migration/#ckanext.saeoss.migration.saeoss.alembic.versions.796cac900039_add_stac_harvest_table.downgrade","title":"downgrade","text":"<pre><code>downgrade()\n</code></pre> <p>To delete table function.</p> Source code in <code>ckanext/saeoss/migration/saeoss/alembic/versions/796cac900039_add_stac_harvest_table.py</code> <pre><code>def downgrade():\n    \"\"\"To delete table function.\"\"\"\n    op.drop_table(\"stac_harvester\")\n</code></pre>"},{"location":"developer/manual/migration/#ckanext.saeoss.migration.saeoss.alembic.versions.796cac900039_add_stac_harvest_table.upgrade","title":"upgrade","text":"<pre><code>upgrade()\n</code></pre> <p>Create table function.</p> Source code in <code>ckanext/saeoss/migration/saeoss/alembic/versions/796cac900039_add_stac_harvest_table.py</code> <pre><code>def upgrade():\n    \"\"\"Create table function.\"\"\"\n    op.create_table(\n        \"stac_harvester\",\n        model.meta.metadata,\n        sa.Column(\n            \"harvester_id\",\n            types.UnicodeText,\n            primary_key=True,\n            default=model.types.make_uuid,\n        ),\n        sa.Column(\n            \"user\",\n            types.UnicodeText,\n        ),\n        sa.Column(\n            \"owner_org\",\n            types.UnicodeText,\n        ),\n        sa.Column(\n            \"url\",\n            types.UnicodeText,\n        ),\n        sa.Column(\n            \"number_records\",\n            types.UnicodeText,\n        ),\n        sa.Column(\n            \"status\",\n            types.UnicodeText,\n        ),\n        sa.Column(\n            \"message\",\n            types.UnicodeText,\n        ),\n        sa.Column(\n            \"_date\", types.DateTime, default=datetime.datetime.utcnow\n        ),\n    )\n</code></pre>"},{"location":"developer/manual/model/","title":"Model","text":"<p>Models are used in Flask to conveniently handle interactions with databases using ORM  (Object Relational Mapping). </p> <p>Define a table and a class to hold saved searches the class has a get method that returns a list of saved search there is also a mapper to map relationships</p> <p>Define a table and a class to hold stac harvester the class has a get method that returns a list of stac harvester there is also a mapper to map relationships.</p> <p>Additional fields for the user model for storing affiliation details.</p>"},{"location":"developer/manual/model/#ckanext.saeoss.model.saved_search.SavedSearches","title":"SavedSearches","text":"<pre><code>SavedSearches(**kw)\n</code></pre> <p>               Bases: <code>StatefulObjectMixin</code>, <code>DomainObject</code></p> <p>SavedSearches model.</p> Source code in <code>ckanext/saeoss/model/saved_search.py</code> <pre><code>def __init__(self, **kw):\n    super(SavedSearches, self).__init__(**kw)\n    self.owner_id = kw.get(\"owner_user\")\n</code></pre>"},{"location":"developer/manual/model/#ckanext.saeoss.model.saved_search.SavedSearches.get","title":"get","text":"<pre><code>get(**kw)\n</code></pre> <p>returns a list of saved searches based on user id.</p> Source code in <code>ckanext/saeoss/model/saved_search.py</code> <pre><code>def get(cls, **kw):\n    \"\"\"\n    returns a list of saved searches\n    based on user id.\n    \"\"\"\n    query = model.meta.Session.query(cls)\n    return query.filter_by(**kw)\n</code></pre>"},{"location":"developer/manual/model/#ckanext.saeoss.model.stac_harvester.StacHarvester","title":"StacHarvester","text":"<pre><code>StacHarvester(**kw)\n</code></pre> <p>               Bases: <code>StatefulObjectMixin</code>, <code>DomainObject</code></p> <p>StacHarvester model.</p> Source code in <code>ckanext/saeoss/model/stac_harvester.py</code> <pre><code>def __init__(self, **kw):\n    super(StacHarvester, self).__init__(**kw)\n    self.owner_id = kw.get(\"user\")\n</code></pre>"},{"location":"developer/manual/model/#ckanext.saeoss.model.stac_harvester.StacHarvester.get","title":"get","text":"<pre><code>get(**kw)\n</code></pre> <p>returns a list of saved searches based on user id.</p> Source code in <code>ckanext/saeoss/model/stac_harvester.py</code> <pre><code>def get(cls, **kw):\n    \"\"\"\n    returns a list of saved searches\n    based on user id.\n    \"\"\"\n    query = model.meta.Session.query(cls)\n    return query.filter_by(**kw)\n</code></pre>"},{"location":"developer/manual/plugins/","title":"Plugin","text":""},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.harvesting_plugin.HarvestingPlugin","title":"HarvestingPlugin","text":"<p>               Bases: <code>SingletonPlugin</code>, <code>DefaultDatasetForm</code></p> <p>Custom plugin to deal with harvesting-related customizations.</p> <p>This class exists in order to work around a bug in ckanext-spatial:</p> <pre><code>https://github.com/ckan/ckanext-spatial/issues/277\n</code></pre> <p>The mentioned bug prevents being able to have a CKAN extension plugin using both the <code>IValidators</code> and the <code>ISpatialHarvester</code> interfaces at the same time.</p> <p>As an alternative, we have implemented the current plugin class with the aim to use it strictly for customization of the harvesters (i.e. implement the ISpatialHarvester interface) while the main plugin class (saeoss_plugin.SaeossPlugin) is still handling all of the other SAEOSS customizations.</p>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.harvesting_plugin.HarvestingPlugin.get_package_dict","title":"get_package_dict","text":"<pre><code>get_package_dict(context, data_dict)\n</code></pre> <p>Extension point required by ISpatialHarvester</p> Source code in <code>ckanext/saeoss/plugins/harvesting_plugin.py</code> <pre><code>def get_package_dict(\n    self, context: typing.Dict, data_dict: typing.Dict[str, typing.Any]\n) -&gt; typing.Dict[str, typing.Any]:\n    \"\"\"Extension point required by ISpatialHarvester\"\"\"\n    package_dict = data_dict.get(\"package_dict\", {})\n    iso_values = data_dict.get(\"iso_values\", {})\n    parsed_resources = []\n    for resource_dict in package_dict.get(\"resources\", []):\n        parsed_resources.append(\n            _CkanResource(\n                url=resource_dict.get(\"url\"),\n                format=resource_dict.get(\"format\"),\n                format_version=\"change me\",\n                name=resource_dict.get(\"name\"),\n                description=resource_dict.get(\"description\") or None,\n            )\n        )\n    parsed_tags = []\n    for parsed_tag in package_dict.get(\"tags\", []):\n        parsed_tags.append(\n            {\"name\": parsed_tag.get(\"name\", \"\"), \"vocabulary_id\": None}\n        )\n    # declared_dataset_language = _get_possibly_list_item(\n    #     iso_values, \"dataset-language\"\n    # )\n    # dataset_language = _get_language_code(declared_dataset_language or \"en\")\n    iso_topic_category = _get_possibly_list_item(iso_values, \"topic-category\")\n    equivalent_scale = _get_possibly_list_item(iso_values, \"equivalent-scale\")\n\n    package_dict = _get_extras_subfields(package_dict)\n\n    dataset = _CkanSaeossDataset(\n        type=\"dataset\",\n        private=True,\n        featured=False,\n        name=package_dict.get(\"name\"),\n        title=package_dict.get(\"title\"),\n        notes=package_dict.get(\"notes\"),\n        iso_topic_category=iso_topic_category or \"\",\n        owner_org=package_dict.get(\"owner_org\", \"kartoza\"),\n        maintainer=iso_values.get(\"contact\"),\n        maintainer_email=iso_values.get(\"contact-email\"),\n        license_id=LicenseNotSpecified.id,  # set this default and let publisher adjust\n        spatial=_get_spatial_field(package_dict),\n        resources=parsed_resources,\n        tags=parsed_tags,\n        source=None,\n        version=None,\n    )\n\n    # for var in DATASET_Harvest_MINIMAL_SET_OF_FIELDS_MAPPING.values():\n    #     setattr(dataset, var, None)\n\n    new_data_dict = dataset.to_data_dict()\n    new_data_dict.update(package_dict)\n    # filers, remove these as you go\n    new_data_dict[\"metadata_language_and_character_set-0-metadata_character_set\"] = \"ucs-2\"\n    new_data_dict[\"metadata_language_and_character_set-0-dataset_character_set\"] = \"ucs-2\"\n    new_data_dict[\"spatial_parameters-0-equivalent_scale\"] = \"5000\"\n    new_data_dict[\"spatial_parameters-0-spatial_representation_type\"] = \"001\"\n    new_data_dict[\"lineage_statement\"] = \"lineage_statement\"\n    del new_data_dict[\"extras\"]\n\n    new_data_dict[\"id\"] = iso_values.get(\"guid\")\n    new_data_dict[\"metadata_modified\"] = iso_values.get(\"date_updated\")\n\n    return new_data_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.harvesting_plugin.get_dataset_reference_date","title":"get_dataset_reference_date","text":"<pre><code>get_dataset_reference_date(harvested_reference_date, data_dict)\n</code></pre> <p>the reference date can be more than one with different types (creation, revision, publication, ..etc.)</p> Source code in <code>ckanext/saeoss/plugins/harvesting_plugin.py</code> <pre><code>def get_dataset_reference_date(\n    harvested_reference_date: list,\n    data_dict: typing.Dict\n) -&gt; typing.Dict:\n    \"\"\"\n    the reference date can be more than one with\n    different types (creation, revision, publication, ..etc.)\n    \"\"\"\n    fallback_reference_date = None\n    for idx, related_date in enumerate(harvested_reference_date):\n        if (raw_date := related_date.get(\"value\")) is not None:\n            try:\n                reference_date = dateutil.parser.parse(raw_date)\n            except dateutil.parser.ParserError:\n                logger.exception(\n                    msg=f\"Could not parse {raw_date!r} as a datetime\"\n                )\n                result = fallback_reference_date\n            else:\n                result = dateutil.parser.parse(\n                    reference_date.isoformat()\n                ).strftime(\"%Y-%m-%dT%H:%M:%S\")\n            # get the type\n            reference_date_type = get_reference_date_type(related_date.get(\"type\"))\n            reference_date_key = _get_subfield_key(\"dataset_reference_date\", idx)\n            reference_date_type_key = _get_subfield_key(\"dataset_reference_date_type\", idx)\n            data_dict[reference_date_key] = result\n            data_dict[reference_date_type_key] = reference_date_type\n\n    return data_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.harvesting_plugin.get_reference_date_type","title":"get_reference_date_type","text":"<pre><code>get_reference_date_type(dateType)\n</code></pre> <p>with harvesters the data type comes as publication, revision, creation, ... we converts here to 001, 002, 003, ...</p> Source code in <code>ckanext/saeoss/plugins/harvesting_plugin.py</code> <pre><code>def get_reference_date_type(dateType: str) -&gt; str:\n    \"\"\"\n    with harvesters the data type comes as\n    publication, revision, creation, ...\n    we converts here to 001, 002, 003, ...\n    \"\"\"\n    if dateType == \"revision\":\n        return \"003\"\n\n    elif dateType == \"publication\":\n        return \"002\"\n\n    elif dateType == \"creation\":\n        return \"001\"\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin","title":"SaeossPlugin","text":"<p>               Bases: <code>SingletonPlugin</code>, <code>DefaultDatasetForm</code></p>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.after_create","title":"after_create","text":"<pre><code>after_create(context, pkg_dict)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def after_create(self, context, pkg_dict):\n    \"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\n    return context, pkg_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.after_delete","title":"after_delete","text":"<pre><code>after_delete(context, pkg_dict)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def after_delete(self, context, pkg_dict):\n    \"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\n    return context, pkg_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.after_load","title":"after_load","text":"<pre><code>after_load(service)\n</code></pre> <p>Control plugin loading mechanism</p> <p>This method is implemented by the SaeossPlugin because we are adding a 1:1 relationship between our <code>UserExtraFields</code> model and CKAN's <code>User</code> model.</p> <p>SQLAlchemy expects relationships to be configured on both sides, which means we have to modify CKAN's User model in order to make the relationship work. We do that in this function.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def after_load(self, service):\n    \"\"\"Control plugin loading mechanism\n\n    This method is implemented by the SaeossPlugin because we are adding\n    a 1:1 relationship between our `UserExtraFields` model and CKAN's `User` model.\n\n    SQLAlchemy expects relationships to be configured on both sides, which means\n    we have to modify CKAN's User model in order to make the relationship work. We\n    do that in this function.\n\n    \"\"\"\n\n    model.User.extra_fields = orm.relationship(\n        UserExtraFields, back_populates=\"user\", uselist=False\n    )\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.after_search","title":"after_search","text":"<pre><code>after_search(search_results, search_params)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def after_search(self, search_results, search_params):\n    \"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\n\n    context = {}\n    facets = OrderedDict()\n    default_facet_titles = {\n        \"groups\": _(\"Groups\"),\n        \"tags\": _(\"Tags\"),\n    }\n\n    for facet in h.facets():\n        if facet in default_facet_titles:\n            facets[facet] = default_facet_titles[facet]\n        else:\n            facets[facet] = facet\n\n    # Facet titles\n    for plugin in plugins.PluginImplementations(plugins.IFacets):\n        facets = plugin.dataset_facets(facets, \"dataset\")\n\n    data_dict = {\n        \"fq\": \"\",\n        \"facet.field\": list(facets.keys()),\n    }\n\n    if not getattr(g, \"user\", None):\n        data_dict[\"fq\"] = \"+capacity:public \" + data_dict[\"fq\"]\n\n    query = search.query_for(model.Package)\n    try:\n        if context.get(\"ignore_auth\") or c.userobj.sysadmin:\n            labels = None\n        else:\n            labels = lib_plugins.get_permission_labels().get_user_dataset_labels(\n                c.userobj\n            )\n\n        query.run(data_dict, permission_labels=labels)\n    except:\n        query.run(data_dict, permission_labels=None)\n\n    facets = query.facets\n\n    # organizations in the current search's facets.\n    group_names = []\n    for field_name in (\"groups\", \"organization\"):\n        group_names.extend(facets.get(field_name, {}).keys())\n\n    groups = (\n        model.Session.query(model.Group.name, model.Group.title)\n        .filter(model.Group.name.in_(group_names))\n        .all()\n        if group_names\n        else []\n    )\n    group_titles_by_name = dict(groups)\n    restructured_facets = {}\n    for key, value in facets.items():\n        restructured_facets[key] = {\"title\": key, \"items\": []}\n        for key_, value_ in value.items():\n            new_facet_dict = {\"name\": key_}\n            if key in (\"groups\", \"organization\"):\n                display_name = group_titles_by_name.get(key_, key_)\n                display_name = (\n                    display_name if display_name and display_name.strip() else key_\n                )\n                new_facet_dict[\"display_name\"] = display_name\n            else:\n                new_facet_dict[\"display_name\"] = key_\n            new_facet_dict[\"count\"] = value_\n            restructured_facets[key][\"items\"].append(new_facet_dict)\n    search_results[\"search_facets\"] = restructured_facets\n\n    return search_results\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.after_show","title":"after_show","text":"<pre><code>after_show(context, pkg_dict)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def after_show(self, context, pkg_dict):\n    \"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\n    return context, pkg_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.after_unload","title":"after_unload","text":"<pre><code>after_unload(service)\n</code></pre> <p>IPluginObserver interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def after_unload(self, service):\n    \"\"\"IPluginObserver interface requires reimplementation of this method.\"\"\"\n    pass\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.after_update","title":"after_update","text":"<pre><code>after_update(context, pkg_dict)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def after_update(self, context, pkg_dict):\n    \"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\n    return context, pkg_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.before_create","title":"before_create","text":"<pre><code>before_create(context, resource)\n</code></pre> <p>Extensions will receive this before a resource is created.</p> <p>Parameters:</p> Name Type Description Default <code>context</code> <code>dictionary</code> <p>The context object of the current request, this includes for example access to the <code>model</code> and the <code>user</code>.</p> required <code>resource</code> <code>dictionary</code> <p>An object representing the resource to be added to the dataset (the one that is about to be created).</p> required Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def before_create(self, context, resource):\n    u'''\n    Extensions will receive this before a resource is created.\n\n    :param context: The context object of the current request, this\n        includes for example access to the ``model`` and the ``user``.\n    :type context: dictionary\n    :param resource: An object representing the resource to be added\n        to the dataset (the one that is about to be created).\n    :type resource: dictionary\n    '''\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.before_delete","title":"before_delete","text":"<pre><code>before_delete(mapper, connection, instance)\n</code></pre> <p>Receive an object instance before that instance is PURGEd. (whereas usually in ckan 'delete' means to change the state property to deleted, so use before_update for that case.)</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def before_delete(self, mapper, connection, instance):\n    u'''\n    Receive an object instance before that instance is PURGEd.\n    (whereas usually in ckan 'delete' means to change the state property to\n    deleted, so use before_update for that case.)\n    '''\n    pass\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.before_index","title":"before_index","text":"<pre><code>before_index(pkg_dict)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def before_index(self, pkg_dict):\n    \"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\n    return pkg_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.before_load","title":"before_load","text":"<pre><code>before_load(plugin_class)\n</code></pre> <p>IPluginObserver interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def before_load(self, plugin_class):\n    \"\"\"IPluginObserver interface requires reimplementation of this method.\"\"\"\n    pass\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.before_show","title":"before_show","text":"<pre><code>before_show(resource_dict)\n</code></pre> <p>Extensions will receive the validated data dict before the resource is ready for display.</p> <p>Be aware that this method is not only called for UI display, but also in other methods, like when a resource is deleted, because package_show is used to get access to the resources in a dataset.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def before_show(self, resource_dict):\n    u'''\n    Extensions will receive the validated data dict before the resource\n    is ready for display.\n\n    Be aware that this method is not only called for UI display, but also\n    in other methods, like when a resource is deleted, because package_show\n    is used to get access to the resources in a dataset.\n    '''\n    return resource_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.before_unload","title":"before_unload","text":"<pre><code>before_unload(plugin_class)\n</code></pre> <p>IPluginObserver interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def before_unload(self, plugin_class):\n    \"\"\"IPluginObserver interface requires reimplementation of this method.\"\"\"\n    pass\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.before_update","title":"before_update","text":"<pre><code>before_update(mapper, connection, instance)\n</code></pre> <p>Receive an object instance before that instance is UPDATEed.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def before_update(self, mapper, connection, instance):\n    u'''\n    Receive an object instance before that instance is UPDATEed.\n    '''\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.create","title":"create","text":"<pre><code>create(entity)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def create(self, entity):\n    \"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\n    return entity\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.delete","title":"delete","text":"<pre><code>delete(entity)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def delete(self, entity):\n    \"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\n    return entity\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.edit","title":"edit","text":"<pre><code>edit(entity)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def edit(self, entity):\n    \"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\n    return entity\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.group_facets","title":"group_facets","text":"<pre><code>group_facets(facets_dict, group_type, package_type)\n</code></pre> <p>IFacets interface requires reimplementation of all facets-related methods</p> <p>In this case we do not really need to override this method, but need to satisfy IFacets.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def group_facets(\n    self, facets_dict: typing.OrderedDict, group_type: str, package_type: str\n) -&gt; typing.OrderedDict:\n    \"\"\"IFacets interface requires reimplementation of all facets-related methods\n\n    In this case we do not really need to override this method, but need to satisfy\n    IFacets.\n\n    \"\"\"\n\n    return facets_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.organization_facets","title":"organization_facets","text":"<pre><code>organization_facets(facets_dict, group_type, package_type)\n</code></pre> <p>IFacets interface requires reimplementation of all facets-related methods</p> <p>In this case we do not really need to override this method, but need to satisfy IFacets.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def organization_facets(\n    self, facets_dict: typing.OrderedDict, group_type: str, package_type: str\n) -&gt; typing.OrderedDict:\n    \"\"\"IFacets interface requires reimplementation of all facets-related methods\n\n    In this case we do not really need to override this method, but need to satisfy\n    IFacets.\n\n    \"\"\"\n\n    return facets_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.read","title":"read","text":"<pre><code>read(entity)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def read(self, entity):\n    \"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\n    return entity\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils--this-file-holds-modules-used","title":"this file holds modules used","text":""},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils--by-emc_dcpr-plugin-for-different","title":"by emc_dcpr plugin for different","text":""},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils--functionalities-these-modules-are","title":"functionalities. these modules are","text":""},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils--different-from-helper-functions-as","title":"different from helper functions as","text":""},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils--they-arent-used-by-the-ui","title":"they aren't used by the UI.","text":""},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils--_1","title":"SAEOSS Portal","text":""},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils.handle_search","title":"handle_search","text":"<pre><code>handle_search(search_params)\n</code></pre> <p>we use combine -AND operator- search params when they are from the same category \"e.g. 2 different organizations\", and use OR opertaor for different categories.</p> Source code in <code>ckanext/saeoss/plugins/utils.py</code> <pre><code>def handle_search(search_params):\n    \"\"\"\n    we use combine -AND operator-\n    search params when they are from\n    the same category \"e.g. 2 different\n    organizations\", and use OR opertaor\n    for different categories.\n    \"\"\"\n    # \\[.*\\]\n    # lstrip removes leading spaces\n    search_param = search_params.get(\"fq\", \"\").lstrip()\n\n    fq_list = skip_brackets(search_param)\n\n    # fq_list = search_param.split()  # the default is space\n    fq_dict = {}\n    if len(fq_list) &lt;= 1:\n        return search_param\n    for idx, item in enumerate(fq_list):\n        # try:\n        #     key_value_pair = item.split(\":\")\n        #     if key_value_pair[0] not in fq_dict:\n        #         fq_dict[key_value_pair[0]] = key_value_pair[1]\n        # except:\n        #     continue\n\n        try:\n            if idx &gt; 0:\n                fq_list[idx] = \" OR \" + fq_list[idx] + \" \"\n\n        except:\n            continue\n    if len(fq_list) &gt; 0:\n        search_params[\"fq\"] = \" \".join(item for item in fq_list)\n\n    return search_params[\"fq\"]\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils.skip_brackets","title":"skip_brackets","text":"<pre><code>skip_brackets(search_param)\n</code></pre> <p>split the search param while skipping the spaces between brackets and between doubled quotes (e.g. the sasdi theme \"Administrative boundaries 1\" )</p> Source code in <code>ckanext/saeoss/plugins/utils.py</code> <pre><code>def skip_brackets(search_param: str):\n    \"\"\"\n    split the search param while\n    skipping the spaces between\n    brackets and between\n    doubled quotes (e.g.\n    the sasdi theme\n    \"Administrative boundaries 1\"\n    )\n    \"\"\"\n    lbracket, rbracket = \"[\", \"]\"\n    brackets_num = 0\n    dbl_quotes_num = 0\n    sep, sep_idx = \" \", [0]\n\n    for idx, char in enumerate(search_param):\n        if char == lbracket:\n            brackets_num += 1\n        elif char == rbracket:\n            brackets_num -= 1\n        elif brackets_num &lt; 0:\n            return search_param\n\n        elif char == '\"' and dbl_quotes_num == 0:\n            dbl_quotes_num += 1\n\n        elif char == '\"' and dbl_quotes_num == 1:\n            dbl_quotes_num -= 1\n\n        elif brackets_num == 0 and dbl_quotes_num == 0 and char == sep:\n            sep_idx.append(idx)\n    # we need to slice\n    sep_idx.append(len(search_param))\n    # at this point the num of brackets should be 0\n    if brackets_num &gt; 0:\n        return search_param\n\n    return [search_param[i:j].strip(sep) for i, j in zip(sep_idx, sep_idx[1:])]\n</code></pre>"},{"location":"developer/manual/project-scrum-board/","title":"SCRUM Board","text":"<p>The Project SCRUM board serves a vital role in managing and tracking progress of tickets, and testing of functionalities. The &amp; columns of the board represent the life cycle of the ticket, from creation to completion.  Teams plan weekly sprints assigning tickets to be worked on to team members, and discussing next tickets to be worked on in the following sprint.</p> <p>In general this board is reviewed weekly in discussions with the client to ensure the project is steered in the preferred direction of development. Once a ticket has been placed in the ready column it is the responsibility of the client to test that the functionalities have been implemented and are working in the desired manner. If the functionality is found to be satisfactory the client may close the ticket, or move it to the done column.  </p> <p>The SCRUM board for SAEOSS-portal can be found Here.</p> <p>NOTE: The project SCRUM board is protected and users need to request access from their administrator or team lead to view the board.</p> <p>NOTE: The order of issues on the SCRUM board will dictate the order of working on the tickets, meaning if the developer is blocked on a ticket he will default to working on the next ticket in the line.</p> <p></p>"},{"location":"developer/manual/project-scrum-board/#scrum-board-columns","title":"SCRUM Board Columns","text":"<ul> <li> <p>No Status - Tickets not ready to be worked on yet or have been reverted due to a technical blocker. This column is also referred to as the backlog and serves as a placeholder for all tickets which need to be addressed.</p> </li> <li> <p>To Be Estimated - This column serves as a planning column where tickets are moved when planning the weekly sprint. Tickets are sized and assigned to team members.</p> </li> <li> <p>Todo - These are tickets which were planned for the current week sprint and are tickets the development team will draw work from.</p> </li> <li> <p>In Progress - These are tickets the development team is currently working on.</p> </li> <li> <p>Review - Tickets in review are usually addressed by internal testers to ensure the functionalities have been correctly implemented and are functioning as expected.</p> </li> <li> <p>Ready - Tickets in the ready column are tickets which have passed internal testing and are made available for the client to review. Once the client has found the work done to resolve the ticket satisfactory they can close the ticket with a comment.</p> </li> <li> <p>Done - This column is reserved for tickets which have been implemented, tested and ultimately accepted by the client, marking development of the ticket as done.</p> </li> </ul> <p>NOTE: If a ticket is deemed to be incomplete or not satisfactory, a comment should be made and the ticket should be moved back to the \"No Status\" column. Accompanying screenshots and comments should clearly describe why development is incomplete.</p>"},{"location":"developer/manual/public/","title":"Public","text":"<p>This is a CKAN file storage system directory where publicly accessible files, including customised assets, are stored.  The resources (CSS for styling, JS for JavaScript functionality, and images for graphics) in this directory are often  part of the theme or extension to modify the default CKAN interface.</p>"},{"location":"developer/manual/scheming/","title":"Scheming","text":"<p>This CKAN extension provides a way to configure and share metadata schemas. </p> <p><code>dataset_schema.yaml</code> : to custom dataset schema.</p> <p><code>presets.yaml</code>: a preset specifies a set of default values for other field keys. They allow reuse of definitions for  validation and snippets for common field types.</p>"},{"location":"developer/manual/test_local/","title":"Test Locally","text":"<p>Testing uses some additional configuration:</p> <ul> <li>The <code>docker/docker-compose.dev.yml</code> file has an additional <code>ckan-test-db</code> service, with a DB that is uses solely   for automated testing.</li> <li>The  <code>docker/ckan-test-settings.ini</code> file defines the test settings. It must be explicitly passed as the config   file to use when running the tests</li> </ul> <p>To run the tests you will need to:</p> <ol> <li>Install the development dependencies beforehand, as the docker images do not have them. Run:</li> </ol> <pre><code>docker exec -ti {container-name} poetry install\n</code></pre> <ol> <li>Initialize the db - this is only needed the first time (the dev stack uses volumes to persist the DB)</li> </ol> <pre><code>docker exec -ti saeoss-ckan-web-1 poetry run ckan --config docker/ckan-test-settings.ini db init\ndocker exec -ti saeoss-ckan-web-1 poetry run ckan --config docker/ckan-test-settings.ini harvester initdb\ndocker exec -ti saeoss-ckan-web-1 poetry run ckan --config docker/ckan-test-settings.ini db upgrade -p saeoss\n</code></pre> <ol> <li>When there are model changes you will need to upgrade the DB too. Run this:</li> </ol> <pre><code>docker exec -ti saeoss-ckan-web-1 poetry run ckan --config docker/ckan-test-settings.ini db upgrade -p saeoss\n</code></pre> <ol> <li>Run the tests with <code>pytest</code>. We use markers to differentiate between unit and integration tests. Run them like this:</li> </ol> <pre><code># run all tests\ndocker exec -ti saeoss-ckan-web-1 poetry run pytest --ckan-ini docker/ckan-test-settings.ini\n\n# run only unit tests\ndocker exec -ti saeoss-ckan-web-1 poetry run pytest --ckan-ini docker/ckan-test-settings.ini -m unit\n\n# run only integration tests\ndocker exec -ti saeoss-ckan-web-1 poetry run pytest --ckan-ini docker/ckan-test-settings.ini -m integration\n</code></pre>"},{"location":"developer/manual/wsgi/","title":"WSGI","text":"<p>WSGI is the Web Server Gateway Interface. It is a specification that describes how a web server (like Apache or NGINX) communicates  with web applications (Flask, Django, FastAPI, etc), and how web applications can be chained together to process one request.</p> <p>Since SAEOSS is based on CKAN, which is based on Flask, it also utilizes WSGI, which is configured in wsgi.py.</p> <p>These are the steps in how SAEOSS is getting its configuration file: 1. By default, SAEOSS will get the configuration file (<code>.ini</code> file, as in this file). 2. If it does not exist, it will try getting the configuration from <code>ckan.ini</code> file, in the same directory as the <code>wsgi.py</code> file. 3. If the previous files does not exist, it will raise <code>RuntimeError</code>.</p> <p>If the configuration file exist, it will then loaded to be used when running SAEOSS.</p>"},{"location":"devops/","title":"DevOps Documentation","text":"<p>This section contains all documentation relevant to DevOps procedures.</p> <p>The devops content is divided into three sections:</p> <ul> <li>The devops guide, which describes common workflows for deployment and management of running instances in a tutorial format.</li> <li>The devops manual, which provides links and references to deployment configuration files, frameworks and deployment systems used etc.</li> </ul>"},{"location":"devops/guide/","title":"DevOps Guide","text":""},{"location":"devops/guide/#re-building-containers","title":"Re-building containers","text":"<p>Containers need to be rebuilt if changes have been made in <code>SAEOSS-Portal/pyproject.toml</code> or if a new sql migration has been added in <code>ckanext/saeoss/migration</code></p> <ol> <li>Cd into <code>SAEOSS-Portal/docker</code></li> <li>Run <code>./compose.py --compose-file docker-compose.yml --compose-file docker-compose.dev.yml down</code></li> <li>Run <code>./build.sh</code></li> <li>Run <code>./compose.py --compose-file docker-compose.yml --compose-file docker-compose.dev.yml up</code></li> <li>Run <code>docker exec -it saeoss_ckan-web_1 poetry run ckan search-index rebuild</code></li> </ol>"},{"location":"devops/guide/#restarting-saeoss_ckan-web_1","title":"Restarting saeoss_ckan-web_1","text":"<p>Container needs to be restarted if a new template file is added to override ckan defaults for the change to reflect</p> <ol> <li>Open up a terminal</li> <li>Run <code>docker restart saeoss_ckan-web_1</code></li> </ol>"},{"location":"devops/guide/#refresh-pycsw-materialized-view","title":"Refresh pycsw materialized view","text":"<p>This needs to be run periodically (once per hour is likely enough).</p> <ol> <li>Run <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan saeoss pycsw refresh-materialized-view</code></li> </ol>"},{"location":"devops/guide/#drop-pycsw-materialized-view","title":"Drop pycsw materialized view","text":"<ol> <li>Run <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan saeoss pycsw drop-materialized-view</code></li> </ol>"},{"location":"devops/guide/#common-errors-in-containers","title":"Common errors in containers","text":""},{"location":"devops/guide/#datasets-have-disappeared-from-the-search-page","title":"Datasets have disappeared from the search page","text":"<p>Solr index needs be rebuilt</p> <p>Steps to fix</p> <ol> <li>Open up a terminal</li> <li>Run <code>docker exec -it saeoss_ckan-web_1 poetry run ckan search-index rebuild</code></li> </ol>"},{"location":"devops/guide/#sql-rollback-error","title":"SQL Rollback error","text":"<p>When you encounter the following error <code>Can\u2019t reconnect until invalid transaction is rolled back. Please rollback() fully before proceeding</code>:</p> <ol> <li>Open up a terminal</li> <li>Run <code>docker stop saeoss_ckan-web_1</code></li> <li>Run <code>docker stop saeoss_ckan-db_1</code></li> <li>Run <code>docker start saeoss_ckan-web_1</code></li> <li>Run <code>docker start saeoss_ckan-db_1</code></li> </ol>"},{"location":"devops/guide/#refresh-mv-not-working","title":"Refresh mv not working","text":"<p>Running docker exec -ti saeoss_ckan-web_1 poetry run ckan saeoss pycsw refresh-materialized-view produces error</p> <p>Steps to reproduce</p> <ol> <li>When <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan saeoss pycsw create-materialized-view</code> is run and no tags are saved within a dataset, the materialized view gets created as a table instead</li> <li>This in turn produces sql error when trying to refresh</li> </ol> <p>Solution</p> <ol> <li>In the postgres editor run  <code>DROP TABLE saeoss_pycsw_view;</code></li> <li>Add tags to datasets</li> <li>Run <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan saeoss pycsw create-materialized-view</code></li> </ol>"},{"location":"devops/guide/#there-is-no-data-in-pycsw","title":"There is no data in pycsw","text":"<ol> <li>Connect to the database hosted in container <code>saeoss_ckan-db_1</code></li> <li>RUN sql script <code>DROP table saeoss_pycsw_view</code></li> <li>Run the following sql script (script location can also be found at <code>ckanext/saeoss/templates/pycsw/pycsw_view.sql</code>) <pre><code>CREATE MATERIALIZED VIEW IF NOT EXISTS saeoss_pycsw_view AS\n    WITH\n    cte_extras AS (\n        SELECT\n               p.id,\n               p.title,\n               p.name,\n               p.metadata_created,\n               p.metadata_modified,\n               p.notes,\n               p.author,\n               p.maintainer,\n               g.title AS org_name,\n               json_object_agg(pe.key, pe.value) AS extras,\n               array_agg(DISTINCT t.name) AS tags,\n               (select json_build_object('title', res.name,'description', res.description,'type', res.format, 'href', res.url)::text) As links\n            FROM package AS p\n            JOIN package_extra AS pe ON p.id = pe.package_id\n            JOIN \"group\" AS g ON p.owner_org = g.id\n            JOIN package_tag AS pt ON p.id = pt.package_id\n            JOIN tag AS t on pt.tag_id = t.id\n            JOIN \"resource\" AS res on p.id = res.package_id\n        WHERE p.state = 'active'\n        -- AND p.private = false        \n        GROUP BY p.id, g.title, res.id\n\n        )\n    SELECT\n           c.id AS identifier,\n           c.name AS dataset_name,\n           'csw:Record' AS typename,\n           'http://www.isotc211.org/2005/gmd' AS schema,\n           'local' AS mdsource,\n           c.metadata_created AS insert_date,\n           NULL AS xml,\n           NULL AS metadata,\n           NULL AS metadata_type,\n           concat_ws(' ', c.name, c.notes) AS anytext,\n           'english' AS language,\n           c.title AS title,\n           c.notes AS abstract,\n           concat_ws(', ', VARIADIC c.tags) AS keywords,\n           NULL AS keywordstype,\n           NULL AS format,\n           NULL AS source,\n           NULL AS version,\n           c.metadata_modified AS date_modified,\n           'http://purl.org/dc/dcmitype/Dataset' AS type,\n           ST_AsText(ST_GeomFromGeoJSON(c.extras-&gt;&gt;'spatial')) AS wkt_geometry,\n           ST_GeomFromGeoJSON(c.extras-&gt;&gt;'spatial')::geometry(Polygon, 4326) AS wkb_geometry,\n           c.name AS title_alternate,\n           c.extras-&gt;&gt;'doi' AS doi,\n           NULL as date_revision,\n           c.metadata_created AS date_creation,\n           NULL AS date_publication,\n           c.org_name AS organisation,\n           NULL AS securityconstraints,\n           NULL AS parentidentifier,\n           cast(cast(c.extras-&gt;&gt;'topic_and_saeoss_themes' as json)-&gt;&gt;0 as json)-&gt; 'iso_topic_category' AS topiccategory,\n           c.extras-&gt;&gt;'dataset_language' as resourcelanguage,\n           NULL AS geodescode,\n           NULL AS denominator,\n           NULL AS distancevalue,\n           NULL AS distanceuom,\n           cast(cast(c.extras-&gt;&gt;'metadata_reference_date_and_stamp' as json)-&gt;&gt;0 as json)-&gt; 'reference' AS date,\n           cast(cast(c.extras-&gt;&gt;'metadata_reference_date_and_stamp' as json)-&gt;&gt;0 as json)-&gt; 'reference' AS time_begin,\n           cast(cast(c.extras-&gt;&gt;'metadata_reference_date_and_stamp' as json)-&gt;&gt;0 as json)-&gt; 'reference' AS time_end,\n           cast(cast(c.extras-&gt;&gt;'metadata_reference_date_and_stamp' as json)-&gt;&gt;0 as json)-&gt; 'reference_date_type' AS reference_date_type,\n           NULL AS servicetype,\n           NULL AS servicetypeversion,\n           NULL AS operation,\n           NULL AS couplingtype,\n           NULL AS operateson,\n           NULL AS operatesonidentifier,\n           NULL AS operatesonname,\n           NULL AS degree,\n           NULL AS accessconstraints,\n           NULL AS otherconstraints,\n           NULL AS classification,\n           NULL AS conditionapplyingtoaccessanduse,\n            NULL AS edition,\n           c.extras-&gt;&gt;'lineage' AS lineage_statement,\n           c.extras-&gt;&gt;'lineage' AS dataset_lineage,\n           NULL AS responsiblepartyrole,\n           NULL AS specificationtitle,\n           NULL AS specificationdate,\n           NULL AS specificationdatetype,\n           c.author AS creator,\n           c.maintainer AS publisher,\n           NULL AS contributor,\n           NULL AS relation,\n           NULL AS platform,\n           NULL AS instrument,\n           NULL AS sensortype,\n           NULL AS cloudcover,\n           NULL AS bands,\n           Null As links, -- should be coming from res\n           cast(c.extras-&gt;&gt;'spatial' as json) AS bounding_geojson,\n           cast(cast(c.extras-&gt;&gt;'spatial_parameters' as json)-&gt;&gt;0 as json)-&gt; 'spatial_reference_system' AS crs,\n           cast(cast(c.extras-&gt;&gt;'spatial_parameters' as json)-&gt;&gt;0 as json)-&gt; 'equivalent_scale' AS equivalent_scale\n\n    FROM cte_extras AS c\nWITH DATA;\n</code></pre></li> <li>Run <code>REFRESH MATERIALIZED VIEW CONCURRENTLY saoess_pycsw_view;</code></li> </ol>"},{"location":"devops/manual/","title":"DevOps Documentation","text":""},{"location":"devops/manual/#containers-used","title":"Containers Used","text":""},{"location":"devops/manual/#saeoss_ckan-web_1","title":"saeoss_ckan-web_1","text":"<p>This container is used to run the main application. All back end and front end logic can be found here. The ckan framework is installed in this container</p>"},{"location":"devops/manual/#saeoss_ckan-background-worker_1","title":"saeoss_ckan-background-worker_1","text":"<p>This container is used to create jobs that run in the 'background', i.e. asynchronously without blocking the main application</p>"},{"location":"devops/manual/#saeoss_ckan-harvesting-fetcher_1","title":"saeoss_ckan-harvesting-fetcher_1","text":"<p>This container provides a common harvesting framework</p>"},{"location":"devops/manual/#saeoss_ckan-harvesting-runner_1","title":"saeoss_ckan-harvesting-runner_1","text":"<p>This container provides the logic for running harvesting jobs</p>"},{"location":"devops/manual/#saeoss_ckan-mail-sender_1","title":"saeoss_ckan-mail-sender_1","text":"<p>This container is used to send emails from the application</p>"},{"location":"devops/manual/#saeoss_ckan-harvesting-gatherer_1","title":"saeoss_ckan-harvesting-gatherer_1","text":"<p>This container provides the logic for gathering data from harvester jobs</p>"},{"location":"devops/manual/#saeoss_datastore-db_1","title":"saeoss_datastore-db_1","text":"<p>This container contains the database that used for the datastore</p>"},{"location":"devops/manual/#saeoss_ckan-db_1","title":"saeoss_ckan-db_1","text":"<p>This container contains the database that used for the main application</p>"},{"location":"devops/manual/#saeoss_redis_1","title":"saeoss_redis_1","text":"<p>This container runs a redis server which is needed for ckan</p>"},{"location":"devops/manual/#saeoss_datastore-test-db_1","title":"saeoss_datastore-test-db_1","text":"<p>This container contains the database that used to run tests for the datastore</p>"},{"location":"devops/manual/#saeoss_ckan-test-db_1","title":"saeoss_ckan-test-db_1","text":"<p>This container contains the database that used to run tests for the main application</p>"},{"location":"devops/manual/#saeoss_csw-harvest-target_1","title":"saeoss_csw-harvest-target_1","text":"<p>This container provides the service to harvest data from a target specified</p>"},{"location":"devops/manual/#saeoss_ckan-datapusher_1","title":"saeoss_ckan-datapusher_1","text":"<p>This container provides a standalone web service that automatically downloads any tabular data files like CSV or Excel from the site's resources when they are added, parses them to pull out the actual data, then uses the DataStore API to push the data into the site's DataStore.</p>"},{"location":"devops/manual/#saeoss_pycsw_1","title":"saeoss_pycsw_1","text":"<p>This container runs a pycsw server which serves as an API to share data on the platform</p>"},{"location":"devops/manual/#saeoss_solr_1","title":"saeoss_solr_1","text":"<p>This container runs a solr server that is needed for ckan to index data and run spatial queries</p>"},{"location":"devops/manual/#sdlc","title":"SDLC","text":"<p>A systematic approach that generates a structure for the developer to design, create and deliver high-quality software based on customer requirements and needs. The primary goal of the SDLC process is to produce cost-efficient and high-quality products. The process comprises a detailed plan that describes how to develop, maintain, and replace the software.</p> <ol> <li>Identify the Current Problems</li> </ol> <p>This stage of the SDLC means getting input from all stakeholders, including customers, sales people, industry experts, and programmers. Learn the strengths and weaknesses of the current system with the goal of improvement.</p> <ol> <li>Plan</li> </ol> <p>In this stage of the SDLC, the team determines the costs and resources required for implementing the analysed requirements. Also detailing the risks involved and providing sub-plans to mitigate those risks.</p> <p>The team must determine the feasibility of the project and how they can successfully implement the project with the lowest risk in mind.</p> <ol> <li>Design</li> </ol> <p>This phase of the SDLC starts by turning the software specifications into a design plan called the Design Specification. All stakeholders then review this plan and offer feedback and suggestions. It\u2019s crucial to have a plan for collecting and incorporating stakeholder input into this document. Failure at this stage will almost certainly result in cost overruns at best and the total collapse of the project at worst.</p> <ol> <li>Build</li> </ol> <p>At this stage, the actual development starts. It\u2019s important that every developer sticks to the agreed blueprint. Also, make sure you have proper guidelines in place about the code style and practices.</p> <p>For example, define a nomenclature for files or define a variable naming style such as camelCase. This will help your team to produce organized and consistent code that is easier to understand but also to test during the next phase.</p> <ol> <li>Code Test</li> </ol> <p>In this stage, we test for defects and deficiencies. We fix those issues until the product meets the original specifications.</p> <p>In short, we want to verify if the code meets the defined requirements.</p> <ol> <li>Software Deployment</li> </ol> <p>At this stage, the goal is to deploy the software to the production environment so users can start using the product. However, many organizations choose to move the product through different deployment environments such as a testing or staging environment.</p> <p>This allows any stakeholders to safely play with the product before releasing it to the market. Besides, this allows any final mistakes to be caught before releasing the product.</p>"},{"location":"devops/manual/#continuous-integration","title":"Continuous Integration","text":"<p>Continuous integration refers to the build and unit testing stages of the software release process. Every revision that is committed triggers an automated build and test</p>"},{"location":"devops/manual/#testing-deployments","title":"Testing Deployments","text":""},{"location":"devops/manual/#backend-orchestration","title":"Backend Orchestration","text":""},{"location":"devops/manual/#deployments","title":"Deployments","text":""},{"location":"devops/manual/#kubernetes","title":"Kubernetes","text":""},{"location":"user/","title":"For Users","text":"<p>This is the homepage for all user-related documentation.</p> <p>The user content is divided into three sections:</p> <ul> <li>The quickstart tutorial, which aims to get you familiar with the basics of the platform in around 5 minutes.</li> <li>The user guide, which describes common workflows in a tutorial format.</li> <li>The user manual, which describes each page of the user interface and what the various options on that page do.</li> <li>The metadata standard, which explains the all of the metadata elements utilised by the portal.</li> </ul>"},{"location":"user/guide/","title":"Guide","text":"<p>The guide section of the documentation provides short narrative/workflow based tutorials on the functionalities of the SAEOSS-Portal platform. The guide in intended to function as a collection of workflow based tutorials that a user can follow to obtain the necessary knowledge to perform mandated tasks. If you prefer a more detailed description of every page, you may prefer to work through our User Manual</p>"},{"location":"user/guide/#index","title":"Index","text":"<ul> <li>Registering: This page will show you how to register on the platform.</li> <li>Logging In: This page will show you how to log in to the platform.</li> <li>Forgot Password: This page will help you to reset your password in case it is forgotten.</li> <li>Profile Settings: This page will show you how to manage your profile on the platform.</li> <li>Organisation Management: This page will show you how to manage organisations on the platform.</li> <li>Search Metadata: This page will show you how to search for metadata on the platform.</li> <li>Upload Metadata: This page will show you how to upload metadata to the platform.</li> <li>Edit Metadata: This page will show you how to edit metadata on the platform.</li> <li>Map: This page will show you how visualise metadata on the map.</li> <li>Report Issues: This page will show you how to open tickets about issues you may encounter.</li> <li>Log Out: This page will help you how to logout from the site.</li> <li>Help Page: This page will show you how to access this documentation from the platform.</li> </ul>"},{"location":"user/guide/create-metadata/","title":"Upload/Create Metadata","text":"<p>Applicable roles: Metadata editor, metadata publisher and system administrator</p>"},{"location":"user/guide/create-metadata/#create-metadata-record-using-system-ui","title":"Create metadata record using System UI","text":"<p>There are two methods for creating a metadata record in an organisation using the system's user interface.</p>"},{"location":"user/guide/create-metadata/#method-1","title":"Method 1","text":"<p>Navigate to <code>Metadata</code> and click on the <code>Add metadata record</code> button.</p> <p></p> <p>This will take you to the form that needs to be completed in order to create metadata record. Fill in all the necessary information about the record. All fields marked with an asterisk (*) are mandatory. The information you add will become the information that is available on the site about the record you are adding. When adding the metadata record thumbnail, make sure the image URL is a public image link and not a private one. Remember to also make sure that the image ratio is 1:1 for the best results.</p> <p></p>"},{"location":"user/guide/create-metadata/#method-2","title":"Method 2","text":"<p>Navigate to your profile and click on the <code>Add metadata record</code> button then fill out the form.</p> <p></p> <p>If you have the permissions to upload metadata records within multiple organisations, you will need to choose the <code>Responsible organisation Name</code> to ensure the record is published within the correct organisation.</p> <p></p>"},{"location":"user/guide/create-metadata/#create-metadata-record-using-xml-upload","title":"Create metadata record using XML upload","text":"<p>Another method to create a metadata record in an organisation is via an XML file upload.</p> <p>On the metadata page, click on the <code>Add metadata record from xml file</code> button.</p> <p></p> <p>Then select the XML file on your local machine.</p> <p>The xml file should look something like this:</p> <p></p>"},{"location":"user/guide/edit-metadata/","title":"Edit Metadata","text":"<p>Applicable roles: Metadata editor, metadata publisher and system administrator</p>"},{"location":"user/guide/edit-metadata/#edit-metadata-record-using-system-ui","title":"Edit metadata record using system UI","text":"<p>Navigate to your profile, but clicking on 1\ufe0f\u20e3 the <code>Profile</code> drop-down menu and the clicking on 2\ufe0f\u20e3 <code>Profile</code>:</p> <p></p> <p>Then select the metadata record you want to edit:</p> <p></p> <p>This will redirect you to the metadata record, on this page click on <code>Manage</code> to edit the record:</p> <p></p> <p>You will be redirected to the <code>Edit metadata</code> page, here you can make changes to the metadata record. If you would like to edit the associated resource(s) of the record click on 1\ufe0f\u20e3 the <code>Resources</code> tab, and if you do not wish to make changes click on 2\ufe0f\u20e3 the <code>View metadata record</code> button.</p> <p></p> <p>Once you have made your desired changes, you can scroll down and then click on 1\ufe0f\u20e3 the <code>Update Dataset</code> button. If you would like to remove the record you can click on 2\ufe0f\u20e3 the <code>Delete</code> button.</p> <p></p>"},{"location":"user/guide/forgot-password/","title":"User Guide: Forgot Password","text":"<p>The Forgot Password feature provides a convenient way for you to reset your password in case you forget it. This guide will walk you through the steps to initiate and complete the password reset process using the <code>Forgot your Password</code> button.</p> <p></p> <p>Click on the <code>Forgot your Password</code> button on the login page. After clicking the button, you will be redirected to the <code>Reset Password</code> page.</p> <p></p> <p>On the <code>Reset Password</code> page, you will find a form with a field to provide either a registered email or username. Enter either your email or username, and click on the <code>Request Reset</code> button.</p> <p>The system will initiate the password reset process. Instructions will be sent to the provided email address or associated account on how to proceed.</p>"},{"location":"user/guide/help/","title":"Help Page User Manual","text":"<p>Welcome to the Help Page of the SAEOSS-Platform! This user manual will guide you through how to utilise this documentation site effectively to gain insights into the platform's functionalities and workflows.</p>"},{"location":"user/guide/help/#accessing-the-help-page","title":"Accessing the Help Page","text":"<p>To access the Help Page, you can usually click on the 1\ufe0f\u20e3 <code>Help</code> option available in the navigation menu. Upon clicking on the help you will be redirected to the SAEOSS documentation.</p> <p></p>"},{"location":"user/guide/help/#understanding-the-help-page","title":"Understanding the Help Page","text":"<p>Purpose: The Help Page serves as a comprehensive documentation site where users can learn about all the features and functionalities of the SAEOSS-Platform. It contains detailed information and guides on how to navigate through various workflows and tasks on the platform.</p>"},{"location":"user/guide/logging-in/","title":"Logging In","text":"<p>Applicable roles: All registered users.</p> <p>To log in to the site, click on the <code>LOG IN</code> button in the top-right corner of the site.</p> <p></p> <p>On the Login Page, enter your username and password in the relevant fields. Then click on the <code>Login</code> button.</p> <p></p> <p>After that you will be redirected to your news feed on your dashboard.</p> <p></p>"},{"location":"user/guide/logout/","title":"Logout User Guide","text":"<p>Logging out of the account is a simple process that ensures the security of your session. Here is a quick guide to help you through the logout procedure:</p> <p>Click on the user profile icon or name to reveal the user-related options.</p> <p></p> <p>In the dropdown menu, click on the <code>Logout</code> option. After clicking Logout, the system will process the request and redirect you to the logout page.</p> <p></p> <p>On the logout page, you will find convenient buttons to perform further actions.</p> <p>And that is it! You will be successfully logged out and can now explore other sections or return to the system when needed. If you have any questions or require assistance, don't hesitate to reach out to our support team.</p>"},{"location":"user/guide/map/","title":"Map User Guide","text":""},{"location":"user/guide/map/#overview","title":"Overview","text":"<p>The <code>Map</code> interface on the SAEOSS-Portal provides users with a visual representation of Earth Observation datasets through polygon footprints, showcasing the boundaries covered by respective metadata records. This guide will help you navigate and utilise the various features available on the Map tab.</p> <p></p>"},{"location":"user/guide/map/#explore-metadata-records","title":"Explore Metadata Records","text":"<p>Click on the Right Arrow to open a side panel with a list of available metadata records and search filters.</p> <ol> <li> <p>Search Filters: Use the search filters to explore metadata records based on content, time, and location.</p> <ul> <li>Search by Keyword</li> <li>Search by Date</li> </ul> <p></p> </li> </ol>"},{"location":"user/guide/map/#visualise-geographical-areas","title":"Visualise Geographical Areas","text":"<ul> <li> <p>Click on a metadata record to visualise its corresponding geographic area on the map.</p> </li> <li> <p>The highlighted area provides a visual reference, and detailed information can be obtained by clicking within it.</p> </li> </ul>"},{"location":"user/guide/map/#zoom-in-and-out","title":"Zoom In and Out","text":"<p>Utilise the <code>Zoom</code> functionality to get a closer or broader view of the map.</p>"},{"location":"user/guide/map/#choose-base-map","title":"Choose Base Map","text":"<p>Select from various Base Map Options to customise your viewing experience.</p> <p>Base Map Options</p> <ol> <li> <p>OpenStreetMap Street View: Traditional street map displaying road networks and landmarks.</p> <p></p> </li> <li> <p>OpenStreetMap Hybrid View: Combined satellite imagery with street map information.</p> <p></p> </li> <li> <p>OpenStreetMap Pioneer View: Designed for outdoor activities, highlighting topographic details.</p> <p></p> </li> <li> <p>OpenStreetMap Neighbourhood View: Emphasises localised mapping for neighbourhood-level details.</p> <p></p> </li> </ol>"},{"location":"user/guide/map/#conclusion","title":"Conclusion","text":"<p>The Map interface empowers users to interact with spatial Earth Observation datasets effectively. Navigate through metadata records, visualise geographic areas, and customise your map view for a comprehensive and enriching experience. Feel free to explore and contribute to the data-rich world of the SAEOSS-Portal!</p>"},{"location":"user/guide/opening-issues/","title":"GitHub Issues/Tickets","text":"<p>This GitHub project repository serves as a project planning and progress tracking platform for the development teams and clients. This repository is public and for anyone to view. The repository can be accessed here.</p>"},{"location":"user/guide/opening-issues/#tickets","title":"Tickets","text":"<p>Tickets on the SAEOSS-Portal GitHub Project Board are created first as issues and converted into tickets to work on during the sprint at the SAEOSS-Portal catch-up meeting. This workflow ensures work required by the client gets done as well as allows the opportunity to clear up any doubts regarding work that needs to be done. When issues are created, a clear description of what needs to happen is required as well as any accompanying screenshots or videos. If a developer has any doubt, they can simply comment on the ticket, and the creator of the ticket, as well as any assigned developers, will be notified via email.</p>"},{"location":"user/guide/opening-issues/#creating-new-github-issuestickets","title":"Creating new Github issues/tickets","text":"<p>When encountering a new issue with the platform, it is best practice to create an issue or ticket on the SAEOSS-Portal GitHub Issues Page. This ensures developers are made aware of the issue at hand and can work to get the problem fixed as soon as possible.</p>"},{"location":"user/guide/opening-issues/#templates","title":"Templates","text":"<p>A standard workflow for creating tickets is advised to make sure enough information about the problem is related, cutting down on time developers would spend trying to understand the issue at hand.</p> <p>To ensure this, a general approach has been created to make sure users are able to create a GitHub ticket with as much detail as possible. The following template can be copied and used to create a new ticket.</p> <p></p> <p>\ud83d\udea9 GitHub supports various forms of media, including: Markdown syntax, images, and video. All of these can be used to better and more accurately describe your issue. Read more</p>"},{"location":"user/guide/opening-issues/#workflow-for-creating-github-issues","title":"Workflow for creating GitHub issues","text":"<p>To report an issue, users should first access the SAEOSS-Portal Project Page. Ensure you are logged in to GitHub, as users who do not have a GitHub account will not be able to create new issues. If you do not have a GitHub account you can create a free account.</p> <p></p> <ol> <li> <p>From the navigation pane select <code>Issues</code> to display all the current GitHub issue tickets.          Make sure to study the issues page to determine if the issue has been reported by another user before creating a new issue.     </p> </li> <li> <p>If the issue has not been reported, select the create new button.     </p> </li> <li> <p>Copy the template and complete the template while taking care to provide as much detail as possible. Remember to add a descriptive title and screenshots.     </p> </li> <li> <p>Preview the ticket by selecting the preview tab. This will generate the ticket from markdown syntax (if used) and will also display images, giving you a view of what the completed ticket will look like.     </p> </li> <li> <p>When satisfied, select submit from the green button at the bottom. Your issue has now been created and will appear at the top of the issues with a \"#\" number assigned to it.</p> </li> </ol>"},{"location":"user/guide/organisation-management/","title":"Organisation Management","text":"<p>Applicable roles: System administrator and organisational publisher</p>"},{"location":"user/guide/organisation-management/#navigating-to-organisations","title":"Navigating to Organisations","text":"<p>From any page on the site, click on <code>ORGANISATIONS</code> in the navigation bar at the top of the page.</p> <p></p> <p>This will redirect you to the Organisations Page. On this page, click on the block of organisation you would like to view.</p> <p></p> <p>This will redirect to that organisation's home page.</p> <p></p>"},{"location":"user/guide/organisation-management/#managing-organisation-members","title":"Managing organisation members","text":"<p>As a system administrator or an organisational publisher, you have the ability to manage organisation members. First you need to navigate to the organisation and then click <code>Manage</code>.</p> <p></p> <p>Then click on the <code>Members</code> tab.</p> <p></p> <p>From here you can:</p> <ol> <li>Add new members to the organisation.</li> <li>Edit the member's role.</li> <li>Remove the member from the organisation.</li> </ol> <p></p>"},{"location":"user/guide/profile-management/","title":"Profile Settings","text":"<p>Applicable roles: All users are able to update their profile details.</p>"},{"location":"user/guide/profile-management/#managing-your-profile","title":"Managing your profile","text":"<p>To manage your account details, log in as normal and you will be redirected to your profile dashboard. On this page, you will be able to view your activity and navigate to view the metadata you have created, organisations that you follow and groups of which you are a member.</p> <p></p> <p>There are two methods to manage your profile: Method 1 which is only available through the dashboard and Method 2 which is available from anywhere on the site.</p>"},{"location":"user/guide/profile-management/#method-1","title":"Method 1","text":"<p>On your profile dashboard, click on the <code>Profile Settings</code> button located to the right of the <code>My Groups</code> tab.</p> <p></p> <p>You will be redirected to the <code>Change details</code> page where you will be able to edit your contact information, affiliation, and occupation. You will also have the option of changing your password at the bottom of the form.</p> <p></p> <p>When you have made your necessary/desired changes, click on the <code>Update Profile</code> button.</p> <p></p>"},{"location":"user/guide/profile-management/#method-2","title":"Method 2","text":"<p>In the top-right corner of the site, click on <code>your username</code> to open the profile settings dropdown menu.</p> <p></p> <p>In this menu click on the <code>Profile Settings</code> button.</p> <p></p> <p>You will be redirected to the <code>Change details</code> page where you will be able to edit your contact information, affiliation, and occupation. You will also have the option of changing your password at the bottom of the form.</p> <p></p> <p>When you have made your necessary/desired changes, click on the <code>Update Profile</code> button.</p> <p></p>"},{"location":"user/guide/registering/","title":"Create an Account","text":"<p>Applicable Roles: Anyone one who can access the site through the internet.</p> <p>In order to register on the site, click on the <code>SIGN UP</code> button on the top right hand corner of the page.</p> <p></p> <p>Then fill in the registration form (example below).</p> <p></p> <p>Please ensure to fill out all the 1\ufe0f\u20e3 required fields marked with a '*' to complete the form submission process.</p> <p>Please note that your username needs to be lowercase and you are required to have a password with a minimum of 8 characters.</p> <p></p> <p>To create your account, please fill out the 2\ufe0f\u20e3 captcha fields and then click on the 3\ufe0f\u20e3 Create Account button. Once you have successfully registered, you can request to be added to an organisation using the CRISP help-desk.</p> <p></p> <p>Type your request in the designated field and then send it for it to be processed by the help team.</p> <p></p>"},{"location":"user/guide/search-metadata/","title":"Search metadata","text":"<p>Users are able to search for metadata on the <code>Metadata</code> page. Depending on the user role, users can view public or private records. Users can search for data using different filters.</p>"},{"location":"user/guide/search-metadata/#1-search-metadata-by-text","title":"1. Search metadata by Text","text":"<p>Applicable roles: All</p> <p>On the <code>Metadata</code> Page, you can use the <code>Search</code> bar to look for specific metadata or you can filter through the results to find suitable records.</p> <p>To use the <code>Search</code> bar, click on the text box and type in the term for which you are looking.</p> <p></p> <p>Then click on the <code>Search</code> button (the magnifying glass) located on the right-hand side of the search bar to see if any records match your search.</p> <p></p> <p>Expected results: Searching by title, abstract, or by a unique identifier in the search bar will yield results that meet the search criteria.</p>"},{"location":"user/guide/search-metadata/#2-search-metadata-by-location","title":"2. Search Metadata by Location","text":"<p>Applicable roles: All</p> <p>You can filter the records by their spatial extent to find the records that you are looking for. You can search by location using three methods:</p> <ol> <li>Search by rectangle: The pencil icon allows you to draw a rectangle over area of interest.</li> <li>Search by radius: The circle icon allows you to search using proximity radius over area of interest.</li> <li>Select spatial layer: The layers icon allows you to select based on pre-existing boundary layers available on the system.</li> </ol> <p></p>"},{"location":"user/guide/search-metadata/#rectangular-search","title":"Rectangular Search","text":"<p>To filter by drawing a rectangle, click on the pencil in the top right-hand corner of the map.</p> <p></p> <p>Once you click on the pencil, your cursor will turn in a reticle (a cross with a gap in the centre ), you can click and drag your cursor to draw a rectangle over the area you would like to search.</p> <p></p> <p>If you would like to adjust the map view, you can use 1\ufe0f\u20e3 the plus and minus icons in the top right corner of the map to zoom in and out, and use your mouse to pan around the map canvas by clicking down and dragging your cursor (when it looks like a hand ). To redraw the rectangular search area, click on 2\ufe0f\u20e3 the pencil icon and drag your cursor over the area for which you are searching metadata. You should see 3\ufe0f\u20e3 a red rectangle appear over that area. If you are happy with the selection, select 4\ufe0f\u20e3 <code>Apply</code>.</p> <p></p>"},{"location":"user/guide/search-metadata/#proximity-radius-search","title":"Proximity Radius Search","text":"<p>To filter by proximity, click on the circle icon in the top right-hand corner of the map.</p> <p></p> <p>Once you click on the circle, your cursor will turn in a reticle (a cross with a gap in the centre ), you can click and drag your cursor to draw a circle over the area you would like to search.</p> <p></p> <p>If you would like to adjust the map view, you can use 1\ufe0f\u20e3 the plus and minus icons in the top right corner of the map to zoom in and out, and use your mouse to pan around the map canvas by clicking down and dragging your cursor (when it looks like a hand ). To redraw the circular search area, click on 2\ufe0f\u20e3 the circle icon and drag your cursor over the area for which you are searching metadata. You should see 3\ufe0f\u20e3 a pink circle appear over that area. If you are happy with the selection, select 4\ufe0f\u20e3 <code>Apply</code>.</p> <p></p>"},{"location":"user/guide/search-metadata/#spatial-layer-search","title":"Spatial Layer Search","text":"<p>To filter by spatial layers, hover your mouse over the layers icon on the right-hand side of the map.</p> <p></p> <p>Select the spatial layer you want to apply and then move your mouse off the layers popup.</p> <p></p> <p>This example chose the Provinces layer.</p> <p></p> <p>Once you have chosen a desired layer, click on a spatial feature to set the search area (the example selects the Northern Cape Province).</p> <p>Note: There is no apply button for this search functionality, clicking on a desired spatial feature automatically applies the filter. The search area will automatically resize to the bounding box of the spatial feature selected and all records that intersect with that particular spatial feature will be returned.</p> <p></p>"},{"location":"user/guide/search-metadata/#3-search-metadata-by-temporal-range","title":"3. Search metadata by Temporal range","text":"<p>Applicable roles: All</p> <p>You can filter metadata records using a temporal range. Set the temporal range by selecting a start date, end date, or both a start and end date depending on the temporal extent of the record for which you are searching.</p> <p></p> <p>Click on the <code>Calendar</code> icon, located on the right of the start and end date fields.</p> <p></p> <p>To set your extent to today's date select 1\ufe0f\u20e3 <code>Today</code>, and if you wish to remove your chosen date click on 2\ufe0f\u20e3 <code>Clear</code>.</p> <p></p>"},{"location":"user/guide/search-metadata/#4-search-metadata-by-organisation","title":"4. Search metadata by Organisation","text":"<p>Applicable roles: All</p> <p>You can search for records by the organisations that published them. To do this, simply select the organisation or multiple organisations from whom you would like to view their records.</p> <p>Note: The site will reload the page every time you select (or remove) an organisation.</p> <p></p> <p>To deselect the organisations, just click on the little <code>x</code> that will appear next to a selected organisation.</p> <p></p> <p>Note: As an anonymous user or a registered user who does not belong to the specific organisation you filtered by, you cannot see records that are private. This means that the number of records available may not be the number of records that appear.</p>"},{"location":"user/guide/search-metadata/#5-search-metadata-by-other-filters","title":"5. Search metadata by other filters","text":"<p>The other filters include:</p> <ol> <li>Harvest source: Allows you filter by harvest sources that have been added to the portal.</li> <li>Featured metadata records: Allows you filter by records that have been tagged to be featured on the landing page of the portal.</li> <li>Tags: Allows you to filter by tags that have been associated with records</li> </ol> <p></p>"},{"location":"user/guide/search-metadata/#save-searches","title":"Save searches","text":"<p>Applicable roles: Registered users, organisational members, editors, publishers and system administrators.</p> <p>Registered users can save search parameters in order to be able to reproduce a search query at a future date.</p> <p>Navigate to <code>Metadata</code> and select the desired filters. In the image below, the user searched by text, location and temporal range.</p> <p></p> <p>Once you have your desired records on screen, click the <code>Save</code> icon, which is to the right of the <code>Search</code> icon, to save your search.</p> <p></p> <p>Once you select it, the icon will be filled.</p> <p></p> <p>To view your saved searches, open 1\ufe0f\u20e3 the profile drop-down menu and select 2\ufe0f\u20e3 <code>Saved Search</code>.</p> <p></p> <p>This will redirect you to the <code>Saved Searches</code> page where you can see all of your saved searches.</p> <p></p> <p>To reproduce a search, click on 1\ufe0f\u20e3 <code>Apply saved search</code> on one of your previous searches and the site will automatically redirect you to the <code>Metadata</code> Page and display results for that search. You can also choose to delete a previously saved search by clicking on 2\ufe0f\u20e3 the <code>Delete saved search</code> button.</p> <p></p>"},{"location":"user/manual/","title":"User Manual","text":"<p>This section of the documentation describes every page in the application and what the various components of that page do. The manual is intended to function as a reference for the application. For narrative/workflow-based tutorials, users may prefer to work through our user guide.</p> <ul> <li>Home Page: This is the <code>landing page</code> that users arrive on when they open the site.</li> <li>Sign Up: This is the <code>Sign Up</code> page where the user can create an account.</li> <li>Login: This is the <code>Login</code> page from here the user can log in.</li> <li>Forgot Password: This is the <code>Forgot Password</code> page from here the user can reset their password.</li> <li>Dashboard: This is a central notification hub for communications from the SAEOSS-Portal platform.</li> <li>Profile: The profile page provides a preview of what a user's profile will look like when viewed by other users on the platform.</li> <li>Profile Settings: On the profile settings page, all user profile-related settings can be managed.</li> <li>Metadata: This is the <code>Metadata</code> page where users can upload new records.</li> <li>Saved Searches: This page allows users to reapply previous search criteria.</li> <li>Map: This interface displays footprints of datasets in polygon format by displaying the boundary that is covered by the respective metadata record.</li> <li>Organisations: This is the <code>Organisations</code> page that allows all users to see all organisations on the platform.</li> <li>About: This is the <code>About</code> page where users can learn more about the site.</li> <li>Help: The help page is the documentation site.</li> <li>Log Out: This is the <code>Log Out</code> page from here the user can log out.</li> <li>User Roles: Access to data and functionalities on the SAEOSS-Portal platform is governed by user roles and permissions.</li> </ul>"},{"location":"user/manual/about/","title":"About","text":"<p>The <code>About</code> page on the SAEOSS-Portal provides users with insightful information about the platform's vision and compelling reasons to contribute.</p> <p></p> <ol> <li>About: The users can navigate to the page by selecting <code>About</code> on the tab. Users will be able to read the vision of the portal and the reason to contribute.</li> </ol>"},{"location":"user/manual/about/#about-saeoss-portal","title":"About SAEOSS-Portal","text":"<p>Welcome to the <code>SAEOSS-Portal</code>, a cutting-edge collaboration between SANSA (South African National Space Agency) and SAEON (South African Earth Observation Network). This platform is the result of a visionary partnership aimed at transforming the landscape of data sharing. The <code>SAEOSS-Portal</code> is dedicated to promoting synergy and knowledge exchange among diverse entities, contributing to a more interconnected world.</p> <p></p>"},{"location":"user/manual/about/#our-vision","title":"Our Vision","text":"<p>At the <code>SAEOSS-Portal</code>, we envision a future where data knows no boundaries. Our vision is rooted in the belief that the true power of data lies not only in its creation but also in its responsible sharing and utilisation. This platform serves as a bridge, connecting organisations, governments, and individuals, propelling them toward data-driven excellence.</p> <p></p>"},{"location":"user/manual/about/#join-the-data-revolution","title":"Join the Data Revolution","text":"<ol> <li> <p>Inviting Participation: We extend an invitation to organisations, institutions, and individuals to join the data revolution. Whether you represent a research institution, a government agency, or advocate for data-driven solutions, the SAEOSS-Portal offers a unique opportunity to contribute to a more interconnected and data-rich world.</p> </li> <li> <p>Create an Account: To become a part of this transformative journey, create an account on the <code>SAEOSS-Portal</code>. By doing so, you not only become a catalyst for change in the data ecosystem but also gain access to a wealth of knowledge and insights.</p> <p></p> </li> <li> <p>Benefits of Joining:</p> <ul> <li> <p>Access to Rich Data: Explore and access a diverse range of data sets contributed by various entities.</p> </li> <li> <p>Collaboration Opportunities: Connect with like-minded organisations and individuals for collaborative projects and initiatives.</p> </li> <li> <p>Data-Driven Excellence: Harness the power of data to drive transformative decision-making across various sectors.</p> </li> <li> <p>Contribution to a Global Network: Be a part of a community dedicated to responsible data sharing and utilisation.</p> </li> </ul> </li> </ol>"},{"location":"user/manual/dashboard/","title":"Dashboard Page","text":"<p>Once a user has logged in, the dashboard page will be displayed. This is a central notification hub for communications from the SAEOSS-Portal platform.</p> <p></p> <p>The dashboard is broken into 4 main sections, namely:</p> <ol> <li>News Feed: The news feed provides a user with all the recent activity of the groups and organisations they follow.</li> <li>My Metadata Records: Displays all the metadata uploaded by the user.</li> <li>My Organisations: Displays all metadata the user forms a part of.</li> <li>My Groups: Displays all the groups the user forms a part of.</li> </ol>"},{"location":"user/manual/dashboard/#activity-button","title":"Activity Button","text":"<p>The activity button allows you to filter the activity by organisation, group, or dataset. This allows you to see individual activity on specific topics of interest.</p> <p></p>"},{"location":"user/manual/dashboard/#news-feed","title":"News Feed","text":"<p>The news feed provides an overview of all recent activities of groups, organisations, or metadata you follow. This allows a user who is interested in a specific dataset/organisation/group to be up to date with any new changes or assets in the system. Users can follow a group/organisation/metadata dataset to receive these notifications. Learn more here: Following datasets/groups/organisations</p> <p></p>"},{"location":"user/manual/dashboard/#my-metadata-records","title":"My Metadata Records","text":"<p>This is a collection of all metadata records that you have created, published, or are working on (i.e. drafts).</p> <p></p>"},{"location":"user/manual/dashboard/#my-organisations","title":"My Organisations","text":"<p>In this tab, you will find a list of all organisations you have been added to. Administrators can add you to an organisation, or you can be added to multiple organisations. This allows you to see any private metadata records for each individual organisation.</p> <p></p>"},{"location":"user/manual/dashboard/#what-is-an-organisation","title":"What is an organisation?","text":"<p>CKAN Organisations are used to create, manage and publish collections of datasets. Users can have different roles within an Organisation, depending on their level of authorisation to create, edit and publish.</p> <p>An organisation consists of users who are registered on the site and then in turn have permissions to view records that are not visible to other registered users (i.e. some records are only viewable by members of the organisation that owns the records). Within organisations there are 3 types of users:</p> <ol> <li>Publishers: These are users who have the permissions to view, create, edit, and make public the metadata records belonging to the organisation.</li> <li>Editors: These are users who have the permissions to view, create, and edit the metadata records belonging to the organisation but cannot make the records public.</li> <li>Members: These are users who have permissions to view the metadata records belonging to the organisation.</li> </ol>"},{"location":"user/manual/dashboard/#my-groups","title":"My Groups","text":"<p>This tab displays all the groups of which you are a part. You can be added to a single group or multiple groups.</p> <p></p>"},{"location":"user/manual/dashboard/#what-is-a-group","title":"What is a group?","text":"<p>Groups are used to create and manage collections of datasets. This could be to catalogue datasets for a particular project or team, or on a particular theme, or as a very simple way to help people find and search user owned published datasets.</p>"},{"location":"user/manual/dashboard/#profile-settings","title":"Profile Settings","text":"<p>By selecting the <code>Profile Settings</code> button, you can adjust your profile settings like your username, bio, password, change profile picture, and generate API Keys. This page is explained in detail here: Profile Settings</p> <p></p>"},{"location":"user/manual/forgot-password/","title":"Forgot Password User Manual","text":""},{"location":"user/manual/forgot-password/#overview","title":"Overview","text":"<p>The <code>Forgot Password</code> feature allows users to reset their password in case it is forgotten. This guide will walk the user through the steps to initiate the password reset process using the <code>Forgot your Password</code> button.</p> <p></p> <ol> <li>Forgot Password Page: Locate and click on the <code>Forgot your Password</code> button on the login page. When the user clicks on this button they will redirected to the <code>Reset Password</code> page.</li> </ol>"},{"location":"user/manual/forgot-password/#reset-password-page","title":"Reset Password Page","text":"<ol> <li> <p>Reset Password Form: On the <code>Reset Password</code> page, the user will find a field to provide either their email or username. Choose either a registered email or username to proceed with the password reset.</p> </li> <li> <p>Request Reset Button: After entering the email or username, click on the <code>Request Reset</code> button. The system will initiate the password reset process and send instructions to the provided email address or associated account.</p> </li> </ol>"},{"location":"user/manual/forgot-password/#conclusion","title":"Conclusion","text":"<p>Initiating a password reset is a straightforward process that ensures account security. Follow these steps to request a password reset, and the user will receive instructions on how to set a new password. If you encounter any difficulties or have questions, don't hesitate to reach out to the support team for assistance.</p>"},{"location":"user/manual/help/","title":"Help Page","text":"<p>The help page is the documentation site. Here you can find out all there is to know and how things work on the SAEOSS-Platform. The documentation is quite informative and includes documentation for all workflows on the platform, however, if you find it lacking, please consider contributing to it or creating a GitHub issue so we may improve it.</p> <p>To contribute to this documentation, please review the documentation guide. This guide provides the workflow for contributing to the documentation and the process of creating a pull request.</p> <p>Alternatively, if you would like someone else to assist with your request, please review how to open tickets. This approach covers the necessary steps to create a GitHub ticket allowing developers to address the issue.</p> <p>In all cases, your support and contributions are not only welcome but greatly appreciated. We thank you for your continued support!</p>"},{"location":"user/manual/help/#next-steps","title":"Next Steps","text":"<p>If you have made it this far into the documentation, you may want to review the user guide, which provides workflow-based tutorials in the same page-by-page manner.</p>"},{"location":"user/manual/home/","title":"Home Page","text":"<p>When first accessing the SAEOSS-Portal, the home page is displayed. From the home page, users are able to create an account, login, or view public metadata.</p> <p>Users are able to view any public metadata on the platform without the need to log in. Without an account, users are not able to be affiliated with any organization or group and will not be able to see any private data of that group or receive any notifications from the platform.</p> <p></p>"},{"location":"user/manual/home/#navigation","title":"Navigation","text":"<p>From the home page, there are many ways to navigate to various pages on the platform. These navigational links can be summarized into the following:</p> Link Image Explanation Home Page By clicking on the SANSA logo from anywhere on the platform, the home page will be displayed. Login / Sign-Up By selecting the login / sign-up button in the top right corner, users can log in or create an account. Social Media Links Various social media pages for SANSA can be accessed through the social media links on the left. Navigation bar / Nav links / Nav cards The navigation bar allows for easy access to all main pages of the platform."},{"location":"user/manual/home/#crisp-interface","title":"Crisp Interface","text":"<p>Note: This interface sends emails to the administrator and might yield a long turnaround time.</p> <p>The crisp chat interface allows you to directly contact administrators of the platform should you need assistance with a problem not listed in the documentation.</p>"},{"location":"user/manual/home/#home-page-user-manual-after-login","title":"Home Page User Manual (After Login)","text":"<p>After logging in, users can go to the home page, by clicking on the home option available in the navigation offering a range of features to enhance their experience. Here is a guide to the options available:</p> <p></p> <ol> <li>Profile Icon with Username: Located at the top of the page, the profile icon displays the user's username. Click on the profile icon to reveal additional options.</li> </ol> <p></p> <ol> <li> <p>Explore Map Link: Access the interactive map viewer to explore metadata visually. Discover geographic data displayed on the map, providing a visual representation of available metadata records. Interact with the map interface to gain insights into spatial information for better project planning. Click on the link or the arrow to go to the <code>Explore Map</code> page.</p> <p></p> </li> <li> <p>Search Link: Use the search functionality to filter through a vast library of public records. Apply different filter types to efficiently find the exact data needed for your projects. Accelerate your data discovery process with powerful and customizable search capabilities. Click on the link or the arrow to go to the <code>Metadata</code> page and search.</p> <p></p> </li> <li> <p>Metadata Browser Link: Explore the comprehensive metadata repository through the Metadata Browser link. Access detailed information about data resources, enabling informed decision-making. Navigate through well-organised metadata, serving as your gateway to valuable and structured data. Click on the link or the arrow to go to the <code>Metadata</code> page.</p> <p></p> </li> </ol>"},{"location":"user/manual/home/#conclusion","title":"Conclusion","text":"<p>These options empower users with tools to explore, search, and analyse data effectively. If the users have any questions or need assistance while navigating the home page, feel free to contact our support team for prompt help.</p>"},{"location":"user/manual/login/","title":"Login Page User Manual","text":""},{"location":"user/manual/login/#overview","title":"Overview","text":"<p>The Login page is the gateway to accessing the features and content on the platform. This guide will walk the users through the steps to log in, create an account, and recover your password.</p> <p></p>"},{"location":"user/manual/login/#login-buttons","title":"Login Buttons","text":"<p>Users can access the login functionality from two locations on the home page.</p> <ol> <li>Login Button: Click on the login button available in the middle of the home page.</li> <li> <p>Other Login Button: Alternatively, locate and click on the login button in the top right corner of the page.</p> <ul> <li>Upon clicking the login button, the user will be directed to the <code>Login Page</code>.</li> </ul> </li> </ol>"},{"location":"user/manual/login/#login-page","title":"Login Page","text":"<ol> <li> <p>Login Form: Provide the username and password in the designated fields. Optionally, use the <code>Remember Me</code> button to stay logged in on future visits. Click the <code>Login</code> button to complete the login process.</p> </li> <li> <p>Create an Account: If the user does not have an account, click on the <code>Create an Account</code> link to navigate to the account creation page. Follow the instructions to set up the user's account by providing the necessary information.</p> </li> <li> <p>Forgot Your Password: In case the user forgets their password, click on the <code>Forgot Your Password</code> link. Follow the password recovery process to reset the password and regain access to the account.</p> </li> </ol>"},{"location":"user/manual/login/#conclusion","title":"Conclusion","text":"<p>Logging in is a straightforward process, and the Login Page provides convenient options for account creation and password recovery. Whether the user is a returning user or a new member, these steps will guide the user through a seamless login experience. If you encounter any issues or have questions, feel free to contact the support team for assistance.</p>"},{"location":"user/manual/logout/","title":"Logout User Manual","text":""},{"location":"user/manual/logout/#overview","title":"Overview","text":"<p>The <code>Logout</code> option provides users with a seamless way to log out of the system, ensuring a secure and controlled user experience. This guide will walk you through the process of accessing and utilising the <code>Logout</code> option.</p> <ul> <li>Click on the user profile to access the user-related options.</li> </ul> <p></p> <ol> <li>Logout Click on the <code>Logout</code> option. After clicking on the <code>Logout</code> option, the system will initiate the logout process. Upon successful logout, the user will be redirected to the logout page.</li> </ol> <p>On the logout page, the user will find several buttons to navigate to different sections.</p> <p></p> <ol> <li> <p>Back to Home Page Button: Click on this button to return to the home page, providing a quick way to access essential information and features.</p> </li> <li> <p>Metadata: Navigate to the <code>Metadata</code> section by clicking on this button. Explore and discover valuable metadata records.</p> </li> <li> <p>Map: Access the <code>Map</code> section by clicking on this button. Visualise spatial Earth Observation datasets and interact with the map interface.</p> </li> </ol>"},{"location":"user/manual/logout/#conclusion","title":"Conclusion","text":"<p>The Logout option ensures a secure end to the user's session, redirecting the user to a dedicated logout page. From there, the user can conveniently navigate to different sections, including the home page, login page, and sign up page, using the provided buttons. Feel free to explore the various features available after logging out and return to the system at your convenience. If you have any further questions or need assistance, please reach out to our support team.</p>"},{"location":"user/manual/map/","title":"Map User Manual","text":"<p>This interface displays footprints of datasets in polygon format by displaying the boundary that is covered by the respective metadata record. The user is provided with a visual map to interact with to understand the extent, location and number of spatial Earth Observation datasets available.</p> <p></p> <p>These are some of the components found on the map tab:</p> <ol> <li> <p>Right Arrow: Users can view available metadata records by clicking on the <code>Right Arrow</code>. When the user clicks on this arrow, a side panel opens with the metadata record list and the search filter.</p> <p></p> <ol> <li> <p>Search filters: This provides a casual graphical interface to explore individual metadata records to discover items of interest in terms of content, time and location. This is where users can search for metadata by keywords and date.</p> <p></p> </li> <li> <p>Date: Users can search for metadata records by specifying the start and end dates. Users can enter the dates directly into the fields or use the calendar icon to select the start and end dates.</p> <p></p> </li> <li> <p>Metadata Record: To visualise the geographical area associated with the <code>Metadata Record</code>, users can click on the metadata, triggering its display on the map.</p> <p></p> <ol> <li> <p>Highlighted Area: The geographic area corresponding to the metadata is highlighted on the map, providing a visual reference for the user.</p> </li> <li> <p>Data: Users can obtain detailed information by clicking anywhere within the highlighted area. This action reveals specific data associated with the metadata, including:</p> <ul> <li>DateTime</li> <li>Description</li> <li>Keyword</li> <li>Name</li> </ul> </li> </ol> <p>This detailed information provides insights into the metadata record, aiding users in understanding its specific attributes and content.</p> </li> </ol> </li> <li> <p>Zoom functionality: This allows users to zoom in and out on the map.</p> </li> <li> <p>Base map options: This allows users to choose a specific base map.</p> </li> </ol> <p></p> <ol> <li> <p>OpenStreetMap Street View:</p> <p></p> <ul> <li>Provides a traditional street map view.</li> <li>Displays road networks, landmarks, and geographical features commonly found in urban and suburban areas.</li> </ul> </li> <li> <p>OpenStreetMap Hybrid View:</p> <p></p> <ul> <li>Combines satellite imagery with street map information.</li> <li>Offers a hybrid perspective, allowing users to see both the physical landscape and mapped infrastructure.</li> </ul> </li> <li> <p>OpenStreetMap Pioneer View:</p> <p></p> <ul> <li>Designed for exploration and outdoor activities.</li> <li>Highlights topographic details, terrain, and natural features, making it suitable for adventurous and nature-related mapping.</li> </ul> </li> <li> <p>OpenStreetMap Neighbourhood View:</p> <p></p> <ul> <li>Emphasises localised mapping for neighbourhood-level details.</li> <li>Useful for focusing on smaller-scale features, such as streets, parks, and amenities within specific neighbourhoods or community areas.</li> </ul> </li> </ol>"},{"location":"user/manual/metadata/","title":"Metadata","text":"<p>On this page, users can view all public metadata records on the platform and users who are part of organisations can view the organisation's private records.</p> <p></p>"},{"location":"user/manual/metadata/#overview","title":"Overview","text":"<p>This section gives an overview of the number of records on the platform, records returned with the search and indicates if the user is utilising a Saved Search</p> <p></p> <ol> <li>Total number of metadata records: This is the count of all of the metadata records on the platform.</li> <li>Records Returned: This displays how many records are returned following the user's search criteria.</li> <li>Saved Search: The flag indicates if a saved search is being utilised. If the flag is hollow () the search has not been saved and if the flag is filled () then a saved search is being utilised.</li> </ol>"},{"location":"user/manual/metadata/#filters","title":"Filters","text":"<p>The filters allow users to refine the list of records that they can see to meet their criteria.</p> <p></p> <ol> <li>Search bar and <code>Search</code> button: This allows users to filter records using words/terms related to desired records.</li> <li>Filter by location: This allows users to utilise spatial filters to refine the list of records by location.</li> <li>Temporal range: This allows users to refine the list of records between a date range.</li> <li>Organisations: This allows users to refine the list records by the organisations that own them.</li> <li>Harvest source: This allows users to refine the list records by the harvest sources.</li> <li>Featured Metadata records: This allows users to refine the list records by whether or not the featured flag was used in the record's creation.</li> <li>Tags: This allows users to refine the list records by keywords.</li> </ol>"},{"location":"user/manual/metadata/#filter-by-location","title":"Filter by location","text":"<p>The Filter by location section consists of:</p> <p></p> <ol> <li><code>Clear</code> button: This clears all location filters currently applied.</li> <li><code>Zoom In</code> and <code>Zoom Out</code> buttons: These buttons allow users to change their zoom levels on the map.</li> <li><code>Search with rectangle bounds</code> button: This button expands the map to allow users to draw their preferred rectangular search area. Once the area is defined they can click on <code>Apply</code>.     </li> <li><code>Search with circular</code> button: This button expands the map to allow users to draw their preferred circular search area. Once the area is defined they can click on <code>Apply</code>.     </li> <li> <p>Spatial Layer search: Hovering over this patch opens a menu of predefined spatial layers that users can apply and then click to define a search area.     </p> <p>A user selects one of the four options (e.g. <code>Provinces</code>). </p> <p>Then clicks on one of the polygons to define a search area. </p> </li> </ol>"},{"location":"user/manual/metadata/#temporal-range","title":"Temporal range","text":"<p>The Temporal range section consists of:</p> <p></p> <ol> <li>Start date: This is the earliest date from which a user wants to search.</li> <li>End date: This is the latest date until which a user wants to search.</li> <li><code>Calendar</code> buttons: These buttons allow users to set the start and end dates. They just need to click on a desired date.     </li> </ol>"},{"location":"user/manual/metadata/#other-filters","title":"Other Filters","text":"<p>The Organisations section consists of:</p> <p></p> <ol> <li>List of organisations: This is a list of all the organisations on the platform.</li> <li><code>x</code> button: This allows users to remove the currently selected organisation(s) as a filter. It only becomes available once a user has selected an organisation.</li> </ol> <p>The <code>Harvest source</code>, <code>Featured Metadata records</code>, and <code>Tags</code> sections function in the same manner as the <code>Organisations</code> section, whereby a user can select an applicable filter by clicking on it or remove the filter by clicking on the <code>x</code> button that appears.</p>"},{"location":"user/manual/metadata/#list-of-metadata-records","title":"List of Metadata Records","text":"<p>This section of the page displays all public metadata records on the platform to all users and users with additional permissions (i.e. organisation members, or the system administrator) can view <code>private</code> metadata records within organisations.</p> <p></p> <ol> <li>List of Records: Users can click on a record to view details about it.     </li> </ol>"},{"location":"user/manual/metadata/#add-metadata-record","title":"Add Metadata Record","text":"<p>The <code>Add metadata record</code> button is only available to Organisation Editors, Organisation Publishers, and System Administrators.</p> <p></p> <ol> <li><code>Add metadata record</code> button: This redirects users to the <code>Create metadata record</code> form.</li> </ol>"},{"location":"user/manual/metadata/#create-metadata-record","title":"Create Metadata Record","text":"<p>This form allows users to specify details relating to the metadata record that they are creating. It is only available to Organisation Editors, Organisation Publishers, and System Administrators.</p> <p></p> <ol> <li>Record Information: These fields are based off of the SANS 1878 metadata standard and any field marked with an asterisk (<code>*</code>) is required to be populated with information. Underneath the fields is an informative description about what information is required, denoted by .</li> </ol> <p>At the bottom of the form, users will be required to click on the <code>Next: Add Links</code> button.</p> <p></p> <p>Users are redirected to the <code>Metadata record details</code> form.</p> <p></p> <ol> <li>Details fields: These fields relate to the associated data source of the metadata record and users will be required to fill out the fields.</li> <li><code>Upload</code> and <code>Link</code> buttons: These buttons allow a user to choose how they would like to associate a data source with the metadata record.</li> <li><code>Previous</code> Button: This button allows a user to go back to edit the record's information.</li> <li><code>Save &amp; add another</code> button: This button allows a user to save the current data source's information and add another associated data source.</li> <li><code>Finish</code> button: This button allows a user to finish adding data sources and save the metadata record as an unpublished record.</li> </ol>"},{"location":"user/manual/metadata/#add-metadata-record-from-file","title":"Add Metadata Record From File","text":"<p>The <code>Add metadata record from file</code> button is only available to Organisation Editors, Organisation Publishers, and System Administrators.</p> <p></p> <ol> <li><code>Add metadata record from file</code>: This button opens a file explorer on the user's machine for them to then explore and upload an <code>xml</code> file.</li> </ol> <p>An example <code>xml</code> file would be:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;dataset&gt;\n        &lt;title&gt;Example Title&lt;/title&gt;\n        &lt;MetadataStandardName&gt;SANS1878&lt;/MetadataStandardName&gt;\n        &lt;MetadataStandardVersion&gt;1&lt;/MetadataStandardVersion&gt;\n        &lt;notes&gt;Abstract of Metadata Record&lt;/notes&gt;\n        &lt;ResponsiblePartyIndividualName&gt;Hugh Mann&lt;/ResponsiblePartyIndividualName&gt;\n        &lt;ResponsiblePartyPositionName&gt;Person&lt;/ResponsiblePartyPositionName&gt;\n        &lt;ResponsiblePartyRole&gt;publisher&lt;/ResponsiblePartyRole&gt;\n        &lt;ResponsiblePartyElectronicMailAddress&gt;example@example.com&lt;/ResponsiblePartyElectronicMailAddress&gt;\n        &lt;IsoTopicCategory&gt;society&lt;/IsoTopicCategory&gt;\n        &lt;OwnerOrg&gt;organisation&lt;/OwnerOrg&gt;\n        &lt;private&gt;True&lt;/private&gt;\n        &lt;LineageStatement&gt;Statement of lineage&lt;/LineageStatement&gt;\n        &lt;spatial&gt;-22.1265,16.4699,-34.8212,32.8931&lt;/spatial&gt;\n        &lt;EquivalentScale&gt;0&lt;/EquivalentScale&gt;\n        &lt;SpatialRepresentationType&gt;001&lt;/SpatialRepresentationType&gt;\n        &lt;SpatialReferenceSystem&gt;EPSG:4326&lt;/SpatialReferenceSystem&gt;\n        &lt;ReferenceDate&gt;2004-11-03T01:00:00&lt;/ReferenceDate&gt;\n        &lt;ReferenceDateType&gt;Publication&lt;/ReferenceDateType&gt;\n        &lt;StampDate&gt;2003-09-11T10:30:15&lt;/StampDate&gt;\n        &lt;StampDateType&gt;Creation&lt;/StampDateType&gt;\n        &lt;DistributionFormatName&gt;format name&lt;/DistributionFormatName&gt;\n        &lt;DistributionFormatVersion&gt;1.0&lt;/DistributionFormatVersion&gt;\n        &lt;DatasetLanguage&gt;english&lt;/DatasetLanguage&gt;\n        &lt;MetadataLanguage&gt;English&lt;/MetadataLanguage&gt;\n        &lt;DatasetCharacterset&gt;UCS-2&lt;/DatasetCharacterset&gt;\n        &lt;MetadataCharacterset&gt;UCS-2&lt;/MetadataCharacterset&gt;\n&lt;/dataset&gt;\n</code></pre>"},{"location":"user/manual/organisation/","title":"Organisations","text":"<p>Users can view all the organisations on the platform on this page. Users with administrative rights for certain organisations are able to manage the organisation from this page. Additionally, if system administrators can add an organisations on this page.</p> <p></p>"},{"location":"user/manual/organisation/#organisation-home-page","title":"Organisation Home Page","text":"<p>Users can view an organisation's home page by clicking on an organisation on the <code>Organisations</code> page.</p> <p></p> <p>They will then be redirected to the organisation's home page. There are four main elements on an organisation's home page that all users can see:</p> <ol> <li>The Overview</li> <li>Metadata Records</li> <li>Activity Stream</li> <li>About</li> </ol> <p>Only the System Administrator and the Organisation's Publishers can see:</p> <ol> <li>Manage Button</li> </ol> <p></p>"},{"location":"user/manual/organisation/#overview","title":"Overview","text":"<p>The overview contains information regarding the organisation. This includes the organisation's profile picture, the organisation's name, a description of the organisation, the number of followers, the number of records, and the <code>Follow</code> button. The <code>Organisations</code> and <code>Tags</code> subsections, can be populated with reference links to keywords and organisations to filter the organisation's metadata records.</p> <p></p> <ol> <li>Profile Picture: This is an image (usually a logo) that is visually associated with the organisation.</li> <li>Organisation Name: This is the name of the organisation.</li> <li>Description: This is a short descriptor regarding the organisation (if provided).</li> <li>Number of Followers: This is the number of users who follow the organisation.</li> <li>Number of Records: This is the number of public records the organisation owns.</li> <li><code>Follow</code> button: This button allows users to follow the organisation and in turn receive notifications on their respective dashboards when there is activity from the organisation.</li> </ol>"},{"location":"user/manual/organisation/#metadata-records","title":"Metadata Records","text":"<p>The <code>Metadata Records</code> section of an organisation's home page displays all of the organisation's public metadata records to all users.</p> <p></p> <p>If a user is a member, editor, or publisher (or system administrator) of the organisation then they will see all of the organisation's metadata records, including <code>Private</code> records.</p> <p></p> <ol> <li><code>Add metadata record</code> button: Publishers and Editors within the organisation can see this button which allows them to add records to the organisation.</li> <li>Search bar and <code>Search</code> button: All users can search for public records using the search functionality while organisation members, editors, and publishers can search for all the metadata records within the organisation.</li> <li>Metadata records: These are the records that a user can see, either only the public, or all of the organisation's, records.</li> </ol>"},{"location":"user/manual/organisation/#activity-stream","title":"Activity Stream","text":"<p>The <code>Activity Stream</code> section of an organisation's home page displays all of the activity related to the organisation, including members creating records, updates to the organisation, and more.</p> <p></p>"},{"location":"user/manual/organisation/#about","title":"About","text":"<p>The <code>About</code> section of an organisation's home page displays the full description about the organisation (if added) as some organisations may have longer descriptions that will not fully display in the overview panel.</p> <p></p>"},{"location":"user/manual/organisation/#manage-button","title":"Manage Button","text":"<p>If organisation users with the necessary permissions (publishers and the system administrator), click on the <code>Manage</code> button.</p> <p></p> <p>This will redirect you to the management page of the organisation.</p> <p></p>"},{"location":"user/manual/organisation/#edit-details","title":"Edit Details","text":"<p>The <code>Edit</code> tab allows users with the necessary permissions to change multiple details relating to the organisation. There is also the choice to update the organisation's details or to delete the organisation, utilising the relevant buttons at the bottom of the form.</p> <p></p> <ol> <li>Details: These are fields that can be populated to change the organisation's displayed information in the Overview and About sections.</li> <li><code>Update Organisation</code> button: This button stores changes made to the organisation's details.</li> <li><code>Delete</code> button: This button will delete organisation.</li> </ol>"},{"location":"user/manual/organisation/#manage-metadata-records","title":"Manage Metadata Records","text":"<p>The <code>Metadata Records</code> tab allows users with the necessary permissions to add/delete, publish/unpublish, or search for the organisation's metadata records.</p> <p></p> <ol> <li><code>Add metadata record</code> button: This will redirect users to the Add metadata form.</li> <li>Search bar and <code>Search</code> button: Users can search for specific records with which they would like to interact.</li> <li><code>Make public</code> button: This button will \"publish\" a metadata record so that all users can see it.</li> <li><code>Make private</code> button: This button will \"unpublish\" a metadata record so that only the organisation's users can see it.</li> <li><code>Delete</code> button: This button will delete the metadata record from the organisation and the entirety of the platform.</li> <li>Checkboxes: These allow users to select one, or many, metadata record(s) to perform an action on. The topmost checkbox will select all of the records.</li> </ol>"},{"location":"user/manual/organisation/#manage-members","title":"Manage Members","text":"<p>The <code>Members</code> tab allows users with the necessary permissions to change other members' relative permissions within the organisation and to add new members to the organisation.</p> <p></p> <ol> <li><code>Add Member</code> button: This button redirects users to the Add Member page.</li> <li>Number of members: This displays the total number of members within the organisation.</li> <li>Table of users: This table displays the organisation members and their respective roles.</li> <li><code>Edit Member</code> button: This button redirects users to the Edit Member page.</li> <li><code>Delete Member</code> button: This button causes the Delete Member popup to appear.</li> </ol>"},{"location":"user/manual/organisation/#add-member","title":"Add Member","text":"<p>The <code>Add Member</code> page allows users with the necessary permissions to add a current user on the platform to the organisation or to invite a new user to the platform and in turn the organisation. There is a description of the various user role permissions in the overview on the left.</p> <p></p> <ol> <li>Existing User: This dropdown is where a current user's username should be entered.     </li> <li>New User: This field is where a new user's email address should be entered.     </li> <li>Role: The user's role (member, editor, or publisher) should be selected from this dropdown.     </li> </ol>"},{"location":"user/manual/organisation/#edit-member","title":"Edit Member","text":"<p>The <code>Edit Member</code> page allows users with the necessary permissions to change a user's role within the organisation. There is a description of the various user role permissions in the overview on the left.</p> <p></p> <ol> <li>Role: The user's role (member, editor, or publisher) should be selected from this dropdown.     </li> <li><code>Update Member</code> button: This button will commit the changes made to the member's role.</li> <li><code>Delete</code> button: This button will cause the Delete Member popup to appear.</li> </ol>"},{"location":"user/manual/organisation/#delete-member","title":"Delete Member","text":"<p>The <code>Delete Member</code> popup prompts the user to confirm their action.</p> <p></p> <ol> <li><code>Confirm</code> button: This confirms the removal of the user from the organisation.</li> <li><code>Cancel</code> button: This cancels the action and closes the popup.</li> </ol>"},{"location":"user/manual/organisation/#view-button","title":"<code>View</code> Button","text":"<p>This button will redirect users back to the organisation's landing page.</p> <p></p>"},{"location":"user/manual/profile-page/","title":"Profile Page","text":"<p>The profile page provides a preview of what a user's profile will look like when viewed by other users on the platform. Additionally, it's also a collector for information regarding the user's profile.</p> <p>This page is broken into 4 main sections:</p> <ol> <li>Overview</li> <li>Metadata Records</li> <li>Activity Stream</li> <li>API Tokens</li> </ol> <p></p>"},{"location":"user/manual/profile-page/#overview","title":"Overview","text":"<p>When users click on <code>Profile</code>, the preview of the user's account will be displayed.</p> <p>The user's profile picture, first name, username, email address, date of registration, account status and API key are displayed on the left. Users are also able to see the number of metadata records they have uploaded, how many followers they have and their biography (if added by the user).</p> <p>The email address and API key will not be viewable to other users (a System Administrator will be able to see it). This user has not generated an API key hence <code>None</code> is returned.</p> <p></p> <p>Example of what a user will see if they look at another user's profile.</p> <p></p>"},{"location":"user/manual/profile-page/#metadata-records","title":"Metadata Records","text":"<p>Users are able to see their created metadata records in this section. Users are also able to add metadata records on this tab if they click on the <code>Add Metadata record</code> button.</p> <p></p>"},{"location":"user/manual/profile-page/#activity-stream","title":"Activity Stream","text":"<p>This is where you see the latest activities on your account. This includes account registration, metadata record upload</p> <p></p>"},{"location":"user/manual/profile-page/#api-tokens","title":"API Tokens","text":"<p>This is where users can create an API token, which can later be used to upload data. They need to specify the token name and then click on <code>Create API Token</code> to generate a unique token to be associated with their profile.</p> <p></p>"},{"location":"user/manual/profile-settings/","title":"Profile Settings","text":"<p>On the profile settings page, all user profile-related settings can be managed. This page can be accessed by following the steps in this guide.</p>"},{"location":"user/manual/profile-settings/#key-elements","title":"Key Elements","text":"<p>The profile settings page consists of three main sections, each consisting of key elements:</p> <ul> <li> <p>Change details: Users can change their public details. This refers to their username, email, about section, and profile picture. Most of this information will be in the public domain (not a user's email address), and other users of the platform will be able to see this information.   </p> </li> <li> <p>Extra details: Users can add extra details like affiliations and professional occupations.   </p> </li> <li> <p>Change Password: Users can change their password from this section if required.   </p> </li> <li> <p>Regenerate API Key: Causes a popup to appear asking if the user to confirm their action. To learn more about API tokens, follow this link. Read more </p> </li> </ul>"},{"location":"user/manual/saved-search/","title":"Saved Searches","text":"<p>The Kartoza team integrated <code>Saved search</code> into CKAN. It allows users to store and reuse specific search queries. Users  can save the search criteria for future reference when performing a complex or frequently used search.</p> <p></p>"},{"location":"user/manual/saved-search/#save-search","title":"Save Search","text":"<p>Search historic can't be saved automatically. A user can choose to save a search or not.  After filtering the metadata, click on the icon circled in red.</p> <p></p>"},{"location":"user/manual/saved-search/#saved-search","title":"Saved Search","text":"<ol> <li>Click on <code>Saved Search.</code>  To see all search historic. A <code>Saved Search</code> can be deleted or applied again. </li> </ol>"},{"location":"user/manual/sign-up/","title":"Sign Up Page User Manual","text":""},{"location":"user/manual/sign-up/#overview","title":"Overview","text":"<p>The <code>Sign Up</code> page allows users to create a new account, providing access to personalised features and content on the platform. This guide will walk users through the steps to sign up, including filling out the required fields and creating their account.</p> <p></p> <ol> <li>Access Sign Up Page: Click on the <code>SIGN UP</code> button available in the middle of the home page. </li> <li>Other Access to Sign Up Page: Alternatively, locate and click on the <code>SIGN UP</code> button in the top right corner of the page, where the user can find an option to create an account.</li> </ol>"},{"location":"user/manual/sign-up/#sign-up-page","title":"Sign Up Page","text":"<ol> <li> <p>Fill Out Sign up Form:</p> <p>The sign up form includes the following fields: - Username (Required) - Full Name - Email (Required) - Password (Required) - Confirm Password (Required) - Profile Picture URL: Enter the URL for the user's profile picture. - Profile Picture: Optionally, upload a profile picture by selecting a file.</p> <p>Note: Fields marked with * are required.</p> </li> </ol> <p></p> <ol> <li> <p>Captcha: Complete the Captcha form to verify that you are not a robot. The Captcha form serves as a security measure to differentiate between human users and automated bots attempting to access or interact with the system. It helps prevent spam, abuse, and unauthorised access by requiring users to prove their identity as a human user.</p> </li> <li> <p>Create Account: After filling out the required fields, click on the <code>Create Account</code> button. The system will process the user's information and create the user's account.</p> </li> </ol>"},{"location":"user/manual/sign-up/#conclusion","title":"Conclusion","text":"<p>Creating a new account is a simple and essential step to unlock personalised features on our platform. Follow these steps to complete the sign up process, and the user be ready to explore and engage with our community. If the user encounters any issues or has questions, feel free to contact the support team for assistance.</p>"},{"location":"user/manual/user-roles/","title":"User roles","text":"<p>Access to data and functionalities on the SAEOSS-Portal platform is governed by user roles and permissions. User roles define a default set of permissions generally assigned to different types of users and linked to their profiles. When a new user profile is registered, it is automatically assigned to the general user role.</p> <p>Individual permissions can be set by the administrator for user profiles to provide additional access to data or functionalities if required. This means that even though a user profile is assigned to the general user role, it can have access to functionalities or permissions typically reserved for admin users. Additional user roles can also be created, or default user role permissions can be changed by an administrator with the relevant access.</p>"},{"location":"user/manual/user-roles/#six-types-of-users","title":"Six types of users","text":""},{"location":"user/manual/user-roles/#1-anonymous-user","title":"1. Anonymous user","text":"<p>This user has search, viewing and downloading capabilities of public metadata records. This user role is not required to register, nor are they a member of any organisation.</p> <p></p>"},{"location":"user/manual/user-roles/#2-registered-user","title":"2. Registered user","text":"<p>This is a general user that has registered themselves on the system. By registering, this user has access to additional features such as the ability to save and delete searches, alter profile information, generate API key. This user is not a member of any organisation, but can access public metadata record.</p> <p></p> <p>User can register by filling out this form.</p> <p></p>"},{"location":"user/manual/user-roles/#3-member","title":"3. Member","text":"<p>This user role is a privileged user, who is part of a known institution or company. They must register on the SAEOSS Portal and provide additional information about their affiliation. This role is a member of an organisation that can view private metadata records that belong to the organisation they belong to.</p> <p></p> <p>If you would like to see which organisation you are a part of, you can click on the drop-down menu located under your username and select <code>Dashboard</code>. Then navigate to the <code>My Organisation</code> tab.</p>"},{"location":"user/manual/user-roles/#4-editor","title":"4. Editor","text":"<p>This user role is a privileged user, who is part of a known institution or company. They must register on the SAEOSS Portal and provide additional information about their affiliation. This role is a member of an organisation that has permission to create (but not publicly publish), edit and delete metadata records on the portal in the organisations where they are a member.</p> <p></p>"},{"location":"user/manual/user-roles/#5-publisher","title":"5. Publisher","text":"<p>This user role is a privileged user who is part of a known institution. They have the power to publish metadata records for consumption by the public as well as to create, delete and edit metadata records that are owned by their organisation. Metadata publishers are also able to manage other users\u2019 permissions to their metadata records. There can be multiple users with this role within an organisation.This is the highest level of access on an organisational level.</p> <p></p>"},{"location":"user/manual/user-roles/#6-system-administrator","title":"6. System Administrator","text":"<p>A user role that possesses full access permissions, being able to configure and maintain all aspects of the SAEOSS Portal.</p> <p></p> <p>All users have access to the following pages:</p> <ol> <li>Metadata: Users can search and view public metadata. They can filter by title, location, time, organisation, harvest source, features and tags.     </li> <li>Map: Users can search and view different layers.     </li> <li>Organisation: Users can navigate the organisations page and view the list of organisations on the portal. When users click on the organisations, it navigates to the profile of the organisation, where the users can view the organisation's public metadata records, activity stream, information about the organisation under 'About' and social media links for the organisation.     </li> <li>About: Users can access everything on the About page.</li> <li>Help: Users can access the Help page, which takes them directly to this documentation.</li> </ol>"},{"location":"user/quickstart/","title":"Quickstart","text":""},{"location":"user/quickstart/#getting-started","title":"Getting Started","text":"<p>The workflows described in this section is designed to be 5 minute workflows to get users started with using the platform.  Please look at the user guide for more detailed workflows or look at the user manual section which describes the platform in page-by-page detail.</p>"},{"location":"user/quickstart/#accessing-the-saeoss-portal","title":"Accessing the SAEOSS-portal","text":"<ol> <li>From your browser navigate to SAEOSS PORTAL </li> <li>If you don't have one, register and create a user account.</li> <li>Browse, view and download metadata.</li> </ol>"},{"location":"user/quickstart/#register-a-new-account","title":"Register a new account","text":"<ol> <li>From the home page, in the top right corner locate and click on <code>SIGN UP</code>.         </li> <li>Complete the registration form. Ensure all required fields, marked with an <code>*</code>, have been completed.         </li> <li>Finally click on <code>Create Account</code>.         </li> </ol>"},{"location":"user/quickstart/#browse-view-and-download-metadata","title":"Browse, view and download metadata","text":"<ol> <li> <p>From the home page click on <code>Metadata</code> located in the navigation bar.</p> <p></p> </li> <li> <p>Search for relevant metadata using the search and filter fields in the left pane.</p> <p></p> </li> <li> <p>Click on the title of appropriate metadata result to view the metadata record.</p> <p></p> </li> <li> <p>Click on <code>explore</code> to preview or download the metadata record.</p> <p></p> </li> </ol>"},{"location":"user/research/","title":"SANS 1878 research","text":"<p>6.1. Metadata shall be provided for geographic datasets and may, optionally, also be provided for aggregations of datasets, features and attributes of features.</p>"},{"location":"user/research/#core-metadata-elements","title":"Core metadata elements","text":"<p>As described in Table 2 - Core metadata for geographic datasets</p> Element Obligation and Condition Exists in stock CKAN Dataset title Mandatory Yes Dataset reference date Mandatory No Dataset responsible party Mandatory Yes* Geographic location of the dataset (by four coordinates or by geographic identifier) Mandatory No Dataset language Mandatory No Dataset character set Mandatory No Dataset topic category Mandatory No Spatial resolution of the dataset Mandatory No Abstract describing the dataset Mandatory Yes* Distribution format Mandatory No Additional extent information for the dataset (vertical and temporal) Optional No Spatial representation type Mandatory No Reference system Mandatory No Lineage statement Mandatory No On-line resource Conditional Yes Metadata file identifier Mandatory Yes Metadata standard name Conditional No Metadata standard version Conditional No Metadata language Mandatory No Metadata character set Mandatory No Metadata point of contact Mandatory Yes Metadata date stamp Mandatory Yes"},{"location":"user/research/#additional-elements","title":"Additional elements","text":"<p>As found scattered throughout the SANS 1878 document</p> Name Obligation and condition hierarchyLevel Mandatory referenceSystemInfo Mandatory metadataMaintenance Optional purpose Mandatory acknowledgement Optional status Mandatory resourceMaintenance Optional descriptiveKeywords Optional resourceSpecificUsage Optional graphicOverview Optional resourceConstraints Optional MetadataConstraints Optional"},{"location":"user/research/#stac-api-research","title":"STAC API research","text":"<p>STAC is a standardized way to expose collections of spatial temporal data. If you are a provider of data about the earth needing to catalog your holdings, STAC is driving a uniform means for indexing assets.</p> <p>At its core, the SpatioTemporal Asset Catalog (STAC) specification provides a common structure for describing and cataloguing spatio-temporal assets.</p> <p>A spatio-temporal asset is any file that represents information about the earth captured in a certain space and time.</p>"},{"location":"user/research/#the-stac-specification","title":"The STAC Specification","text":"<p>The STAC Specification consists of 4 semi-independent specifications. Each can be used alone, but they work best in concert with one another.</p> <ul> <li> <p>STAC Item is the core atomic unit, representing a single spatio-temporal asset as a GeoJSON feature plus datetime and links.</p> </li> <li> <p>STAC Catalog is a simple, flexible JSON file of links that provides a structure to organize and browse STAC Items. A series of best practices helps make recommendations for creating real world STAC Catalogs.</p> </li> <li> <p>STAC Collection is an extension of the STAC Catalog with additional information such as the extents, license, keywords, providers, etc that describe STAC Items that fall within the Collection.</p> </li> <li> <p>STAC API provides a RESTful endpoint that enables search of STAC Items, specified in OpenAPI, following OGC's WFS 3.</p> </li> </ul>"},{"location":"user/research/#examples-of-stac-files","title":"Examples of STAC files","text":"<p>This JSON is what would be expected from an API that only implements STAC API - Core. It is a valid STAC Catalog with additional Links and a conformsTo attribute. In practice, most APIs will also implement other conformance classes, and those will be reflected in the links and conformsTo attribute. A more typical Landing Page example is in the overview document.</p> <p>This particular catalog provides both the ability to browse down to child Catalog objects through its child links, and also provides the search endpoint to be able to search across items in its collections. Note that some of those links are not required and other servers may provide different conformance classes and a different set of links.</p> <pre><code>{\n    \"stac_version\": \"1.0.0\",\n    \"id\": \"example-stac\",\n    \"title\": \"A simple STAC API Example\",\n    \"description\": \"This Catalog aims to demonstrate a simple landing page\",\n    \"type\": \"Catalog\",\n    \"conformsTo\" : [\n        \"https://api.stacspec.org/v1.0.0/core\"\n    ],\n    \"links\": [\n        {\n            \"rel\": \"self\",\n            \"type\": \"application/json\",\n            \"href\": \"https://stac-api.example.com\"\n        },\n        {\n            \"rel\": \"root\",\n            \"type\": \"application/json\",\n            \"href\": \"https://stac-api.example.com\"\n        },\n        {\n            \"rel\": \"service-desc\",\n            \"type\": \"application/vnd.oai.openapi+json;version=3.0\",\n            \"href\": \"https://stac-api.example.com/api\"\n        },\n        {\n            \"rel\": \"service-doc\",\n            \"type\": \"text/html\",\n            \"href\": \"https://stac-api.example.com/api.html\"\n        },\n        {\n            \"rel\": \"child\",\n            \"type\": \"application/json\",\n            \"href\": \"https://stac-api.example.com/catalogs/sentinel-2\"\n        },\n        {\n            \"rel\": \"child\",\n            \"type\": \"application/json\",\n            \"href\": \"https://stac-api.example.com/catalogs/landsat-8\"\n        }\n    ]\n}\n</code></pre> <p>For more information about STAC please visit https://github.com/radiantearth/stac-api-spec</p>"},{"location":"user/research/#upload-metadata","title":"Upload Metadata","text":""},{"location":"user/research/#add-metadata-via-file-upload","title":"Add Metadata via file upload","text":"<ul> <li>Metadata can be added via file upload on the Metadata page (http://{sitename}/dataset/)</li> <li>This supports xml, json and yaml files </li> </ul> <p>Please note the file needs to conform SANS 1878</p> <p>Below is an example of mandatory fields in xml format</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;``\n&lt;dataset&gt;\n        &lt;title&gt;test 2&lt;/title&gt;\n        &lt;MetadataStandardName&gt;SANS1878&lt;/MetadataStandardName&gt;\n        &lt;MetadataStandardVersion&gt;1&lt;/MetadataStandardVersion&gt;\n        &lt;notes&gt;Abstract from the dataset&lt;/notes&gt;\n        &lt;ResponsiblePartyIndividualName&gt;Hugh Mann&lt;/ResponsiblePartyIndividualName&gt;\n        &lt;ResponsiblePartyPositionName&gt;Person&lt;/ResponsiblePartyPositionName&gt;\n        &lt;ResponsiblePartyRole&gt;Point of contact&lt;/ResponsiblePartyRole&gt;\n        &lt;ResponsiblePartyElectronicMailAddress&gt;example@example.com&lt;/ResponsiblePartyElectronicMailAddress&gt;\n        &lt;IsoTopicCategory&gt;society&lt;/IsoTopicCategory&gt;\n        &lt;OwnerOrg&gt;test&lt;/OwnerOrg&gt;\n        &lt;private&gt;False&lt;/private&gt;\n        &lt;lineage_statement&gt;test&lt;/lineage_statement&gt;\n        &lt;spatial&gt;-22.1265,16.4699,-34.8212,32.8931, -22.1265&lt;/spatial&gt;\n        &lt;EquivalentScale&gt;0&lt;/EquivalentScale&gt;\n        &lt;SpatialRepresentationType&gt;001&lt;/SpatialRepresentationType&gt;\n        &lt;SpatialReferenceSystem&gt;EPSG:4326&lt;/SpatialReferenceSystem&gt;\n        &lt;ReferenceDate&gt;2004-11-03T01:00:00&lt;/ReferenceDate&gt;\n        &lt;ReferenceDateType&gt;Publication&lt;/ReferenceDateType&gt;\n        &lt;StampDate&gt;2004-11-03T00:12:00&lt;/StampDate&gt;\n        &lt;StampDateType&gt;Creation&lt;/StampDateType&gt;\n        &lt;DistributionFormatName&gt;format name&lt;/DistributionFormatName&gt;\n        &lt;DistributionFormatVersion&gt;1.0&lt;/DistributionFormatVersion&gt;\n        &lt;DatasetLanguage&gt;english&lt;/DatasetLanguage&gt;\n        &lt;MetadataLanguage&gt;English&lt;/MetadataLanguage&gt;\n        &lt;DatasetCharacterset&gt;UCS-2&lt;/DatasetCharacterset&gt;\n        &lt;MetadataCharacterset&gt;UCS-2&lt;/MetadataCharacterset&gt;\n&lt;/dataset&gt;\n</code></pre> <p>Below is an example of mandatory fields in yaml format</p> <pre><code>---\ndataset:\n  title: test-from-xml\n  MetadataStandardName: SANS1878\n  MetadataStandardVersion: 1\n  notes: Abstract from the dataset\n  ResponsiblePartyIndividualName: Hugh Mann\n  ResponsiblePartyPositionName: Person\n  ResponsiblePartyRole: Point of contact\n  ResponsiblePartyElectronicMailAddress: example@example.com\n  IsoTopicCategory: society\n  OwnerOrg: kartoza\n  private: False\n  lineage_statement: test\n  spatial: -22.1265,16.4699,-34.8212,32.8931, -22.1265\n  EquivalentScale: 0\n  SpatialRepresentationType: 001\n  SpatialReferenceSystem: EPSG:4326\n  ReferenceDate: 2004-11-03T01:00:00\n  ReferenceDateType: Publication\n  StampDate: 2004-11-03T00:12:00\n  StampDateType: Creation\n  DistributionFormatName: format name\n  DistributionFormatVersion: 1.0\n  DatasetLanguage: english\n  MetadataLanguage: English\n  DatasetCharacterset: UCS-2\n  MetadataCharacterset: UCS-2\n</code></pre> <p>Below is an example of mandatory fields in json format</p> <pre><code>{\n  \"dataset\": {\n    \"title\": \"test-from-xml\",\n    \"MetadataStandardName\": \"SANS1878\",\n    \"MetadataStandardVersion\": 1,\n    \"notes\": \"Abstract from the dataset\",\n    \"ResponsiblePartyIndividualName\": \"Hugh Mann\",\n    \"ResponsiblePartyPositionName\": \"Person\",\n    \"ResponsiblePartyRole\": \"Point of contact\",\n    \"ResponsiblePartyElectronicMailAddress\": \"example@example.com\",\n    \"IsoTopicCategory\": \"society\",\n    \"OwnerOrg\": \"kartoza\",\n    \"private\": \"False\",\n    \"lineage_statement\": \"test\",\n    \"spatial\": \"-22.1265,16.4699,-34.8212,32.8931, -22.1265\",\n    \"EquivalentScale\": 0,\n    \"SpatialRepresentationType\": 1,\n    \"SpatialReferenceSystem\": \"EPSG:4326\",\n    \"ReferenceDate\": \"2004-11-03T01:00:00\",\n    \"ReferenceDateType\": \"Publication\",\n    \"StampDate\": \"2004-11-03T00:12:00\",\n    \"StampDateType\": \"Creation\",\n    \"DistributionFormatName\": \"format name\",\n    \"DistributionFormatVersion\": 1,\n    \"DatasetLanguage\": \"english\",\n    \"MetadataLanguage\": \"English\",\n    \"DatasetCharacterset\": \"UCS-2\",\n    \"MetadataCharacterset\": \"UCS-2\"\n  }\n}\n</code></pre>"}]}